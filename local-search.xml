<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>搭建Hexo博客</title>
    <link href="/2022/08/29/%E6%90%AD%E5%BB%BAHexo%E5%8D%9A%E5%AE%A2/"/>
    <url>/2022/08/29/%E6%90%AD%E5%BB%BAHexo%E5%8D%9A%E5%AE%A2/</url>
    
    <content type="html"><![CDATA[<p>利用GitHub搭建Hexo博客</p><span id="more"></span><h1 id="环境搭建"><a href="#环境搭建" class="headerlink" title="环境搭建"></a>环境搭建</h1><h2 id="1-安装Node-js"><a href="#1-安装Node-js" class="headerlink" title="1.安装Node.js"></a>1.安装Node.js</h2><p>打开nodejs官网<a href="https://nodejs.org/en/">https://nodejs.org/en/</a>，根据系统版本选择下载并安装Node,js,安装完成后，打开cmd，输入<code>node -v</code>，如果能正确显示Node.js版本，则说明安装成功</p><h2 id="2-通过npm安装Hexo框架"><a href="#2-通过npm安装Hexo框架" class="headerlink" title="2.通过npm安装Hexo框架"></a>2.通过npm安装Hexo框架</h2><p>打开cmd，输入<code>npm install -g hexo-cli</code>,安装完成后输入<code>hexo -v</code>查看hexo版本。（淘宝的npm代码仓库：<code>npm install -g cnpm --registry=https://registry.npm.taobao.org</code>）</p><p><img src="https://yuki-picgo-img.oss-cn-beijing.aliyuncs.com/PicGo/20220829193503.png"></p><h2 id="3-安装gitforwin"><a href="#3-安装gitforwin" class="headerlink" title="3.安装gitforwin"></a>3.安装gitforwin</h2><p><a href="https://gitforwindows.org/">https://gitforwindows.org/</a> ，安装完成后打开cmd，输入<code>git</code>查看是否成功安装<img src="https://yuki-picgo-img.oss-cn-beijing.aliyuncs.com/PicGo/20220829195109.png"></p><h1 id="本地使用"><a href="#本地使用" class="headerlink" title="本地使用"></a>本地使用</h1><h2 id="1-创建博客目录"><a href="#1-创建博客目录" class="headerlink" title="1.创建博客目录"></a>1.创建博客目录</h2><p>创建一个目录用于保存博客文件</p><h2 id="2-初始化博客"><a href="#2-初始化博客" class="headerlink" title="2.初始化博客"></a>2.初始化博客</h2><p>打开Git CMD，进入博客目录，输入<code>hexo init</code>初始化博客</p><p><img src="https://yuki-picgo-img.oss-cn-beijing.aliyuncs.com/PicGo/20220829195409.png"></p><h2 id="3-启动博客"><a href="#3-启动博客" class="headerlink" title="3.启动博客"></a>3.启动博客</h2><p><code>hexo server</code><img src="https://yuki-picgo-img.oss-cn-beijing.aliyuncs.com/PicGo/20220829195741.png"></p><p><img src="https://yuki-picgo-img.oss-cn-beijing.aliyuncs.com/PicGo/20220829195810.png"></p><p>启动成功</p><h2 id="4-操作博客"><a href="#4-操作博客" class="headerlink" title="4.操作博客"></a>4.操作博客</h2><p>常用操作：创建博客、启动服务、Generate 、部署（可只写首字母）</p><p><img src="https://yuki-picgo-img.oss-cn-beijing.aliyuncs.com/PicGo/20220829195938.png"></p><h1 id="博客部署"><a href="#博客部署" class="headerlink" title="博客部署"></a>博客部署</h1><h2 id="1-生产github-io仓库"><a href="#1-生产github-io仓库" class="headerlink" title="1.生产github.io仓库"></a>1.生产github.io仓库</h2><p>登录GitHub，创建一个新的public仓库，仓库名必须为<code>YourGitHubName.github.io</code><img src="https://yuki-picgo-img.oss-cn-beijing.aliyuncs.com/PicGo/20220829211154.png"></p><h2 id="2-在博客目录下装git部署插件"><a href="#2-在博客目录下装git部署插件" class="headerlink" title="2.在博客目录下装git部署插件"></a>2.在博客目录下装git部署插件</h2><p>在目录中输入<code>npm install --save hexo-deployer-git</code><img src="https://yuki-picgo-img.oss-cn-beijing.aliyuncs.com/PicGo/20220829211626.png"></p><h2 id="3-修改本地-config-yml文件"><a href="#3-修改本地-config-yml文件" class="headerlink" title="3.修改本地_config.yml文件"></a>3.修改本地_config.yml文件</h2><p><img src="https://yuki-picgo-img.oss-cn-beijing.aliyuncs.com/PicGo/20220829213251.png"></p><h2 id="4-部署到远端"><a href="#4-部署到远端" class="headerlink" title="4.部署到远端"></a>4.部署到远端</h2><p><img src="https://yuki-picgo-img.oss-cn-beijing.aliyuncs.com/PicGo/20220829213951.png"></p><p>设置用户名和邮箱<img src="https://yuki-picgo-img.oss-cn-beijing.aliyuncs.com/PicGo/20220829214336.png"></p><p>设置完成之后<code>hexo -d</code>部署，使用仓库名即可访问</p><h2 id="5-更换主题"><a href="#5-更换主题" class="headerlink" title="5.更换主题"></a>5.更换主题</h2><h1 id="将HEXO博客部署到个人域名上"><a href="#将HEXO博客部署到个人域名上" class="headerlink" title="将HEXO博客部署到个人域名上"></a>将HEXO博客部署到个人域名上</h1><h2 id="一-购买个人域名"><a href="#一-购买个人域名" class="headerlink" title="一.购买个人域名"></a>一.购买个人域名</h2><h2 id="二-为域名设置DNS解析"><a href="#二-为域名设置DNS解析" class="headerlink" title="二.为域名设置DNS解析"></a>二.为域名设置DNS解析</h2><ul><li>进入[阿里云][1]主页</li><li>进入控制台<br><img src="https://yuki-picgo-img.oss-cn-beijing.aliyuncs.com/vscode-img/20220404220851.png" alt="20220404220851"></li><li>进入域名控制台<img src="https://yuki-picgo-img.oss-cn-beijing.aliyuncs.com/vscode-img/20220404220947.png" alt="20220404220947"></li><li>点击操作处的解析按钮进入解析设置<img src="https://yuki-picgo-img.oss-cn-beijing.aliyuncs.com/vscode-img/20220404221113.png" alt="20220404221113"></li><li>添加如图两条记录<br><img src="https://yuki-picgo-img.oss-cn-beijing.aliyuncs.com/vscode-img/20220404222847.png" alt="20220404222847"></li></ul><ol><li>一条记录值为github项目地址（搭建hexo时的那个项目地址）</li><li>另二条记录值为github项目地址对应的ip地址</li></ol><blockquote><p>win+R打开cmd，<code>ping 你的github用户名.github.io</code><br><img src="https://yuki-picgo-img.oss-cn-beijing.aliyuncs.com/vscode-img/20220404223237.png" alt="20220404223237"></p></blockquote><h2 id="三-创建-CNAME-文件"><a href="#三-创建-CNAME-文件" class="headerlink" title="三.创建 CNAME 文件"></a>三.创建 CNAME 文件</h2><p>在hexo本地目录 source 目录下面新建一个文件，取名为 CNAME (无后缀)，内容就是你购买的域名<br><img src="https://yuki-picgo-img.oss-cn-beijing.aliyuncs.com/vscode-img/20220404223328.png" alt="20220404223328"><br><img src="https://yuki-picgo-img.oss-cn-beijing.aliyuncs.com/vscode-img/20220404223353.png" alt="20220404223353"></p><h2 id="四-测试"><a href="#四-测试" class="headerlink" title="四.测试"></a>四.测试</h2><ol><li>hexo g：生成CNAME文件</li><li>hexo d</li><li>输入域名，看能否成功访问</li></ol><h2 id="五-最后一步"><a href="#五-最后一步" class="headerlink" title="五.最后一步"></a>五.最后一步</h2><p>在GitHub仓库地址，选择settings，一直往下翻找到GitHub Pages<br><img src="https://yuki-picgo-img.oss-cn-beijing.aliyuncs.com/vscode-img/20220404223554.png" alt="20220404223554"><br>CTRL+F搜索GitHub Pages，点击check it out here！<img src="https://yuki-picgo-img.oss-cn-beijing.aliyuncs.com/vscode-img/20220404223708.png" alt="20220404223708"><br><img src="https://yuki-picgo-img.oss-cn-beijing.aliyuncs.com/vscode-img/20220404223846.png" alt="20220404223846"></p>]]></content>
    
    
    
    <tags>
      
      <tag>Hexo</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>搭建动态网站</title>
    <link href="/2022/05/02/%E6%90%AD%E5%BB%BA%E5%8A%A8%E6%80%81%E7%BD%91%E9%A1%B5/"/>
    <url>/2022/05/02/%E6%90%AD%E5%BB%BA%E5%8A%A8%E6%80%81%E7%BD%91%E9%A1%B5/</url>
    
    <content type="html"><![CDATA[<p>Spring Boot + MyBatis Plus + Thymeleaf + MySQL搭建动态网站</p><span id="more"></span><h1 id="一、技术框架"><a href="#一、技术框架" class="headerlink" title="一、技术框架"></a>一、技术框架</h1><p>Spring Boot + MyBatis Plus + Thymeleaf + MySQL</p><h1 id="二、前端页面"><a href="#二、前端页面" class="headerlink" title="二、前端页面"></a>二、前端页面</h1><h1 id="三、数据库"><a href="#三、数据库" class="headerlink" title="三、数据库"></a>三、数据库</h1><h1 id="四、项目开发"><a href="#四、项目开发" class="headerlink" title="四、项目开发"></a>四、项目开发</h1><h2 id="1-创建springboot工程，选择对应依赖"><a href="#1-创建springboot工程，选择对应依赖" class="headerlink" title="1. 创建springboot工程，选择对应依赖"></a>1. 创建springboot工程，选择对应依赖</h2><h2 id="2-修改相关配置，导入静态资源"><a href="#2-修改相关配置，导入静态资源" class="headerlink" title="2. 修改相关配置，导入静态资源"></a>2. 修改相关配置，导入静态资源</h2><ol><li><p>修改<code>application.properties</code>为<code>application.yml</code>，并向其添加如下信息实现资源的访问（可以不做，默认配置也可以）</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-attr">spring:</span><br>  <span class="hljs-attr">thymeleaf:</span><br>    <span class="hljs-attr">prefix:</span> <span class="hljs-string">classpath:/static/</span><br>    <span class="hljs-attr">suffix:</span> <span class="hljs-string">.html</span><br><br><span class="hljs-attr">server:</span><br>  <span class="hljs-attr">port:</span> <span class="hljs-number">8181</span><br></code></pre></td></tr></table></figure></li><li><p>创建<code> RedirectController</code>，实现页面的映射<img src="https://yuki-picgo-img.oss-cn-beijing.aliyuncs.com/yuque-img/20220512013152.png"></p></li><li><p>创建<code>RedirectController</code>，实现页面映射</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@Controller</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">RedirectController</span> &#123;<br>    <span class="hljs-comment">//页面映射</span><br>    <span class="hljs-meta">@GetMapping(&quot;/&#123;url&#125;&quot;)</span><br>    <span class="hljs-keyword">public</span> String <span class="hljs-title function_">redirect</span><span class="hljs-params">(<span class="hljs-meta">@PathVariable(&quot;url&quot;)</span> String url)</span>&#123; <span class="hljs-keyword">return</span> url;&#125;<br>    <span class="hljs-comment">//什么都不输入的时候（主页 默认页面）</span><br>    <span class="hljs-meta">@GetMapping(&quot;/&quot;)</span><br>    <span class="hljs-keyword">public</span> String <span class="hljs-title function_">main</span><span class="hljs-params">()</span>&#123; <span class="hljs-keyword">return</span> <span class="hljs-string">&quot;redirect:/index&quot;</span>;&#125;<br>    <span class="hljs-comment">//解决错误 没有也没啥</span><br>    <span class="hljs-meta">@GetMapping(&quot;favicon.ico&quot;)</span><br>    <span class="hljs-meta">@ResponseBody</span><br>    <span class="hljs-keyword">void</span> <span class="hljs-title function_">returnNoFacicon</span><span class="hljs-params">()</span>&#123;&#125;<br>&#125;<br></code></pre></td></tr></table></figure><p><img src="https://yuki-picgo-img.oss-cn-beijing.aliyuncs.com/yuque-img/20220512013346.png"></p></li></ol><h2 id="3-使用MyBatis-Plus-连接数据库，自动生成代码（Controller、Service、Entity、Mapper）"><a href="#3-使用MyBatis-Plus-连接数据库，自动生成代码（Controller、Service、Entity、Mapper）" class="headerlink" title="3.使用MyBatis Plus 连接数据库，自动生成代码（Controller、Service、Entity、Mapper）"></a>3.使用MyBatis Plus 连接数据库，自动生成代码（Controller、Service、Entity、Mapper）</h2><ol><li><p>在pom.xml里引入MyBatis Plus依赖</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>com.baomidou<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>mybatis-plus-boot-starter<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">version</span>&gt;</span>3.4.3.1<span class="hljs-tag">&lt;/<span class="hljs-name">version</span>&gt;</span><br>        <span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>com.baomidou<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>mybatis-plus-generator<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">version</span>&gt;</span>3.3.2<span class="hljs-tag">&lt;/<span class="hljs-name">version</span>&gt;</span><br>        <span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>org.apache.velocity<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>velocity<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">version</span>&gt;</span>1.7<span class="hljs-tag">&lt;/<span class="hljs-name">version</span>&gt;</span><br>        <span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span><br></code></pre></td></tr></table></figure></li><li><p>自动生成代码，点击运行</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">package</span> com.yuki.travel;<br><br><span class="hljs-keyword">import</span> com.baomidou.mybatisplus.annotation.DbType;<br><span class="hljs-keyword">import</span> com.baomidou.mybatisplus.annotation.FieldFill;<br><span class="hljs-keyword">import</span> com.baomidou.mybatisplus.generator.AutoGenerator;<br><span class="hljs-keyword">import</span> com.baomidou.mybatisplus.generator.config.DataSourceConfig;<br><span class="hljs-keyword">import</span> com.baomidou.mybatisplus.generator.config.GlobalConfig;<br><span class="hljs-keyword">import</span> com.baomidou.mybatisplus.generator.config.PackageConfig;<br><span class="hljs-keyword">import</span> com.baomidou.mybatisplus.generator.config.StrategyConfig;<br><span class="hljs-keyword">import</span> com.baomidou.mybatisplus.generator.config.po.TableFill;<br><span class="hljs-keyword">import</span> com.baomidou.mybatisplus.generator.config.rules.NamingStrategy;<br><br><span class="hljs-keyword">import</span> java.util.ArrayList;<br><span class="hljs-keyword">import</span> java.util.List;<br><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">Main</span> &#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">main</span><span class="hljs-params">(String[] args)</span> &#123;<br>        <span class="hljs-type">AutoGenerator</span> <span class="hljs-variable">autoGenerator</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">AutoGenerator</span>();<br>        <span class="hljs-type">DataSourceConfig</span> <span class="hljs-variable">dataSourceConfig</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">DataSourceConfig</span>();<br>        <span class="hljs-comment">//数据源</span><br>        dataSourceConfig.setDbType(DbType.MYSQL);<br>        <span class="hljs-comment">//驱动名称</span><br>        dataSourceConfig.setDriverName(<span class="hljs-string">&quot;com.mysql.cj.jdbc.Driver&quot;</span>);<br>        <span class="hljs-comment">//数据库用户名密码url</span><br>        dataSourceConfig.setUsername(<span class="hljs-string">&quot;root&quot;</span>);<br>        dataSourceConfig.setPassword(<span class="hljs-string">&quot;109372&quot;</span>);<br>        dataSourceConfig.setUrl(<span class="hljs-string">&quot;jdbc:mysql://localhost:3306/mall?useUnicode=true&amp;characterEncoding=UTF-8&quot;</span>);<br>        autoGenerator.setDataSource(dataSourceConfig);<br>        <span class="hljs-type">GlobalConfig</span> <span class="hljs-variable">globalConfig</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">GlobalConfig</span>();<br>        <span class="hljs-comment">//代码生成之后是否自动打开（文件夹）</span><br>        globalConfig.setOpen(<span class="hljs-literal">false</span>);<br>        <span class="hljs-comment">//生成代码的路径</span><br>        globalConfig.setOutputDir(System.getProperty(<span class="hljs-string">&quot;user.dir&quot;</span>)+<span class="hljs-string">&quot;/src/main/java&quot;</span>);<br>        <span class="hljs-comment">//作者</span><br>        globalConfig.setAuthor(<span class="hljs-string">&quot;Yuki&quot;</span>);<br>        <span class="hljs-comment">//service层命名，后面补一个Service（user→userService）</span><br>        globalConfig.setServiceName(<span class="hljs-string">&quot;%sService&quot;</span>);<br>        autoGenerator.setGlobalConfig(globalConfig);<br>        <span class="hljs-type">PackageConfig</span> <span class="hljs-variable">packageConfig</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">PackageConfig</span>();<br>        <span class="hljs-comment">//设置包信息</span><br>        packageConfig.setParent(<span class="hljs-string">&quot;com.yuki&quot;</span>);<br>        packageConfig.setEntity(<span class="hljs-string">&quot;entity&quot;</span>);<br>        packageConfig.setMapper(<span class="hljs-string">&quot;mapper&quot;</span>);<br>        packageConfig.setController(<span class="hljs-string">&quot;controller&quot;</span>);<br>        packageConfig.setService(<span class="hljs-string">&quot;service&quot;</span>);<br>        packageConfig.setServiceImpl(<span class="hljs-string">&quot;service.impl&quot;</span>);<br>        autoGenerator.setPackageInfo(packageConfig);<br>        <span class="hljs-type">StrategyConfig</span> <span class="hljs-variable">strategyConfig</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">StrategyConfig</span>();<br>        <span class="hljs-comment">//是否给实体类添加Lombok</span><br>        strategyConfig.setEntityLombokModel(<span class="hljs-literal">true</span>);<br>        <span class="hljs-comment">//下划线转驼峰，表名映射到类名</span><br>        strategyConfig.setNaming(NamingStrategy.underline_to_camel);<br>        <span class="hljs-comment">//字段的映射</span><br>        strategyConfig.setColumnNaming(NamingStrategy.underline_to_camel);<br><br>        List&lt;TableFill&gt; list = <span class="hljs-keyword">new</span> <span class="hljs-title class_">ArrayList</span>&lt;&gt;();<br>        <span class="hljs-comment">//创建时间和修改时间</span><br>        <span class="hljs-type">TableFill</span> <span class="hljs-variable">tableFill1</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">TableFill</span>(<span class="hljs-string">&quot;create_time&quot;</span>, FieldFill.INSERT);<br>        <span class="hljs-type">TableFill</span> <span class="hljs-variable">tableFill2</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">TableFill</span>(<span class="hljs-string">&quot;update_time&quot;</span>,FieldFill.INSERT_UPDATE);<br>        list.add(tableFill1);<br>        list.add(tableFill2);<br><br>        strategyConfig.setTableFillList(list);<br>        autoGenerator.setStrategy(strategyConfig);<br><br>        autoGenerator.execute();<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure></li><li><p>运行成功<img src="https://yuki-picgo-img.oss-cn-beijing.aliyuncs.com/yuque-img/20220512163252.png"> <img src="https://yuki-picgo-img.oss-cn-beijing.aliyuncs.com/yuque-img/20220512163356.png"></p></li><li><p>扫描<code>mapper</code>接口<img src="https://yuki-picgo-img.oss-cn-beijing.aliyuncs.com/yuque-img/20220512164321.png"></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@MapperScan(&quot;com.travelweb.mapper&quot;)</span><br></code></pre></td></tr></table></figure></li><li><p>配置数据库，引入<code>mybatis-plus</code>之后它会连数据库<img src="https://yuki-picgo-img.oss-cn-beijing.aliyuncs.com/yuque-img/20220512164749.png"></p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs yml"><span class="hljs-attr">spring:</span><br>  <span class="hljs-attr">datasource:</span><br>    <span class="hljs-attr">url:</span> <span class="hljs-string">jdbc:mysql://localhost:3306/mall?useUnicode=true&amp;characterEncoding=UTF-8</span><br>    <span class="hljs-attr">username:</span> <span class="hljs-string">root</span><br>    <span class="hljs-attr">password:</span> <span class="hljs-number">109372</span><br>    <span class="hljs-attr">driver-class-name:</span> <span class="hljs-string">com.mysql.cj.jdbc.Driver</span><br><span class="hljs-attr">mybatis-plus:</span><br>  <span class="hljs-attr">configuration:</span><br>    <span class="hljs-attr">log-impl:</span> <span class="hljs-string">org.apache.ibatis.logging.stdout.StdOutImpl</span><br>  <span class="hljs-attr">mapper-locations:</span> <span class="hljs-string">classpath:com/travelweb/mapper/xml/*.xml</span><br><br></code></pre></td></tr></table></figure></li></ol><h1 id="五、统一异常处理"><a href="#五、统一异常处理" class="headerlink" title="五、统一异常处理"></a>五、统一异常处理</h1><h3 id="流程："><a href="#流程：" class="headerlink" title="流程："></a>流程：<img src="https://yuki-picgo-img.oss-cn-beijing.aliyuncs.com/yuque-img/%E5%8F%91%E7%8E%B0%E9%94%99%E8%AF%AF%EF%BC%8C%E6%8A%9B%E5%BC%82%E5%B8%B8.png"></h3><ol><li><p>新建异常，继承<code>RuntimeException</code>，在里面写异常内容<img src="https://yuki-picgo-img.oss-cn-beijing.aliyuncs.com/yuque-img/20220512173145.png"></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">package</span> com.travelweb.exception;<br><br><span class="hljs-keyword">import</span> com.travelweb.result.ResponseEnum;<br><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">UnifiedException</span>  <span class="hljs-keyword">extends</span> <span class="hljs-title class_">RuntimeException</span>&#123;<br>    <span class="hljs-keyword">private</span> ResponseEnum responseEnum;<br><br>    <span class="hljs-keyword">public</span> ResponseEnum <span class="hljs-title function_">getResponseEnum</span><span class="hljs-params">()</span> &#123;<br>        <span class="hljs-keyword">return</span> responseEnum;<br>    &#125;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">setResponseEnum</span><span class="hljs-params">(ResponseEnum responseEnum)</span> &#123;<br>        <span class="hljs-built_in">this</span>.responseEnum = responseEnum;<br>    &#125;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-title function_">UnifiedException</span><span class="hljs-params">(ResponseEnum responseEnum)</span> &#123;<br>        <span class="hljs-built_in">super</span>(responseEnum.getMsg());<br>        <span class="hljs-built_in">this</span>.responseEnum = responseEnum;<br>    &#125;<br>&#125;<br><br></code></pre></td></tr></table></figure></li><li><p>所有错误提前写好，新建枚举类型<code>ResponseEnum</code>，将所有错误提前定义好<img src="https://yuki-picgo-img.oss-cn-beijing.aliyuncs.com/yuque-img/20220512173228.png"></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">package</span> com.travelweb.result;<br><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">enum</span> <span class="hljs-title class_">ResponseEnum</span> &#123;<br>    USER_INFO_NULL(<span class="hljs-number">300</span>,<span class="hljs-string">&quot;用户信息不能为空&quot;</span>),<br>    EMAIL_ERROR(<span class="hljs-number">301</span>,<span class="hljs-string">&quot;邮箱格式错误&quot;</span>),<br>    MOBILE_ERROR(<span class="hljs-number">302</span>,<span class="hljs-string">&quot;手机格式错误&quot;</span>),<br>    USERNAME_EXISTS(<span class="hljs-number">303</span>,<span class="hljs-string">&quot;用户名已存在&quot;</span>),<br>    USER_REGISTER_ERROR(<span class="hljs-number">304</span>,<span class="hljs-string">&quot;用户注册失败&quot;</span>),<br>    USERNAME_NOT_EXISTS(<span class="hljs-number">305</span>,<span class="hljs-string">&quot;用户名不存在&quot;</span>),<br>    PASSWORD_ERROR(<span class="hljs-number">306</span>,<span class="hljs-string">&quot;密码错误&quot;</span>),<br>    PARAMETER_NULL(<span class="hljs-number">307</span>,<span class="hljs-string">&quot;参数为空&quot;</span>),<br>    NOT_LOGIN(<span class="hljs-number">308</span>,<span class="hljs-string">&quot;未登录&quot;</span>),<br>    CART_ADD_ERROR(<span class="hljs-number">309</span>,<span class="hljs-string">&quot;添加购物车失败&quot;</span>),<br>    PRODUCT_NOT_EXISTS(<span class="hljs-number">310</span>,<span class="hljs-string">&quot;商品不存在&quot;</span>),<br>    PRODUCT_STOCK_ERROR(<span class="hljs-number">311</span>,<span class="hljs-string">&quot;商品库存不足&quot;</span>),<br>    CART_UPDATE_ERROR(<span class="hljs-number">312</span>,<span class="hljs-string">&quot;更新购物车失败&quot;</span>),<br>    CART_UPDATE_PARAMETER_ERROR(<span class="hljs-number">313</span>,<span class="hljs-string">&quot;更新购物车参数异常&quot;</span>),<br>    CART_UPDATE_STOCK_ERROR(<span class="hljs-number">314</span>,<span class="hljs-string">&quot;更新商品库存失败&quot;</span>),<br>    CART_REMOVE_ERROR(<span class="hljs-number">315</span>,<span class="hljs-string">&quot;删除购物车失败&quot;</span>),<br>    ORDERS_CREATE_ERROR(<span class="hljs-number">316</span>,<span class="hljs-string">&quot;创建订单主表失败&quot;</span>),<br>    ORDER_DETAIL_CREATE_ERROR(<span class="hljs-number">317</span>,<span class="hljs-string">&quot;创建订单详情失败&quot;</span>),<br>    USER_ADDRESS_ADD_ERROR(<span class="hljs-number">318</span>,<span class="hljs-string">&quot;添加新地址失败&quot;</span>),<br>    USER_ADDRESS_SET_DEFAULT_ERROR(<span class="hljs-number">319</span>,<span class="hljs-string">&quot;默认地址修改失败&quot;</span>);<br><br>    <span class="hljs-keyword">public</span> Integer <span class="hljs-title function_">getCode</span><span class="hljs-params">()</span> &#123;<br>        <span class="hljs-keyword">return</span> code;<br>    &#125;<br><br>    <span class="hljs-keyword">public</span> String <span class="hljs-title function_">getMsg</span><span class="hljs-params">()</span> &#123;<br>        <span class="hljs-keyword">return</span> msg;<br>    &#125;<br><br>    <span class="hljs-keyword">private</span> Integer code;<br>    <span class="hljs-keyword">private</span> String msg;<br><br>    ResponseEnum(Integer code, String msg) &#123;<br>        <span class="hljs-built_in">this</span>.code = code;<br>        <span class="hljs-built_in">this</span>.msg = msg;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure></li><li><p>回到<code>UserController</code>,添加<code>@Slf4j</code>注解打印日志。抛异常<img src="https://yuki-picgo-img.oss-cn-beijing.aliyuncs.com/yuque-img/20220512173732.png"></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">//打印日志，抛异常</span><br>log.info(<span class="hljs-string">&quot;【用户注册】用户信息不能为空&quot;</span>);<br><span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">UnifiedException</span>(ResponseEnum.USER_INFO_NULL);<br></code></pre></td></tr></table></figure></li><li><p>新建<code>UnifiedExceptionHandler</code>,对异常进行统一处理<img src="https://yuki-picgo-img.oss-cn-beijing.aliyuncs.com/yuque-img/20220512174232.png"></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">package</span> com.travelweb.exception;<br><br><span class="hljs-keyword">import</span> com.travelweb.result.ResponseEnum;<br><span class="hljs-keyword">import</span> org.springframework.web.bind.annotation.ExceptionHandler;<br><span class="hljs-keyword">import</span> org.springframework.web.bind.annotation.RestControllerAdvice;<br><span class="hljs-keyword">import</span> org.springframework.web.servlet.ModelAndView;<br><br><span class="hljs-meta">@RestControllerAdvice</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">UnifiedExceptionHandler</span> &#123;<br><br>    <span class="hljs-meta">@ExceptionHandler(value = UnifiedException.class)</span><br>    <span class="hljs-keyword">public</span> ModelAndView <span class="hljs-title function_">handlerException</span><span class="hljs-params">(UnifiedException e)</span>&#123;<br>        <span class="hljs-type">ModelAndView</span> <span class="hljs-variable">modelAndView</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">ModelAndView</span>();<br>        <span class="hljs-type">ResponseEnum</span> <span class="hljs-variable">responseEnum</span> <span class="hljs-operator">=</span> e.getResponseEnum();<br>        <span class="hljs-keyword">switch</span> (responseEnum.getCode())&#123;<br>            <span class="hljs-keyword">case</span> <span class="hljs-number">301</span>:<br>                modelAndView.setViewName(<span class="hljs-string">&quot;register&quot;</span>);<br>                modelAndView.addObject(<span class="hljs-string">&quot;emailError&quot;</span>, responseEnum.getMsg());<br>                <span class="hljs-keyword">break</span>;<br>            <span class="hljs-keyword">case</span> <span class="hljs-number">302</span>:<br>                modelAndView.setViewName(<span class="hljs-string">&quot;register&quot;</span>);<br>                modelAndView.addObject(<span class="hljs-string">&quot;mobileError&quot;</span>, responseEnum.getMsg());<br>                <span class="hljs-keyword">break</span>;<br>            <span class="hljs-keyword">case</span> <span class="hljs-number">303</span>:<br>                modelAndView.setViewName(<span class="hljs-string">&quot;register&quot;</span>);<br>                modelAndView.addObject(<span class="hljs-string">&quot;userNameExists&quot;</span>, responseEnum.getMsg());<br>                <span class="hljs-keyword">break</span>;<br>            <span class="hljs-keyword">case</span> <span class="hljs-number">305</span>:<br>                modelAndView.setViewName(<span class="hljs-string">&quot;login&quot;</span>);<br>                modelAndView.addObject(<span class="hljs-string">&quot;userNameError&quot;</span>,responseEnum.getMsg());<br>                <span class="hljs-keyword">break</span>;<br>            <span class="hljs-keyword">case</span> <span class="hljs-number">306</span>:<br>                modelAndView.setViewName(<span class="hljs-string">&quot;login&quot;</span>);<br>                modelAndView.addObject(<span class="hljs-string">&quot;passwordError&quot;</span>,responseEnum.getMsg());<br>            <span class="hljs-keyword">case</span> <span class="hljs-number">308</span>:<br>                modelAndView.setViewName(<span class="hljs-string">&quot;login&quot;</span>);<br>                <span class="hljs-keyword">break</span>;<br>        &#125;<br>        <span class="hljs-keyword">return</span> modelAndView;<br>    &#125;<br><br>&#125;<br><br></code></pre></td></tr></table></figure></li><li><p>前端使用<code>th:text=&quot;$&#123;atributeName&#125;&quot;</code>标签展示错误信息</p></li></ol><h1 id="六、注册"><a href="#六、注册" class="headerlink" title="六、注册"></a>六、注册</h1><h2 id="1-前端数据校验"><a href="#1-前端数据校验" class="headerlink" title="1.前端数据校验"></a>1.前端数据校验</h2><ol><li><p>前台非空校验和格式校验，使用正则表达式<img src="https://yuki-picgo-img.oss-cn-beijing.aliyuncs.com/yuque-img/20220512165058.png"></p></li><li><p>通过<code>post</code>方式提交到<code>register</code>方法<img src="https://yuki-picgo-img.oss-cn-beijing.aliyuncs.com/yuque-img/20220512165311.png"></p></li><li><p>到<code>UserController</code>,写<code>register</code>方法<img src="https://yuki-picgo-img.oss-cn-beijing.aliyuncs.com/yuque-img/20220512165637.png"></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@PostMapping(&quot;/register&quot;)</span><br><span class="hljs-keyword">public</span> String <span class="hljs-title function_">register</span><span class="hljs-params">()</span>&#123;&#125;<br></code></pre></td></tr></table></figure></li><li><p>拿到前端发送的数据，封装<code>User</code>对象，进行测试，后台成功获取数据<img src="https://yuki-picgo-img.oss-cn-beijing.aliyuncs.com/yuque-img/20220512170112.png"><img src="https://yuki-picgo-img.oss-cn-beijing.aliyuncs.com/yuque-img/20220512170057.png"></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">public</span> String <span class="hljs-title function_">register</span><span class="hljs-params">(User user)</span>&#123;<br>    System.out.println(user);<br>    <span class="hljs-keyword">return</span> <span class="hljs-literal">null</span>；<br>&#125;<br></code></pre></td></tr></table></figure></li></ol><h2 id="2-后端数据校验"><a href="#2-后端数据校验" class="headerlink" title="2.后端数据校验"></a>2.后端数据校验</h2><h3 id="1、后端非空校验"><a href="#1、后端非空校验" class="headerlink" title="1、后端非空校验"></a>1、后端非空校验</h3><ol><li><p>后端进行数据校验，非空校验、格式校验（不经过前端直接向后台提交数据）</p></li><li><p>在<code>pom.xml</code>中引入依赖，由<code>springmvc</code>完成校验</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>org.hibernate<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>hibernate-validator<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">version</span>&gt;</span>5.2.4.Final<span class="hljs-tag">&lt;/<span class="hljs-name">version</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>javax.validation<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>validation-api<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>org.jboss.logging<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>jboss-logging<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span><br></code></pre></td></tr></table></figure></li><li><p>创建表单<code>UserRegisterForm</code>专门进行校验<img src="https://yuki-picgo-img.oss-cn-beijing.aliyuncs.com/yuque-img/20220512171021.png"></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">package</span> com.travelweb.form;<br><br><span class="hljs-keyword">import</span> lombok.Data;<br><span class="hljs-keyword">import</span> org.hibernate.validator.constraints.NotEmpty;<br><br><span class="hljs-keyword">import</span> javax.validation.constraints.NotNull;<br><br><span class="hljs-meta">@Data</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">UserRegisterForm</span> &#123;<br>    <span class="hljs-meta">@NotEmpty(message = &quot;登录名不能为空&quot;)</span><br>    <span class="hljs-keyword">private</span> String loginName;<br>    <span class="hljs-meta">@NotEmpty(message = &quot;用户名不能为空&quot;)</span><br>    <span class="hljs-keyword">private</span> String userName;<br>    <span class="hljs-meta">@NotEmpty(message = &quot;密码不能为空&quot;)</span><br>    <span class="hljs-keyword">private</span> String password;<br>    <span class="hljs-meta">@NotNull(message = &quot;性别不能为空&quot;)</span><br>    <span class="hljs-keyword">private</span> Integer gender;<br>    <span class="hljs-meta">@NotEmpty(message = &quot;邮箱不能为空&quot;)</span><br>    <span class="hljs-keyword">private</span> String email;<br>    <span class="hljs-meta">@NotEmpty(message = &quot;手机不能为空&quot;)</span><br>    <span class="hljs-keyword">private</span> String mobile;<br>&#125;<br><br></code></pre></td></tr></table></figure></li><li><p>修改<code>UserController</code>，添加<code>Valid</code>注解启动校验（前端传来的数据封装成<code>UserRegisterForm</code>对象，再根据注解进行校验，错误信息封装到<code>BindingResult</code>中，只需要判断<code>bindingResult</code>中有没有错误信息即可）<img src="https://yuki-picgo-img.oss-cn-beijing.aliyuncs.com/yuque-img/20220512171902.png"></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@Controller</span><br><span class="hljs-meta">@RequestMapping(&quot;/user&quot;)</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">UserController</span> &#123;<br>    <span class="hljs-meta">@PostMapping(&quot;/register&quot;)</span><br>    <span class="hljs-keyword">public</span> String <span class="hljs-title function_">register</span><span class="hljs-params">(<span class="hljs-meta">@Valid</span> UserRegisterForm userRegisterForm, BindingResult bindingResult)</span>&#123;<br>        <span class="hljs-comment">//判断bindingResult中有没有错误</span><br>        <span class="hljs-keyword">if</span> (bindingResult.hasErrors())&#123;<br>            <span class="hljs-comment">//将错误信息编成一个集合 bindingResult.getAllErrors().var</span><br>            List&lt;ObjectError&gt; allErrors = bindingResult.getAllErrors();<br>        &#125;<br>        <span class="hljs-keyword">return</span> <span class="hljs-literal">null</span>;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure></li><li><p>修改逻辑为如果有错误，则抛异常<img src="https://yuki-picgo-img.oss-cn-beijing.aliyuncs.com/yuque-img/20220515001401.png"></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@Controller</span><br><span class="hljs-meta">@RequestMapping(&quot;/user&quot;)</span><br><span class="hljs-meta">@Slf4j</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">UserController</span> &#123;<br>    <span class="hljs-meta">@PostMapping(&quot;/register&quot;)</span><br>    <span class="hljs-keyword">public</span> String <span class="hljs-title function_">register</span><span class="hljs-params">(<span class="hljs-meta">@Valid</span> UserRegisterForm userRegisterForm, BindingResult bindingResult)</span>&#123;<br>        <span class="hljs-comment">//判断bindingResult中有没有错误</span><br>        <span class="hljs-keyword">if</span> (bindingResult.hasErrors())&#123;<br>            <span class="hljs-comment">//打印日志，抛异常</span><br>            log.info(<span class="hljs-string">&quot;【用户注册】用户信息不能为空&quot;</span>);<br>            <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">UnifiedException</span>(ResponseEnum.USER_INFO_NULL);<br>        &#125;<br>        <span class="hljs-keyword">return</span> <span class="hljs-literal">null</span>;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure></li></ol><h3 id="2、后端格式校验"><a href="#2、后端格式校验" class="headerlink" title="2、后端格式校验"></a>2、后端格式校验<img src="https://yuki-picgo-img.oss-cn-beijing.aliyuncs.com/yuque-img/20220515001943.png"></h3><ol><li><p>邮箱格式校验</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">if</span>(!RegexValidateUtil.checkEmail(userRegisterForm.getEmail()))&#123;<br>            log.info(<span class="hljs-string">&quot;【用户注册】邮箱格式错误&quot;</span>);<br>            <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">UnifiedException</span>(ResponseEnum.EMAIL_ERROR);<br>        &#125;<br></code></pre></td></tr></table></figure></li><li><p>手机格式校验</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">if</span>(!RegexValidateUtil.checkMobile(userRegisterForm.getMobile()))&#123;<br>            log.info(<span class="hljs-string">&quot;【用户注册】手机格式错误&quot;</span>);<br>            <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">UnifiedException</span>(ResponseEnum.MOBILE_ERROR);<br>        &#125;<br></code></pre></td></tr></table></figure></li></ol><h3 id="3、判断用户名是否存在"><a href="#3、判断用户名是否存在" class="headerlink" title="3、判断用户名是否存在"></a>3、判断用户名是否存在</h3><ol><li><p>注入<code>UserService</code></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@Autowired</span><br><span class="hljs-keyword">private</span> UserService userService;<br></code></pre></td></tr></table></figure></li><li><p>进行条件查询判断用户名是否可用，根据字段<code>login_name</code>查询，拿到数据判断是否为空，不为空，说明用户名已经存在<img src="https://yuki-picgo-img.oss-cn-beijing.aliyuncs.com/yuque-img/20220515004557.png"></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs java">QueryWrapper&lt;User&gt; queryWrapper = <span class="hljs-keyword">new</span> <span class="hljs-title class_">QueryWrapper</span>&lt;&gt;();<br>queryWrapper.eq(<span class="hljs-string">&quot;login_name&quot;</span>, userRegisterForm.getLoginName());<br><span class="hljs-type">User</span> <span class="hljs-variable">one</span> <span class="hljs-operator">=</span> <span class="hljs-built_in">this</span>.userService.getOne(queryWrapper);<br><span class="hljs-keyword">if</span>(one != <span class="hljs-literal">null</span>)&#123;<br>    log.info(<span class="hljs-string">&quot;【用户注册】用户名已存在&quot;</span>);<br>    <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">UnifiedException</span>(ResponseEnum.USERNAME_EXISTS);<br>&#125;<br></code></pre></td></tr></table></figure></li></ol><h2 id="3-优化结构"><a href="#3-优化结构" class="headerlink" title="3.优化结构"></a>3.优化结构</h2><p>各种校验放到<code>Service</code>层中处理，前端只负责接收数据，调用<code>Service</code>层</p><ol><li><p>在<code>Service</code>层中定义方法，传入<code>userRegisterForm</code>对象，返回一个<code>User</code>结果<img src="C:\Users\10937\AppData\Roaming\Typora\typora-user-images\image-20220515005110557.png" alt="image-20220515005110557"></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">package</span> com.travelweb.service;<br><br><span class="hljs-keyword">import</span> com.travelweb.entity.User;<br><span class="hljs-keyword">import</span> com.baomidou.mybatisplus.extension.service.IService;<br><span class="hljs-keyword">import</span> com.travelweb.form.UserRegisterForm;<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * &lt;p&gt;</span><br><span class="hljs-comment"> *  服务类</span><br><span class="hljs-comment"> * &lt;/p&gt;</span><br><span class="hljs-comment"> *</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@author</span> Yuki</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@since</span> 2022-05-12</span><br><span class="hljs-comment"> */</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">interface</span> <span class="hljs-title class_">UserService</span> <span class="hljs-keyword">extends</span> <span class="hljs-title class_">IService</span>&lt;User&gt; &#123;<br>    <span class="hljs-keyword">public</span> User <span class="hljs-title function_">register</span><span class="hljs-params">(UserRegisterForm userRegisterForm)</span>;<br>&#125;<br></code></pre></td></tr></table></figure></li><li><p>到服务实现类<code>Impl</code>中重写方法（CTRL+I）<img src="https://yuki-picgo-img.oss-cn-beijing.aliyuncs.com/yuque-img/20220515005410.png"></p></li><li><p>将各种校验逻辑放到<code>Impl</code>当中<img src="https://yuki-picgo-img.oss-cn-beijing.aliyuncs.com/yuque-img/20220515005535.png"></p></li><li><p>添加<code>@Slf4j</code>注解，已经在<code>Service</code>当中了，不能再调<code>Service</code>了。在<code>Service</code>层调<code>Mapper</code>。方法名也不是<code>getOne</code>了，换成<code>selectOne</code>，其它都一样<img src="https://yuki-picgo-img.oss-cn-beijing.aliyuncs.com/yuque-img/20220515005922.png"></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">package</span> com.travelweb.service.impl;<br><br><span class="hljs-keyword">import</span> com.baomidou.mybatisplus.core.conditions.query.QueryWrapper;<br><span class="hljs-keyword">import</span> com.travelweb.entity.User;<br><span class="hljs-keyword">import</span> com.travelweb.exception.UnifiedException;<br><span class="hljs-keyword">import</span> com.travelweb.form.UserRegisterForm;<br><span class="hljs-keyword">import</span> com.travelweb.mapper.UserMapper;<br><span class="hljs-keyword">import</span> com.travelweb.result.ResponseEnum;<br><span class="hljs-keyword">import</span> com.travelweb.service.UserService;<br><span class="hljs-keyword">import</span> com.baomidou.mybatisplus.extension.service.impl.ServiceImpl;<br><span class="hljs-keyword">import</span> com.travelweb.utils.RegexValidateUtil;<br><span class="hljs-keyword">import</span> lombok.extern.slf4j.Slf4j;<br><span class="hljs-keyword">import</span> org.springframework.beans.factory.annotation.Autowired;<br><span class="hljs-keyword">import</span> org.springframework.stereotype.Service;<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * &lt;p&gt;</span><br><span class="hljs-comment"> *  服务实现类</span><br><span class="hljs-comment"> * &lt;/p&gt;</span><br><span class="hljs-comment"> *</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@author</span> Yuki</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@since</span> 2022-05-12</span><br><span class="hljs-comment"> */</span><br><span class="hljs-meta">@Service</span><br><span class="hljs-meta">@Slf4j</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">UserServiceImpl</span> <span class="hljs-keyword">extends</span> <span class="hljs-title class_">ServiceImpl</span>&lt;UserMapper, User&gt; <span class="hljs-keyword">implements</span> <span class="hljs-title class_">UserService</span> &#123;<br>    <span class="hljs-meta">@Autowired</span><br>    <span class="hljs-keyword">private</span> UserMapper userMapper;<br>    <span class="hljs-meta">@Override</span><br>    <span class="hljs-keyword">public</span> User <span class="hljs-title function_">register</span><span class="hljs-params">(UserRegisterForm userRegisterForm)</span> &#123;<br>        <span class="hljs-comment">//用户名是否可用</span><br>        QueryWrapper&lt;User&gt; queryWrapper = <span class="hljs-keyword">new</span> <span class="hljs-title class_">QueryWrapper</span>&lt;&gt;();<br>        queryWrapper.eq(<span class="hljs-string">&quot;login_name&quot;</span>, userRegisterForm.getLoginName());<br>        <span class="hljs-type">User</span> <span class="hljs-variable">one</span> <span class="hljs-operator">=</span> <span class="hljs-built_in">this</span>.userMapper.selectOne(queryWrapper);<br>        <span class="hljs-keyword">if</span>(one != <span class="hljs-literal">null</span>)&#123;<br>            log.info(<span class="hljs-string">&quot;【用户注册】用户名已存在&quot;</span>);<br>            <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">UnifiedException</span>(ResponseEnum.USERNAME_EXISTS);<br>        &#125;<br>        <span class="hljs-comment">//邮箱格式校验</span><br>        <span class="hljs-keyword">if</span>(!RegexValidateUtil.checkEmail(userRegisterForm.getEmail()))&#123;<br>            log.info(<span class="hljs-string">&quot;【用户注册】邮箱格式错误&quot;</span>);<br>            <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">UnifiedException</span>(ResponseEnum.EMAIL_ERROR);<br>        &#125;<br>        <span class="hljs-comment">//手机格式校验</span><br>        <span class="hljs-keyword">if</span>(!RegexValidateUtil.checkMobile(userRegisterForm.getMobile()))&#123;<br>            log.info(<span class="hljs-string">&quot;【用户注册】手机格式错误&quot;</span>);<br>            <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">UnifiedException</span>(ResponseEnum.MOBILE_ERROR);<br>        &#125;<br>        <span class="hljs-keyword">return</span> <span class="hljs-literal">null</span>;<br>    &#125;<br>&#125;<br><br></code></pre></td></tr></table></figure></li></ol><h2 id="4-存储数据"><a href="#4-存储数据" class="headerlink" title="4.存储数据"></a>4.存储数据</h2><ol><li><p>调<code>userMapper</code>方法即可(<code>mybatis-plus</code>帮我们封装好了)，这个方法只能传<code>User</code>对象，所以先封装一个<code>User</code>对象<code>User user=new User();</code></p></li><li><p>用<code>BeanUtils</code>工具类，把<code>userRegisterForm</code>中的数据都赋值给<code>user</code>对象<code>BeanUtils.copyProperties(userRegisterForm,user);</code>（属性对应才能赋值）</p></li><li><p>用<code>MD5Util</code>工具类对密码进行加密<code>user.setPassword(MD5Util.getSaltMD5(user.getPassword()));</code></p></li><li><p>将<code>user</code>传进去<code>this.userMapper.insert(user).var</code>（<code>int insert = this.userMapper.insert(user);</code>）</p></li><li><p>对结果进行判断，如果有错误就抛异常<img src="https://yuki-picgo-img.oss-cn-beijing.aliyuncs.com/yuque-img/20220515011048.png"></p><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs pgsql"><span class="hljs-keyword">if</span>(<span class="hljs-keyword">insert</span> != <span class="hljs-number">1</span>)&#123;<br>    <span class="hljs-keyword">log</span>.<span class="hljs-keyword">info</span>(&quot;【用户注册】添加用户失败&quot;);<br>    throw <span class="hljs-built_in">new</span> UnifiedException(ResponseEnum.USER_REGISTER_ERROR);<br>&#125;<br></code></pre></td></tr></table></figure></li><li><p>没有问题就将<code>user</code>返回<code>return user;</code></p></li></ol><h2 id="5-自动生成创建时间和修改时间"><a href="#5-自动生成创建时间和修改时间" class="headerlink" title="5.自动生成创建时间和修改时间"></a>5.自动生成创建时间和修改时间</h2><ol><li><p>实体类里必须有自动填充的注解<img src="https://yuki-picgo-img.oss-cn-beijing.aliyuncs.com/yuque-img/20220515011441.png"></p></li><li><p>需要一个自动填充的工具类<img src="https://yuki-picgo-img.oss-cn-beijing.aliyuncs.com/yuque-img/20220515011705.png"></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">package</span> com.travelweb.handler;<br><br><span class="hljs-keyword">import</span> com.baomidou.mybatisplus.core.handlers.MetaObjectHandler;<br><span class="hljs-keyword">import</span> org.apache.ibatis.reflection.MetaObject;<br><span class="hljs-keyword">import</span> org.springframework.stereotype.Component;<br><br><span class="hljs-keyword">import</span> java.time.LocalDateTime;<br><br><span class="hljs-meta">@Component</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">MyMetaObjectHandler</span> <span class="hljs-keyword">implements</span> <span class="hljs-title class_">MetaObjectHandler</span> &#123;<br>    <span class="hljs-meta">@Override</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">insertFill</span><span class="hljs-params">(MetaObject metaObject)</span> &#123;<br>        <span class="hljs-built_in">this</span>.setFieldValByName(<span class="hljs-string">&quot;createTime&quot;</span>,LocalDateTime.now(),metaObject);<br>        <span class="hljs-built_in">this</span>.setFieldValByName(<span class="hljs-string">&quot;updateTime&quot;</span>,LocalDateTime.now(),metaObject);<br>    &#125;<br><br>    <span class="hljs-meta">@Override</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">updateFill</span><span class="hljs-params">(MetaObject metaObject)</span> &#123;<br>        <span class="hljs-built_in">this</span>.setFieldValByName(<span class="hljs-string">&quot;updateTime&quot;</span>,LocalDateTime.now(),metaObject);<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure></li></ol><h6 id=""><a href="#" class="headerlink" title=""></a></h6><h2 id="6-回到UserController处理剩下逻辑"><a href="#6-回到UserController处理剩下逻辑" class="headerlink" title="6.回到UserController处理剩下逻辑"></a>6.回到<code>UserController</code>处理剩下逻辑</h2><ol><li><p>拿到存储数据的结果<code>this.userService.register(userRegisterForm).var</code>（<code>User register = this.userService.register(userRegisterForm);</code>）</p></li><li><p>对结果进行判断</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs JAVA"><span class="hljs-keyword">if</span>(register == <span class="hljs-literal">null</span>)&#123;<br>    log.info(<span class="hljs-string">&quot;【用户注册】添加用户失败&quot;</span>);<br>    <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">UnifiedException</span>(ResponseEnum.USER_REGISTER_ERROR);<br>&#125;<br></code></pre></td></tr></table></figure></li><li><p>注册成功，重定向到登录页面<code>return &quot;redirect:/login&quot;;</code></p></li></ol><p><img src="https://yuki-picgo-img.oss-cn-beijing.aliyuncs.com/yuque-img/20220515012304.png"></p><h2 id="7-功能测试"><a href="#7-功能测试" class="headerlink" title="7.功能测试"></a>7.功能测试</h2><p>登陆前数据库中的用户数据<img src="https://yuki-picgo-img.oss-cn-beijing.aliyuncs.com/yuque-img/20220515012519.png"></p><p>测试是否能够写入</p><p><img src="https://yuki-picgo-img.oss-cn-beijing.aliyuncs.com/yuque-img/20220515012643.png"></p><p>后台显示添加成功</p><p><img src="C:\Users\10937\AppData\Roaming\Typora\typora-user-images\image-20220515012745163.png" alt="image-20220515012745163"></p><p>数据库中成功添加新数据</p><p><img src="https://yuki-picgo-img.oss-cn-beijing.aliyuncs.com/yuque-img/20220515012816.png"></p><p>前端成功重定向到登录界面<img src="C:\Users\10937\AppData\Roaming\Typora\typora-user-images\image-20220515012840481.png" alt="image-20220515012840481"></p><h1 id="七、登录"><a href="#七、登录" class="headerlink" title="七、登录"></a>七、登录</h1><h2 id="1-数据校验"><a href="#1-数据校验" class="headerlink" title="1.数据校验"></a>1.数据校验</h2><ol><li><p>到<code>UserController</code>中添加登录方法</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * 用户登录</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@return</span></span><br><span class="hljs-comment"> */</span><br><span class="hljs-meta">@PostMapping(&quot;/login&quot;)</span><br><span class="hljs-keyword">public</span> ModelAndView <span class="hljs-title function_">login</span><span class="hljs-params">()</span>&#123;<br>   <br>&#125;<br></code></pre></td></tr></table></figure></li><li><p>新建一个表单用来进行数据校验<img src="https://yuki-picgo-img.oss-cn-beijing.aliyuncs.com/yuque-img/20220515014918.png"></p></li><li><p>非空校验，复制注册时的即可</p></li></ol><h2 id="2-实现登录方法"><a href="#2-实现登录方法" class="headerlink" title="2.实现登录方法"></a>2.实现登录方法</h2><ol><li><p>去<code>service</code>层写登录方法<code>public User login(UserLoginForm userLoginForm);</code><img src="https://yuki-picgo-img.oss-cn-beijing.aliyuncs.com/yuque-img/20220515015318.png"></p></li><li><p>去<code>ServiceImpl</code>实现方法<img src="https://yuki-picgo-img.oss-cn-beijing.aliyuncs.com/yuque-img/20220515015755.png"></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * 用户登录</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@param</span> userLoginForm</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@return</span></span><br><span class="hljs-comment"> */</span><br><span class="hljs-meta">@Override</span><br><span class="hljs-keyword">public</span> User <span class="hljs-title function_">login</span><span class="hljs-params">(UserLoginForm userLoginForm)</span> &#123;<br>    <span class="hljs-comment">//判断用户名是否存在</span><br>    <span class="hljs-keyword">return</span> <span class="hljs-literal">null</span>;<br>&#125;<br></code></pre></td></tr></table></figure></li><li><p>判断用户名是否存在<img src="https://yuki-picgo-img.oss-cn-beijing.aliyuncs.com/yuque-img/20220515015942.png"></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">//判断用户名是否存在</span><br>QueryWrapper&lt;User&gt; queryWrapper = <span class="hljs-keyword">new</span> <span class="hljs-title class_">QueryWrapper</span>&lt;&gt;();<br>queryWrapper.eq(<span class="hljs-string">&quot;login_name&quot;</span>, userLoginForm.getLoginName());<br><span class="hljs-type">User</span> <span class="hljs-variable">user</span> <span class="hljs-operator">=</span> <span class="hljs-built_in">this</span>.userMapper.selectOne(queryWrapper);<br><span class="hljs-keyword">if</span>(user == <span class="hljs-literal">null</span>)&#123;<br>    log.info(<span class="hljs-string">&quot;【用户登录】用户名不存在&quot;</span>);<br>    <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">UnifiedException</span>(ResponseEnum.USERNAME_NOT_EXISTS);<br>&#125;<br></code></pre></td></tr></table></figure></li><li><p>判断密码是否正确<img src="https://yuki-picgo-img.oss-cn-beijing.aliyuncs.com/yuque-img/20220515020102.png"></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">//判断密码是否正确</span><br><span class="hljs-type">boolean</span> <span class="hljs-variable">saltverifyMD5</span> <span class="hljs-operator">=</span> MD5Util.getSaltverifyMD5(userLoginForm.getPassword(), user.getPassword());<br><span class="hljs-keyword">if</span>(!saltverifyMD5)&#123;<br>    log.info(<span class="hljs-string">&quot;【用户登录】密码错误&quot;</span>);<br>    <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">UnifiedException</span>(ResponseEnum.PASSWORD_ERROR);<br>&#125;<br></code></pre></td></tr></table></figure></li><li><p>返回<code>user</code>。<img src="https://yuki-picgo-img.oss-cn-beijing.aliyuncs.com/yuque-img/20220515020354.png"></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * 用户登录</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@param</span> userLoginForm</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@return</span></span><br><span class="hljs-comment"> */</span><br><span class="hljs-meta">@Override</span><br><span class="hljs-keyword">public</span> User <span class="hljs-title function_">login</span><span class="hljs-params">(UserLoginForm userLoginForm)</span> &#123;<br>    <span class="hljs-comment">//判断用户名是否存在</span><br>    QueryWrapper&lt;User&gt; queryWrapper = <span class="hljs-keyword">new</span> <span class="hljs-title class_">QueryWrapper</span>&lt;&gt;();<br>    queryWrapper.eq(<span class="hljs-string">&quot;login_name&quot;</span>, userLoginForm.getLoginName());<br>    <span class="hljs-type">User</span> <span class="hljs-variable">user</span> <span class="hljs-operator">=</span> <span class="hljs-built_in">this</span>.userMapper.selectOne(queryWrapper);<br>    <span class="hljs-keyword">if</span>(user == <span class="hljs-literal">null</span>)&#123;<br>        log.info(<span class="hljs-string">&quot;【用户登录】用户名不存在&quot;</span>);<br>        <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">UnifiedException</span>(ResponseEnum.USERNAME_NOT_EXISTS);<br>    &#125;<br>    <span class="hljs-comment">//判断密码是否正确</span><br>    <span class="hljs-type">boolean</span> <span class="hljs-variable">saltverifyMD5</span> <span class="hljs-operator">=</span> MD5Util.getSaltverifyMD5(userLoginForm.getPassword(), user.getPassword());<br>    <span class="hljs-keyword">if</span>(!saltverifyMD5)&#123;<br>        log.info(<span class="hljs-string">&quot;【用户登录】密码错误&quot;</span>);<br>        <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">UnifiedException</span>(ResponseEnum.PASSWORD_ERROR);<br>    &#125;<br>    <span class="hljs-keyword">return</span> user;<br>&#125;<br></code></pre></td></tr></table></figure></li><li><p>回到<code>UserController</code>完善登录逻辑<img src="C:\Users\10937\AppData\Roaming\Typora\typora-user-images\image-20220515020728034.png" alt="image-20220515020728034"></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-type">User</span> <span class="hljs-variable">login</span> <span class="hljs-operator">=</span> <span class="hljs-built_in">this</span>.userService.login(userLoginForm);<br><span class="hljs-type">ModelAndView</span> <span class="hljs-variable">modelAndView</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">ModelAndView</span>();<br>modelAndView.setViewName(<span class="hljs-string">&quot;mall&quot;</span>);<br><span class="hljs-keyword">return</span> modelAndView;<br></code></pre></td></tr></table></figure></li></ol><h2 id="3-测试"><a href="#3-测试" class="headerlink" title="3.测试"></a>3.测试</h2><ol><li><p>测试不存在的用户<img src="https://yuki-picgo-img.oss-cn-beijing.aliyuncs.com/yuque-img/20220515021200.png"> <img src="https://yuki-picgo-img.oss-cn-beijing.aliyuncs.com/yuque-img/20220515021213.png"></p><p>结果：<img src="https://yuki-picgo-img.oss-cn-beijing.aliyuncs.com/yuque-img/20220515021324.png"> <img src="https://yuki-picgo-img.oss-cn-beijing.aliyuncs.com/yuque-img/20220515021343.png"></p></li><li><p>测试正确的用户</p></li></ol><p><img src="https://yuki-picgo-img.oss-cn-beijing.aliyuncs.com/yuque-img/20220515021428.png"></p><p>结果：正确查询到对应用户并进行跳转<img src="https://yuki-picgo-img.oss-cn-beijing.aliyuncs.com/yuque-img/20220515021621.png"></p><h1 id="八、加载商品数据"><a href="#八、加载商品数据" class="headerlink" title="八、加载商品数据"></a>八、加载商品数据</h1><h2 id="1、商品分类"><a href="#1、商品分类" class="headerlink" title="1、商品分类"></a>1、商品分类</h2><h3 id="业务逻辑："><a href="#业务逻辑：" class="headerlink" title="业务逻辑："></a>业务逻辑：<img src="https://yuki-picgo-img.oss-cn-beijing.aliyuncs.com/yuque-img/%E5%95%86%E5%93%81%E5%88%86%E7%B1%BB.png"></h3><h3 id="1-登录优化"><a href="#1-登录优化" class="headerlink" title="1.登录优化"></a>1.登录优化</h3><p>不直接返回视图了，把用户保存到<code>session</code>当中，并进行网页重定向，到<code>productCategory</code>中去返回真正的<code>modelAndView</code></p><p><img src="https://yuki-picgo-img.oss-cn-beijing.aliyuncs.com/yuque-img/20220515022212.png"></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs java">    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 用户登录</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@return</span></span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-meta">@PostMapping(&quot;/login&quot;)</span><br>    <span class="hljs-keyword">public</span> String <span class="hljs-title function_">login</span><span class="hljs-params">(<span class="hljs-meta">@Valid</span> UserLoginForm userLoginForm,BindingResult bindingResult, HttpSession session)</span>&#123;<br>        <span class="hljs-keyword">if</span> (bindingResult.hasErrors())&#123;<br>            <span class="hljs-comment">//打印日志，抛异常</span><br>            log.info(<span class="hljs-string">&quot;【用户登录】用户信息不能为空&quot;</span>);<br>            <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">UnifiedException</span>(ResponseEnum.USER_INFO_NULL);<br>        &#125;<br>        <span class="hljs-type">User</span> <span class="hljs-variable">login</span> <span class="hljs-operator">=</span> <span class="hljs-built_in">this</span>.userService.login(userLoginForm);<br>        session.setAttribute(<span class="hljs-string">&quot;user&quot;</span>,login);<br>        <span class="hljs-keyword">return</span> <span class="hljs-string">&quot;redirect:/productCategory/mall&quot;</span>;<br><span class="hljs-comment">/*        ModelAndView modelAndView = new ModelAndView();</span><br><span class="hljs-comment">        modelAndView.setViewName(&quot;mall&quot;);</span><br><span class="hljs-comment">        return modelAndView;*/</span><br>    &#125;<br></code></pre></td></tr></table></figure><h3 id="2-封装商品分类菜单"><a href="#2-封装商品分类菜单" class="headerlink" title="2.封装商品分类菜单"></a>2.封装商品分类菜单</h3><ol><li>去&#96;&#96;productCategory<code>创建</code>mall<code>方法，返回</code>modelAndView&#96;<img src="https://yuki-picgo-img.oss-cn-beijing.aliyuncs.com/yuque-img/20220515022826.png"></li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@GetMapping(&quot;/mall&quot;)</span><br><span class="hljs-keyword">public</span> ModelAndView <span class="hljs-title function_">main</span><span class="hljs-params">()</span>&#123;<br>    <span class="hljs-type">ModelAndView</span> <span class="hljs-variable">modelAndView</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">ModelAndView</span>();<br>    modelAndView.setViewName(<span class="hljs-string">&quot;mall&quot;</span>);<br>    <span class="hljs-keyword">return</span> modelAndView;<br>&#125;<br></code></pre></td></tr></table></figure><ol start="2"><li><p>实体类满足不了需求，就去自己封装一个类型（Vo）。新建<code>ProductCategoryVO</code><img src="https://yuki-picgo-img.oss-cn-beijing.aliyuncs.com/yuque-img/20220515025259.png"></p></li><li><p>到<code>ProductCategoryService</code>中创建构建菜单的方法<code>buildProductCategoryMenu</code></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">public</span> List&lt;ProductCategoryVO&gt; <span class="hljs-title function_">buildProductCategoryMenu</span><span class="hljs-params">()</span>;<br></code></pre></td></tr></table></figure></li><li><p>去<code>Impl</code>实现方法<img src="https://yuki-picgo-img.oss-cn-beijing.aliyuncs.com/yuque-img/20220515025524.png"></p></li><li><p>实现步骤：1、查询所有的商品分类数据。2、数据类型转换成 <code>ProductCategoryVO</code>。3、进行父子级菜单的封装</p></li><li><p>查询所有数据（<code>this.productCategoryMapper.selectList(null).var</code>）<img src="https://yuki-picgo-img.oss-cn-beijing.aliyuncs.com/yuque-img/20220515030153.png"></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">package</span> com.travelweb.service.impl;<br><br><span class="hljs-keyword">import</span> com.travelweb.entity.ProductCategory;<br><span class="hljs-keyword">import</span> com.travelweb.mapper.ProductCategoryMapper;<br><span class="hljs-keyword">import</span> com.travelweb.service.ProductCategoryService;<br><span class="hljs-keyword">import</span> com.baomidou.mybatisplus.extension.service.impl.ServiceImpl;<br><span class="hljs-keyword">import</span> com.travelweb.vo.ProductCategoryVO;<br><span class="hljs-keyword">import</span> org.springframework.beans.factory.annotation.Autowired;<br><span class="hljs-keyword">import</span> org.springframework.stereotype.Service;<br><br><span class="hljs-keyword">import</span> java.util.List;<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * &lt;p&gt;</span><br><span class="hljs-comment"> *  服务实现类</span><br><span class="hljs-comment"> * &lt;/p&gt;</span><br><span class="hljs-comment"> *</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@author</span> Yuki</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@since</span> 2022-05-12</span><br><span class="hljs-comment"> */</span><br><span class="hljs-meta">@Service</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">ProductCategoryServiceImpl</span> <span class="hljs-keyword">extends</span> <span class="hljs-title class_">ServiceImpl</span>&lt;ProductCategoryMapper, ProductCategory&gt; <span class="hljs-keyword">implements</span> <span class="hljs-title class_">ProductCategoryService</span> &#123;<br>    <span class="hljs-meta">@Autowired</span><br>    <span class="hljs-keyword">private</span> ProductCategoryMapper productCategoryMapper;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 构建商品分类菜单</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@return</span></span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-meta">@Override</span><br>    <span class="hljs-keyword">public</span> List&lt;ProductCategoryVO&gt; <span class="hljs-title function_">buildProductCategoryMenu</span><span class="hljs-params">()</span> &#123;<br>        <span class="hljs-comment">//1、查询所有的商品分类数据</span><br>        List&lt;ProductCategory&gt; productCategories = <span class="hljs-built_in">this</span>.productCategoryMapper.selectList(<span class="hljs-literal">null</span>);<br>        <span class="hljs-keyword">return</span> <span class="hljs-literal">null</span>;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure></li><li><p>数据类型转换成<code>ProductCategoryVO</code>(stream流)<img src="https://yuki-picgo-img.oss-cn-beijing.aliyuncs.com/yuque-img/20220515030658.png"></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs java">List&lt;ProductCategoryVO&gt; productCategoryVOList = productCategoryList.stream().map(ProductCategoryVO::<span class="hljs-keyword">new</span>).collect(Collectors.toList());<br></code></pre></td></tr></table></figure></li><li><p>调stream流构造器，必须在<code>VO</code>中声明构造器，把<code>ProductCategory</code>当参数传进去（把<code>productCategoryList</code>里的对象取出来构造成<code>ProductCategoryVOList</code>）<img src="https://yuki-picgo-img.oss-cn-beijing.aliyuncs.com/yuque-img/20220515031120.png"></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">public</span> <span class="hljs-title function_">ProductCategoryVO</span><span class="hljs-params">(ProductCategory productCategory)</span> &#123;<br>    <span class="hljs-built_in">this</span>.id = productCategory.getId();<br>    <span class="hljs-built_in">this</span>.name = productCategory.getName();<br>    <span class="hljs-built_in">this</span>.parentId = productCategory.getParentId();<br>&#125;<br></code></pre></td></tr></table></figure></li></ol><h3 id="3-构建子菜单"><a href="#3-构建子菜单" class="headerlink" title="3.构建子菜单"></a>3.构建子菜单</h3><ol><li><p>编写构建子菜单的方法<code>serChildren</code>（把所有的集合遍历出来，然后再去找他的子菜单，有的话就完成赋值）<img src="https://yuki-picgo-img.oss-cn-beijing.aliyuncs.com/yuque-img/20220515032616.png"></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * 构建子菜单</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@param</span> productCategoryVOList</span><br><span class="hljs-comment"> */</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">serChildren</span><span class="hljs-params">(List&lt;ProductCategoryVO&gt; productCategoryVOList)</span>&#123;<br>   <br>&#125;<br></code></pre></td></tr></table></figure></li><li><p>首先找到一级菜单<code>List&lt;ProductCategoryVO&gt; levelOneList = productCategoryVOList.stream().filter(c -&gt; c.getParentId() == 0).collect(Collectors.toList());</code></p></li><li><p>对整个集合进行遍历，找到二级菜单<img src="https://yuki-picgo-img.oss-cn-beijing.aliyuncs.com/yuque-img/20220515033437.png"></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">for</span> ( ProductCategoryVO productCategoryVO : levelOneList)&#123;<br>   <br>    &#125;<br></code></pre></td></tr></table></figure></li><li><p>定义递归方法，传入两个数据，整个集合&amp;当前的数据</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * 递归分类</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@param</span> list</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@param</span> productCategoryVO</span><br><span class="hljs-comment"> */</span><br><span class="hljs-comment">//（整个集合&amp;当前的数据）</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">recursion</span><span class="hljs-params">(List&lt;ProductCategoryVO&gt; list,ProductCategoryVO productCategoryVO)</span>&#123;<br>   <br>&#125;<br></code></pre></td></tr></table></figure></li><li><p>名字改短点，改成<code>list</code>、<code>vo</code><img src="https://yuki-picgo-img.oss-cn-beijing.aliyuncs.com/yuque-img/20220515034315.png"></p></li><li><p>调用递归方法，把整个集合传进去<code>recursion(list,vo);</code></p></li><li><p>创建获取子菜单方法，还是将当前数据和所有数据传进去<img src="https://yuki-picgo-img.oss-cn-beijing.aliyuncs.com/yuque-img/20220515034844.png"></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * 获取子菜单</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@param</span> list</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@param</span> vo</span><br><span class="hljs-comment"> */</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">getChildren</span><span class="hljs-params">(List&lt;ProductCategoryVO&gt; list,ProductCategoryVO vo)</span>&#123;<br>   <br>&#125;<br></code></pre></td></tr></table></figure></li><li><pre><code class="java">    /**     * 获取子菜单     * @param list     * @param vo     */    public List&lt;ProductCategoryVO&gt; getChildren(List&lt;ProductCategoryVO&gt; list,ProductCategoryVO vo)&#123;    //首先定义一个空集合 children    List&lt;ProductCategoryVO&gt; children = new ArrayList&lt;&gt;();    //用迭代器对整个集合进行遍历list.iterator().var    Iterator&lt;ProductCategoryVO&gt; iterator = list.iterator();    //做while循环 iterator.hasNext().while    while (iterator.hasNext()) &#123;        //把它的next取出来iterator.next().var        ProductCategoryVO next = iterator.next();        //判断当前next对象他的getparentId跟vo的id是否相等        if (next.getParentId().equals(vo.getId()))&#123;            //如果相等，就直接装到children当中            children.add(next);        &#125;    &#125;    //返回这个children    return children;    &#125;<figure class="highlight reasonml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs reasonml"><br><span class="hljs-number">9.</span> 完善递归分类，已经获取当前数据和所有数据，在所有数据中去找它的子菜单<br><br><span class="hljs-number">10.</span> 回到递归分类中调用刚才创建的`getChildren`方法<br><br>    ```java<br>            List&lt;ProductCategoryVO&gt; children = get<span class="hljs-constructor">Children(<span class="hljs-params">list</span>, <span class="hljs-params">vo</span>)</span>;<br>            <span class="hljs-comment">//把children数据set进去</span><br>            vo.set<span class="hljs-constructor">Children(<span class="hljs-params">children</span>)</span>;<br></code></pre></td></tr></table></figure></code></pre></li><li><p>继续查找子菜单<img src="https://yuki-picgo-img.oss-cn-beijing.aliyuncs.com/yuque-img/20220515040807.png"></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">//继续查找子菜单</span><br><span class="hljs-keyword">if</span> (children.size() &gt;<span class="hljs-number">0</span>)&#123;<br>    <span class="hljs-comment">//继续遍历子菜单，把子菜单的数据拿出来，再跟整个集合进行对比,进入递归</span><br>    <span class="hljs-keyword">for</span> (ProductCategoryVO child : children)&#123;<br>        recursion(list,child);<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure></li><li><p>回到<code>构建商品分类菜单</code>中调用<code>serChildren</code>进行进行父子级菜单的封装，最后return集合</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">//3、进行父子级菜单的封装</span><br>setChildren(productCategoryVOList);<br><span class="hljs-keyword">return</span> productCategoryVOList;<br></code></pre></td></tr></table></figure></li><li><p>换个名（<code>setChildren </code>   →  <code>buildMenu</code>）</p></li></ol><h3 id="4-测试"><a href="#4-测试" class="headerlink" title="4.测试"></a>4.测试</h3><p>进入test，注入<code>ProductService</code></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@Autowired</span><br><span class="hljs-keyword">private</span> ProductService productService;<br></code></pre></td></tr></table></figure><p>测试方法</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs java">List&lt;ProductCategoryVO&gt; productCategoryVOS = <span class="hljs-built_in">this</span>.service.buildProductCategoryMenu();<br></code></pre></td></tr></table></figure><p><img src="https://yuki-picgo-img.oss-cn-beijing.aliyuncs.com/yuque-img/20220515045001.png"></p><p><img src="C:\Users\10937\AppData\Roaming\Typora\typora-user-images\image-20220515045228151.png" alt="image-20220515045228151">成功获取分类信息</p><h3 id="4-返回一级菜单"><a href="#4-返回一级菜单" class="headerlink" title="4.返回一级菜单"></a>4.返回一级菜单</h3><ol><li>返回一级菜单<img src="https://yuki-picgo-img.oss-cn-beijing.aliyuncs.com/yuque-img/%E8%BF%94%E5%9B%9E%E4%B8%80%E7%BA%A7%E8%8F%9C%E5%8D%95.png"></li><li><img src="https://yuki-picgo-img.oss-cn-beijing.aliyuncs.com/yuque-img/20220516105720.png"></li><li>成功返回六个一级菜单（里面包含它的子菜单）<img src="https://yuki-picgo-img.oss-cn-beijing.aliyuncs.com/yuque-img/20220516105832.png"></li></ol><h2 id="2、首页加载商品分类"><a href="#2、首页加载商品分类" class="headerlink" title="2、首页加载商品分类"></a>2、首页加载商品分类</h2><ol><li><p><code>ProductCategoryController</code>调用<code>service</code>层方法</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@Autowired</span><br> <span class="hljs-keyword">private</span> ProductCategoryService productCategoryService;<br></code></pre></td></tr></table></figure></li><li><p>将商品数据封装到<code>model</code>当中，顶层为一级菜单，<code>attributeName</code>为<code>list</code><img src="https://yuki-picgo-img.oss-cn-beijing.aliyuncs.com/yuque-img/20220516110655.png"></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">//封装商品分类菜单    modelAndView.addObject(&quot;list&quot;,this.productCategoryService.buildProductCategoryMenu());</span><br></code></pre></td></tr></table></figure></li><li><p>回到前端页面，实现数据填充，替换掉“假”数据<img src="https://yuki-picgo-img.oss-cn-beijing.aliyuncs.com/yuque-img/20220516110900.png"></p></li><li><p>数据填充<img src="https://yuki-picgo-img.oss-cn-beijing.aliyuncs.com/yuque-img/20220516164419.png"></p></li><li><p>处理购物车，判断用户是否为登录用户（从session判断）<img src="https://yuki-picgo-img.oss-cn-beijing.aliyuncs.com/yuque-img/20220516165647.png"></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs java">        <span class="hljs-comment">//判断是否为登录用户</span><br>        <span class="hljs-comment">//转成user类型</span><br><span class="hljs-comment">//        Object user = session.getAttribute(&quot;user&quot;);</span><br>        <span class="hljs-type">User</span> <span class="hljs-variable">user</span> <span class="hljs-operator">=</span> (User) session.getAttribute(<span class="hljs-string">&quot;user&quot;</span>);<br>        <span class="hljs-keyword">if</span> (user == <span class="hljs-literal">null</span>)&#123;<br>            <span class="hljs-comment">//未登录,返回一个空的集合</span><br>            modelAndView.addObject(<span class="hljs-string">&quot;cartList&quot;</span>, <span class="hljs-keyword">new</span> <span class="hljs-title class_">ArrayList</span>&lt;&gt;());<br>        &#125;<span class="hljs-keyword">else</span> &#123;<br>            <span class="hljs-comment">//已登录</span><br>        &#125;<br></code></pre></td></tr></table></figure></li><li><p>修改前端代码，未登录用户显示<code>cartList</code>的长度即可</p></li></ol><h2 id="3、查找一级分类对应的商品信息"><a href="#3、查找一级分类对应的商品信息" class="headerlink" title="3、查找一级分类对应的商品信息"></a>3、查找一级分类对应的商品信息</h2><p>条件查询即可</p><ol><li><p>注入<code>ProductMapper</code>，新建<code>getLevelOneProduct</code>方法，调用方法</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * 查询一级分类对应的商品信息</span><br><span class="hljs-comment"> */</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">getLevelOneProduct</span><span class="hljs-params">(List&lt;ProductCategoryVO&gt; list)</span>&#123;<br>   <br>&#125;<br>    <span class="hljs-comment">//4、查找一级分类对应的商品信息</span><br>    getLevelOneProduct(levelOneList);<br></code></pre></td></tr></table></figure></li><li><p>对集合遍历，把每个一级分类拿出来，再去找它对应的商品信息，先去VO添加一级分类所属商品的集合</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">private</span> List&lt;Product&gt; productList;<br></code></pre></td></tr></table></figure></li><li><p>对<code>list</code>进行遍历，通过id查找商品然后将值赋给vo<img src="C:\Users\10937\AppData\Roaming\Typora\typora-user-images\image-20220516172335717.png" alt="image-20220516172335717"></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * 查询一级分类对应的商品信息</span><br><span class="hljs-comment"> */</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">getLevelOneProduct</span><span class="hljs-params">(List&lt;ProductCategoryVO&gt; list)</span>&#123;<br>    <span class="hljs-keyword">for</span> (ProductCategoryVO vo : list) &#123;<br>        <span class="hljs-comment">//新对Product建查询</span><br>        QueryWrapper&lt;Product&gt; queryWrapper = <span class="hljs-keyword">new</span> <span class="hljs-title class_">QueryWrapper</span>&lt;&gt;();<br>        <span class="hljs-comment">//通过categorylevelone_id字段匹配</span><br>        queryWrapper.eq(<span class="hljs-string">&quot;categorylevelone_id&quot;</span>,vo.getId());<br>        <span class="hljs-comment">//queryWrapper传进去</span><br>        List&lt;Product&gt; productList = <span class="hljs-built_in">this</span>.productMapper.selectList(queryWrapper);<br>        <span class="hljs-comment">//把productList赋给VO</span><br>        vo.setProductList(productList);<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure></li><li><p>修改前端代码<img src="https://yuki-picgo-img.oss-cn-beijing.aliyuncs.com/yuque-img/20220516200715.png"></p></li></ol><h2 id="4、商品列表"><a href="#4、商品列表" class="headerlink" title="4、商品列表"></a>4、商品列表</h2><ol><li><p>修改跳转，从后台进网页<img src="https://yuki-picgo-img.oss-cn-beijing.aliyuncs.com/yuque-img/20220516211852.png"></p></li><li><p>到<code>ProductController</code>编写代码<img src="https://yuki-picgo-img.oss-cn-beijing.aliyuncs.com/yuque-img/20220516212428.png"></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><code class="hljs JAVA"><span class="hljs-keyword">package</span> com.travelweb.controller;<br><br><br><span class="hljs-keyword">import</span> org.springframework.web.bind.annotation.GetMapping;<br><span class="hljs-keyword">import</span> org.springframework.web.bind.annotation.PathVariable;<br><span class="hljs-keyword">import</span> org.springframework.web.bind.annotation.RequestMapping;<br><br><span class="hljs-keyword">import</span> org.springframework.stereotype.Controller;<br><span class="hljs-keyword">import</span> org.springframework.web.servlet.ModelAndView;<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * &lt;p&gt;</span><br><span class="hljs-comment"> *  前端控制器</span><br><span class="hljs-comment"> * &lt;/p&gt;</span><br><span class="hljs-comment"> *</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@author</span> Yuki</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@since</span> 2022-05-12</span><br><span class="hljs-comment"> */</span><br><span class="hljs-meta">@Controller</span><br><span class="hljs-meta">@RequestMapping(&quot;/product&quot;)</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">ProductController</span> &#123;<br>    <span class="hljs-comment">//类型、id</span><br>    <span class="hljs-meta">@GetMapping(&quot;/list/&#123;type&#125;/&#123;id&#125;&quot;)</span><br>    <span class="hljs-keyword">public</span> ModelAndView <span class="hljs-title function_">list</span><span class="hljs-params">(</span><br><span class="hljs-params">            //把两个参数拿出来</span><br><span class="hljs-params">            <span class="hljs-meta">@PathVariable(&quot;type&quot;)</span> Integer type,</span><br><span class="hljs-params">            <span class="hljs-meta">@PathVariable(&quot;id&quot;)</span> Integer productCategoryId</span><br><span class="hljs-params"></span><br><span class="hljs-params">    )</span>&#123;<br>        System.out.println(type);<br>        System.out.println(productCategoryId);<br>        <span class="hljs-keyword">return</span> <span class="hljs-literal">null</span>;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure></li><li><p>到前端随便点点，后台成功获取数据<img src="https://yuki-picgo-img.oss-cn-beijing.aliyuncs.com/yuque-img/20220516212554.png"></p></li><li><p>异常判断</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">if</span>(type == <span class="hljs-literal">null</span> || productCategoryId == <span class="hljs-literal">null</span>)&#123;<br>    log.info(<span class="hljs-string">&quot;【商品列表】参数为空&quot;</span>);<br>    <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">UnifiedException</span>(ResponseEnum.PARAMETER_NULL);<br>&#125;<br></code></pre></td></tr></table></figure></li><li><p>返回页面数据</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-type">ModelAndView</span> <span class="hljs-variable">modelAndView</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">ModelAndView</span>();<br>modelAndView.setViewName(<span class="hljs-string">&quot;productList&quot;</span>);<br></code></pre></td></tr></table></figure></li><li><p><code>return modelAndView</code></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">package</span> com.travelweb.controller;<br><br><br><span class="hljs-keyword">import</span> com.travelweb.exception.UnifiedException;<br><span class="hljs-keyword">import</span> com.travelweb.result.ResponseEnum;<br><span class="hljs-keyword">import</span> lombok.extern.slf4j.Slf4j;<br><span class="hljs-keyword">import</span> org.springframework.web.bind.annotation.GetMapping;<br><span class="hljs-keyword">import</span> org.springframework.web.bind.annotation.PathVariable;<br><span class="hljs-keyword">import</span> org.springframework.web.bind.annotation.RequestMapping;<br><br><span class="hljs-keyword">import</span> org.springframework.stereotype.Controller;<br><span class="hljs-keyword">import</span> org.springframework.web.servlet.ModelAndView;<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * &lt;p&gt;</span><br><span class="hljs-comment"> *  前端控制器</span><br><span class="hljs-comment"> * &lt;/p&gt;</span><br><span class="hljs-comment"> *</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@author</span> Yuki</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@since</span> 2022-05-12</span><br><span class="hljs-comment"> */</span><br><span class="hljs-meta">@Controller</span><br><span class="hljs-meta">@RequestMapping(&quot;/product&quot;)</span><br><span class="hljs-meta">@Slf4j</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">ProductController</span> &#123;<br>    <span class="hljs-comment">//类型、id</span><br>    <span class="hljs-meta">@GetMapping(&quot;/list/&#123;type&#125;/&#123;id&#125;&quot;)</span><br>    <span class="hljs-keyword">public</span> ModelAndView <span class="hljs-title function_">list</span><span class="hljs-params">(</span><br><span class="hljs-params">            //把两个参数拿出来</span><br><span class="hljs-params">            <span class="hljs-meta">@PathVariable(&quot;type&quot;)</span> Integer type,</span><br><span class="hljs-params">            <span class="hljs-meta">@PathVariable(&quot;id&quot;)</span> Integer productCategoryId</span><br><span class="hljs-params"></span><br><span class="hljs-params">    )</span>&#123;<br>        <span class="hljs-keyword">if</span>(type == <span class="hljs-literal">null</span> || productCategoryId == <span class="hljs-literal">null</span>)&#123;<br>            log.info(<span class="hljs-string">&quot;【商品列表】参数为空&quot;</span>);<br>            <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">UnifiedException</span>(ResponseEnum.PARAMETER_NULL);<br>        &#125;<br>        <span class="hljs-type">ModelAndView</span> <span class="hljs-variable">modelAndView</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">ModelAndView</span>();<br>        modelAndView.setViewName(<span class="hljs-string">&quot;productList&quot;</span>);<br>        <span class="hljs-comment">//填充数据</span><br><span class="hljs-comment">//        modelAndView.addObject(&quot;list&quot;,);</span><br><span class="hljs-comment">/*        //测试能否获取数据</span><br><span class="hljs-comment">        System.out.println(type);</span><br><span class="hljs-comment">        System.out.println(productCategoryId);*/</span><br><br>        <span class="hljs-keyword">return</span> modelAndView;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure></li><li><p>到<code>service</code>层写方法<code>public List&lt;Product&gt; findAllByTypeAndProductCategoryId(Integer type, Integer id);</code></p></li><li><p>去<code>ProductServiceImpl</code>实现方法<img src="https://yuki-picgo-img.oss-cn-beijing.aliyuncs.com/yuque-img/20220516213356.png"></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">package</span> com.travelweb.service.impl;<br><br><span class="hljs-keyword">import</span> com.travelweb.entity.Product;<br><span class="hljs-keyword">import</span> com.travelweb.mapper.ProductMapper;<br><span class="hljs-keyword">import</span> com.travelweb.service.ProductService;<br><span class="hljs-keyword">import</span> com.baomidou.mybatisplus.extension.service.impl.ServiceImpl;<br><span class="hljs-keyword">import</span> org.springframework.stereotype.Service;<br><br><span class="hljs-keyword">import</span> java.util.List;<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * &lt;p&gt;</span><br><span class="hljs-comment"> *  服务实现类</span><br><span class="hljs-comment"> * &lt;/p&gt;</span><br><span class="hljs-comment"> *</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@author</span> Yuki</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@since</span> 2022-05-12</span><br><span class="hljs-comment"> */</span><br><span class="hljs-meta">@Service</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">ProductServiceImpl</span> <span class="hljs-keyword">extends</span> <span class="hljs-title class_">ServiceImpl</span>&lt;ProductMapper, Product&gt; <span class="hljs-keyword">implements</span> <span class="hljs-title class_">ProductService</span> &#123;<br>    <span class="hljs-meta">@Override</span><br>    <span class="hljs-keyword">public</span> List&lt;Product&gt; <span class="hljs-title function_">findAllByTypeAndProductCategoryId</span><span class="hljs-params">(Integer type, Integer id)</span> &#123;<br>        <span class="hljs-keyword">return</span> <span class="hljs-literal">null</span>;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure></li><li><p>调<code>mapper</code></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@Autowired</span><br><span class="hljs-keyword">private</span> ProductMapper productMapper;<br></code></pre></td></tr></table></figure></li><li><p>根据type来进行条件查询（先根据type判断查询哪个字段）</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-type">String</span> <span class="hljs-variable">column</span> <span class="hljs-operator">=</span> <span class="hljs-literal">null</span>;<br><span class="hljs-keyword">switch</span> (type)&#123;<br>    <span class="hljs-keyword">case</span> <span class="hljs-number">1</span>:<br>        column = <span class="hljs-string">&quot;categorylevelone_id&quot;</span>;<br>        <span class="hljs-keyword">break</span>;<br>    <span class="hljs-keyword">case</span> <span class="hljs-number">2</span>:<br>        column = <span class="hljs-string">&quot;categoryleveltwo_id&quot;</span>;<br>        <span class="hljs-keyword">break</span>;<br>    <span class="hljs-keyword">case</span> <span class="hljs-number">3</span>:<br>        column = <span class="hljs-string">&quot;categorylevelthree_id&quot;</span>;<br>        <span class="hljs-keyword">break</span>;<br>&#125;<br>queryWrapper.eq(column,id);<br></code></pre></td></tr></table></figure></li><li><p>数据传进去，拿到集合</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">//this.productMapper.selectList(queryWrapper).var</span><br>List&lt;Product&gt; productList = <span class="hljs-built_in">this</span>.productMapper.selectList(queryWrapper);<br></code></pre></td></tr></table></figure></li><li><p>把这个集合return<img src="https://yuki-picgo-img.oss-cn-beijing.aliyuncs.com/yuque-img/20220516214208.png"></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">return</span> <span class="hljs-built_in">this</span>.productMapper.selectList(queryWrapper);<br></code></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">package</span> com.travelweb.service.impl;<br><br><span class="hljs-keyword">import</span> com.baomidou.mybatisplus.core.conditions.query.QueryWrapper;<br><span class="hljs-keyword">import</span> com.travelweb.entity.Product;<br><span class="hljs-keyword">import</span> com.travelweb.mapper.ProductMapper;<br><span class="hljs-keyword">import</span> com.travelweb.service.ProductService;<br><span class="hljs-keyword">import</span> com.baomidou.mybatisplus.extension.service.impl.ServiceImpl;<br><span class="hljs-keyword">import</span> org.springframework.beans.factory.annotation.Autowired;<br><span class="hljs-keyword">import</span> org.springframework.stereotype.Service;<br><br><span class="hljs-keyword">import</span> java.util.List;<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * &lt;p&gt;</span><br><span class="hljs-comment"> *  服务实现类</span><br><span class="hljs-comment"> * &lt;/p&gt;</span><br><span class="hljs-comment"> *</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@author</span> Yuki</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@since</span> 2022-05-12</span><br><span class="hljs-comment"> */</span><br><span class="hljs-meta">@Service</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">ProductServiceImpl</span> <span class="hljs-keyword">extends</span> <span class="hljs-title class_">ServiceImpl</span>&lt;ProductMapper, Product&gt; <span class="hljs-keyword">implements</span> <span class="hljs-title class_">ProductService</span> &#123;<br>    <span class="hljs-meta">@Autowired</span><br>    <span class="hljs-keyword">private</span> ProductMapper productMapper;<br><br>    <span class="hljs-meta">@Override</span><br>    <span class="hljs-keyword">public</span> List&lt;Product&gt; <span class="hljs-title function_">findAllByTypeAndProductCategoryId</span><span class="hljs-params">(Integer type, Integer id)</span> &#123;<br>        QueryWrapper&lt;Product&gt; queryWrapper = <span class="hljs-keyword">new</span> <span class="hljs-title class_">QueryWrapper</span>&lt;&gt;();<br>        <span class="hljs-type">String</span> <span class="hljs-variable">column</span> <span class="hljs-operator">=</span> <span class="hljs-literal">null</span>;<br>        <span class="hljs-keyword">switch</span> (type)&#123;<br>            <span class="hljs-keyword">case</span> <span class="hljs-number">1</span>:<br>                column = <span class="hljs-string">&quot;categorylevelone_id&quot;</span>;<br>                <span class="hljs-keyword">break</span>;<br>            <span class="hljs-keyword">case</span> <span class="hljs-number">2</span>:<br>                column = <span class="hljs-string">&quot;categoryleveltwo_id&quot;</span>;<br>                <span class="hljs-keyword">break</span>;<br>            <span class="hljs-keyword">case</span> <span class="hljs-number">3</span>:<br>                column = <span class="hljs-string">&quot;categorylevelthree_id&quot;</span>;<br>                <span class="hljs-keyword">break</span>;<br>        &#125;<br>        queryWrapper.eq(column,id);<br><span class="hljs-comment">/*        List&lt;Product&gt; productList = this.productMapper.selectList(queryWrapper);</span><br><span class="hljs-comment">        return productList;*/</span><br>        <span class="hljs-keyword">return</span> <span class="hljs-built_in">this</span>.productMapper.selectList(queryWrapper);<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure></li><li><p>回到控制器，注入<code>ProductService</code></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@Autowired</span><br><span class="hljs-keyword">private</span> ProductService productService;<br></code></pre></td></tr></table></figure></li><li><p>填充数据<img src="https://yuki-picgo-img.oss-cn-beijing.aliyuncs.com/yuque-img/20220516214612.png"></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs java">modelAndView.addObject(<span class="hljs-string">&quot;list&quot;</span>,<span class="hljs-built_in">this</span>.productService.findAllByTypeAndProductCategoryId(type,productCategoryId));<br></code></pre></td></tr></table></figure></li><li><pre><code class="java">package com.travelweb.controller;import com.travelweb.exception.UnifiedException;import com.travelweb.result.ResponseEnum;import com.travelweb.service.ProductService;import lombok.extern.slf4j.Slf4j;import org.springframework.beans.factory.annotation.Autowired;import org.springframework.web.bind.annotation.GetMapping;import org.springframework.web.bind.annotation.PathVariable;import org.springframework.web.bind.annotation.RequestMapping;import org.springframework.stereotype.Controller;import org.springframework.web.servlet.ModelAndView;/** * &lt;p&gt; *  前端控制器 * &lt;/p&gt; * * @author Yuki * @since 2022-05-12 */@Controller@RequestMapping(&quot;/product&quot;)@Slf4jpublic class ProductController &#123;    @Autowired    private ProductService productService;    //类型、id    @GetMapping(&quot;/list/&#123;type&#125;/&#123;id&#125;&quot;)    public ModelAndView list(            //把两个参数拿出来            @PathVariable(&quot;type&quot;) Integer type,            @PathVariable(&quot;id&quot;) Integer productCategoryId    )&#123;        if(type == null || productCategoryId == null)&#123;            log.info(&quot;【商品列表】参数为空&quot;);            throw new UnifiedException(ResponseEnum.PARAMETER_NULL);        &#125;        ModelAndView modelAndView = new ModelAndView();        modelAndView.setViewName(&quot;productList&quot;);        //填充数据        modelAndView.addObject(&quot;list&quot;,this.productService.findAllByTypeAndProductCategoryId(type,productCategoryId));/*        //测试能否获取数据        System.out.println(type);        System.out.println(productCategoryId);*/        return modelAndView;    &#125;&#125;<figure class="highlight scala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><code class="hljs scala"><br>```java<br><span class="hljs-keyword">package</span> com.travelweb.service.impl;<br><br><span class="hljs-keyword">import</span> com.baomidou.mybatisplus.core.conditions.query.<span class="hljs-type">QueryWrapper</span>;<br><span class="hljs-keyword">import</span> com.travelweb.entity.<span class="hljs-type">Product</span>;<br><span class="hljs-keyword">import</span> com.travelweb.mapper.<span class="hljs-type">ProductMapper</span>;<br><span class="hljs-keyword">import</span> com.travelweb.service.<span class="hljs-type">ProductService</span>;<br><span class="hljs-keyword">import</span> com.baomidou.mybatisplus.extension.service.impl.<span class="hljs-type">ServiceImpl</span>;<br><span class="hljs-keyword">import</span> org.springframework.beans.factory.annotation.<span class="hljs-type">Autowired</span>;<br><span class="hljs-keyword">import</span> org.springframework.stereotype.<span class="hljs-type">Service</span>;<br><br><span class="hljs-keyword">import</span> java.util.<span class="hljs-type">List</span>;<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * &lt;p&gt;</span><br><span class="hljs-comment"> *  服务实现类</span><br><span class="hljs-comment"> * &lt;/p&gt;</span><br><span class="hljs-comment"> *</span><br><span class="hljs-comment"> * @author Yuki</span><br><span class="hljs-comment"> * @since 2022-05-12</span><br><span class="hljs-comment"> */</span><br><span class="hljs-meta">@Service</span><br>public <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">ProductServiceImpl</span> <span class="hljs-keyword">extends</span> <span class="hljs-title">ServiceImpl&lt;ProductMapper</span>, <span class="hljs-title">Product&gt;</span> <span class="hljs-title">implements</span> <span class="hljs-title">ProductService</span> </span>&#123;<br>    <span class="hljs-meta">@Autowired</span><br>    <span class="hljs-keyword">private</span> <span class="hljs-type">ProductMapper</span> productMapper;<br><br>    <span class="hljs-meta">@Override</span><br>    public <span class="hljs-type">List</span>&lt;<span class="hljs-type">Product</span>&gt; findAllByTypeAndProductCategoryId(<span class="hljs-type">Integer</span> <span class="hljs-class"><span class="hljs-keyword">type</span>, <span class="hljs-title">Integer</span> <span class="hljs-title">id</span>) </span>&#123;<br>        <span class="hljs-type">QueryWrapper</span>&lt;<span class="hljs-type">Product</span>&gt; queryWrapper = <span class="hljs-keyword">new</span> <span class="hljs-type">QueryWrapper</span>&lt;&gt;();<br>        <span class="hljs-type">String</span> column = <span class="hljs-literal">null</span>;<br>        switch (<span class="hljs-class"><span class="hljs-keyword">type</span>)</span>&#123;<br>            <span class="hljs-keyword">case</span> <span class="hljs-number">1</span>:<br>                column = <span class="hljs-string">&quot;categorylevelone_id&quot;</span>;<br>                <span class="hljs-keyword">break</span>;<br>            <span class="hljs-keyword">case</span> <span class="hljs-number">2</span>:<br>                column = <span class="hljs-string">&quot;categoryleveltwo_id&quot;</span>;<br>                <span class="hljs-keyword">break</span>;<br>            <span class="hljs-keyword">case</span> <span class="hljs-number">3</span>:<br>                column = <span class="hljs-string">&quot;categorylevelthree_id&quot;</span>;<br>                <span class="hljs-keyword">break</span>;<br>        &#125;<br>        queryWrapper.eq(column,id);<br><span class="hljs-comment">/*        List&lt;Product&gt; productList = this.productMapper.selectList(queryWrapper);</span><br><span class="hljs-comment">        return productList;*/</span><br>        <span class="hljs-keyword">return</span> <span class="hljs-keyword">this</span>.productMapper.selectList(queryWrapper);<br>    &#125;<br>&#125;<br><br></code></pre></td></tr></table></figure>![image-20220516215240272](C:\Users\10937\AppData\Roaming\Typora\typora-user-images\image-20220516215240272.png)![image-20220516215254911](C:\Users\10937\AppData\Roaming\Typora\typora-user-images\image-20220516215254911.png)</code></pre></li><li><p>修改前端页面</p></li><li><p>判断是否为登录用户，添加session，从上一步copy过来代码</p></li><li><p>注入<code>ProductCategoryService</code>把商品菜单拿过来,否则侧边导航栏加载不出来</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">//商品分类</span><br>modelAndView.addObject(<span class="hljs-string">&quot;list&quot;</span>, <span class="hljs-built_in">this</span>.productCategoryService.buildProductCategoryMenu());<br></code></pre></td></tr></table></figure><p><img src="https://yuki-picgo-img.oss-cn-beijing.aliyuncs.com/yuque-img/20220516221155.png"></p></li><li><p><code>productList</code>:商品列表 <code>cartList</code>：购物车数据 <code>list</code>：商品分类</p></li><li><p>&#96;&#96;&#96;java<br>package com.travelweb.controller;</p><p>import com.travelweb.entity.User;<br>import com.travelweb.exception.UnifiedException;<br>import com.travelweb.result.ResponseEnum;<br>import com.travelweb.service.ProductCategoryService;<br>import com.travelweb.service.ProductService;<br>import lombok.extern.slf4j.Slf4j;<br>import org.springframework.beans.factory.annotation.Autowired;<br>import org.springframework.web.bind.annotation.GetMapping;<br>import org.springframework.web.bind.annotation.PathVariable;<br>import org.springframework.web.bind.annotation.RequestMapping;</p><p>import org.springframework.stereotype.Controller;<br>import org.springframework.web.servlet.ModelAndView;</p><p>import javax.servlet.http.HttpSession;<br>import java.util.ArrayList;</p><p>&#x2F;**</p><ul><li><p></li><li><p>前端控制器</p></li><li></p></li><li></li><li><p>@author Yuki</p></li><li><p>@since 2022-05-12<br> *&#x2F;<br>@Controller<br>@RequestMapping(“&#x2F;product”)<br>@Slf4j<br>public class ProductController {<br> @Autowired<br> private ProductService productService;<br> @Autowired<br> private ProductCategoryService productCategoryService;</p><p> &#x2F;&#x2F;类型、id<br> @GetMapping(“&#x2F;list&#x2F;{type}&#x2F;{id}”)<br> public ModelAndView list(<br>     &#x2F;&#x2F;把两个参数拿出来<br>     @PathVariable(“type”) Integer type,<br>     @PathVariable(“id”) Integer productCategoryId,<br>     HttpSession session<br> ){<br> if(type &#x3D;&#x3D; null || productCategoryId &#x3D;&#x3D; null){<br>     log.info(“【商品列表】参数为空”);<br>     throw new UnifiedException(ResponseEnum.PARAMETER_NULL);<br> }<br> ModelAndView modelAndView &#x3D; new ModelAndView();<br> modelAndView.setViewName(“productList”);<br> &#x2F;&#x2F;填充数据<br> modelAndView.addObject(“productList”,this.productService.findAllByTypeAndProductCategoryId(type,productCategoryId));</p></li></ul><p>&#x2F;*        &#x2F;&#x2F;测试能否获取数据<br>        System.out.println(type);<br>        System.out.println(productCategoryId);*&#x2F;<br>        User user &#x3D; (User) session.getAttribute(“user”);<br>        if (user &#x3D;&#x3D; null){<br>            &#x2F;&#x2F;未登录,返回一个空的集合<br>            modelAndView.addObject(“cartList”, new ArrayList&lt;&gt;());<br>        }else {<br>            &#x2F;&#x2F;已登录,查询该用户的购物车记录<br>        }<br>        &#x2F;&#x2F;商品分类<br>        modelAndView.addObject(“list”, this.productCategoryService.buildProductCategoryMenu());<br>        return modelAndView;<br>    }<br>}</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs java"><br>```java<br><span class="hljs-keyword">package</span> com.travelweb.service;<br><br><span class="hljs-keyword">import</span> com.travelweb.entity.Product;<br><span class="hljs-keyword">import</span> com.baomidou.mybatisplus.extension.service.IService;<br><br><span class="hljs-keyword">import</span> java.util.List;<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * &lt;p&gt;</span><br><span class="hljs-comment"> *  服务类</span><br><span class="hljs-comment"> * &lt;/p&gt;</span><br><span class="hljs-comment"> *</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@author</span> Yuki</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@since</span> 2022-05-12</span><br><span class="hljs-comment"> */</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">interface</span> <span class="hljs-title class_">ProductService</span> <span class="hljs-keyword">extends</span> <span class="hljs-title class_">IService</span>&lt;Product&gt; &#123;<br>    <span class="hljs-keyword">public</span> List&lt;Product&gt; <span class="hljs-title function_">findAllByTypeAndProductCategoryId</span><span class="hljs-params">(Integer type, Integer id)</span>;<br>&#125;<br></code></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">package</span> com.travelweb.service.impl;<br><br><span class="hljs-keyword">import</span> com.baomidou.mybatisplus.core.conditions.query.QueryWrapper;<br><span class="hljs-keyword">import</span> com.travelweb.entity.Product;<br><span class="hljs-keyword">import</span> com.travelweb.mapper.ProductMapper;<br><span class="hljs-keyword">import</span> com.travelweb.service.ProductService;<br><span class="hljs-keyword">import</span> com.baomidou.mybatisplus.extension.service.impl.ServiceImpl;<br><span class="hljs-keyword">import</span> org.springframework.beans.factory.annotation.Autowired;<br><span class="hljs-keyword">import</span> org.springframework.stereotype.Service;<br><br><span class="hljs-keyword">import</span> java.util.List;<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * &lt;p&gt;</span><br><span class="hljs-comment"> *  服务实现类</span><br><span class="hljs-comment"> * &lt;/p&gt;</span><br><span class="hljs-comment"> *</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@author</span> Yuki</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@since</span> 2022-05-12</span><br><span class="hljs-comment"> */</span><br><span class="hljs-meta">@Service</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">ProductServiceImpl</span> <span class="hljs-keyword">extends</span> <span class="hljs-title class_">ServiceImpl</span>&lt;ProductMapper, Product&gt; <span class="hljs-keyword">implements</span> <span class="hljs-title class_">ProductService</span> &#123;<br>    <span class="hljs-meta">@Autowired</span><br>    <span class="hljs-keyword">private</span> ProductMapper productMapper;<br><br>    <span class="hljs-meta">@Override</span><br>    <span class="hljs-keyword">public</span> List&lt;Product&gt; <span class="hljs-title function_">findAllByTypeAndProductCategoryId</span><span class="hljs-params">(Integer type, Integer id)</span> &#123;<br>        QueryWrapper&lt;Product&gt; queryWrapper = <span class="hljs-keyword">new</span> <span class="hljs-title class_">QueryWrapper</span>&lt;&gt;();<br>        <span class="hljs-type">String</span> <span class="hljs-variable">column</span> <span class="hljs-operator">=</span> <span class="hljs-literal">null</span>;<br>        <span class="hljs-keyword">switch</span> (type)&#123;<br>            <span class="hljs-keyword">case</span> <span class="hljs-number">1</span>:<br>                column = <span class="hljs-string">&quot;categorylevelone_id&quot;</span>;<br>                <span class="hljs-keyword">break</span>;<br>            <span class="hljs-keyword">case</span> <span class="hljs-number">2</span>:<br>                column = <span class="hljs-string">&quot;categoryleveltwo_id&quot;</span>;<br>                <span class="hljs-keyword">break</span>;<br>            <span class="hljs-keyword">case</span> <span class="hljs-number">3</span>:<br>                column = <span class="hljs-string">&quot;categorylevelthree_id&quot;</span>;<br>                <span class="hljs-keyword">break</span>;<br>        &#125;<br>        queryWrapper.eq(column,id);<br><span class="hljs-comment">/*        List&lt;Product&gt; productList = this.productMapper.selectList(queryWrapper);</span><br><span class="hljs-comment">        return productList;*/</span><br>        <span class="hljs-keyword">return</span> <span class="hljs-built_in">this</span>.productMapper.selectList(queryWrapper);<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-comment">&lt;!--=================================网页主体开始==============================================--&gt;</span><br><span class="hljs-comment">&lt;!-- Product Section Begin --&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">section</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;product spad&quot;</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;container&quot;</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;filter__item&quot;</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;row&quot;</span>&gt;</span><br>                <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;col-lg-4 col-md-4&quot;</span>&gt;</span><br>                    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;filter__found&quot;</span>&gt;</span><br>                        <span class="hljs-tag">&lt;<span class="hljs-name">h6</span>&gt;</span>产品种类数：<span class="hljs-tag">&lt;<span class="hljs-name">span</span> <span class="hljs-attr">th:text</span>=<span class="hljs-string">&quot;$&#123;productList.size()&#125;&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span> <span class="hljs-tag">&lt;/<span class="hljs-name">h6</span>&gt;</span><br>                    <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>                <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>                <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;col-lg-4 col-md-3&quot;</span>&gt;</span><br>                    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;filter__option&quot;</span>&gt;</span><br>                        <span class="hljs-tag">&lt;<span class="hljs-name">span</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;icon_grid-2x2&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span><br>                        <span class="hljs-tag">&lt;<span class="hljs-name">span</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;icon_ul&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span><br>                    <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>                <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>            <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>        <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;row&quot;</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;col-lg-3 col-md-3 col-sm-3&quot;</span> <span class="hljs-attr">th:each</span>=<span class="hljs-string">&quot;product:$&#123;productList&#125;&quot;</span>&gt;</span><br>                <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;product__item&quot;</span>&gt;</span><br>                    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;product__item__pic set-bg&quot;</span>&gt;</span><br>                        <span class="hljs-tag">&lt;<span class="hljs-name">img</span> <span class="hljs-attr">th:src</span>=<span class="hljs-string">&quot;&#x27;/images/&#x27;+$&#123;product.fileName&#125;&quot;</span> <span class="hljs-attr">th:href</span>=<span class="hljs-string">&quot;&#x27;/product/detail/&#x27;+$&#123;product.id&#125;&quot;</span>&gt;</span><br>                        <span class="hljs-tag">&lt;<span class="hljs-name">ul</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;product__item__pic__hover&quot;</span>&gt;</span><br>                            <span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;#&quot;</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">i</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;fa fa-heart&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">i</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br>                            <span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;#&quot;</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">i</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;fa fa-retweet&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">i</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br>                            <span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;#&quot;</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">i</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;fa fa-shopping-cart&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">i</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br>                        <span class="hljs-tag">&lt;/<span class="hljs-name">ul</span>&gt;</span><br>                    <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>                    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;product__item__text&quot;</span> <span class="hljs-attr">th:href</span>=<span class="hljs-string">&quot;&#x27;/product/detail/&#x27;+$&#123;product.id&#125;&quot;</span>&gt;</span><br>                        <span class="hljs-tag">&lt;<span class="hljs-name">h6</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">th:href</span>=<span class="hljs-string">&quot;&#x27;/product/detail/&#x27;+$&#123;product.id&#125;&quot;</span> <span class="hljs-attr">th:text</span>=<span class="hljs-string">&quot;$&#123;product.name&#125;&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">h6</span>&gt;</span><br>                        <span class="hljs-tag">&lt;<span class="hljs-name">h5</span> <span class="hljs-attr">th:href</span>=<span class="hljs-string">&quot;&#x27;/product/detail/&#x27;+$&#123;product.id&#125;&quot;</span> <span class="hljs-attr">th:text</span>=<span class="hljs-string">&quot;&#x27;￥&#x27;+$&#123;product.price&#125;&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">h5</span>&gt;</span><br>                    <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>                <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>            <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>        <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">section</span>&gt;</span><br><span class="hljs-comment">&lt;!-- Product Section End --&gt;</span><br><span class="hljs-comment">&lt;!--=================================网页主体结束==============================================--&gt;</span><br></code></pre></td></tr></table></figure></li></ol><p><img src="https://yuki-picgo-img.oss-cn-beijing.aliyuncs.com/yuque-img/ProductController.png" alt="ProductController"></p><p><img src="https://yuki-picgo-img.oss-cn-beijing.aliyuncs.com/yuque-img/ProductService.png" alt="ProductService"></p><p><img src="https://yuki-picgo-img.oss-cn-beijing.aliyuncs.com/yuque-img/ProductServiceImpl.png" alt="ProductServiceImpl"></p><p><img src="https://yuki-picgo-img.oss-cn-beijing.aliyuncs.com/yuque-img/20220516222033.png"></p><ol start="21"><li>优化（可有可无）：商品列表页左侧导航栏不需要加载所有商品信息，把封装商品信息的方法单独放到<code>ProductCategoryController</code>中<img src="https://yuki-picgo-img.oss-cn-beijing.aliyuncs.com/yuque-img/20220516222723.png"></li></ol><p><img src="https://yuki-picgo-img.oss-cn-beijing.aliyuncs.com/yuque-img/20220516223039.png"></p><p><img src="C:\Users\10937\AppData\Roaming\Typora\typora-user-images\image-20220516223058381.png" alt="image-20220516223058381"></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@Override</span><br><span class="hljs-keyword">public</span> List&lt;ProductCategoryVO&gt; <span class="hljs-title function_">findAllProductByCategoryLevelOne</span><span class="hljs-params">()</span> &#123;<br>    <span class="hljs-comment">//1、获取一级分类，做一个条件查询即可，拿到集合再转成VO，再调下面的方法</span><br>    QueryWrapper&lt;ProductCategory&gt; queryWrapper = <span class="hljs-keyword">new</span> <span class="hljs-title class_">QueryWrapper</span>&lt;&gt;();<br>    queryWrapper.eq(<span class="hljs-string">&quot;type&quot;</span>, <span class="hljs-number">1</span>);<br>    List&lt;ProductCategory&gt; productCategoryList = <span class="hljs-built_in">this</span>.productCategoryMapper.selectList(queryWrapper);<br>    List&lt;ProductCategoryVO&gt; productCategoryVOList = productCategoryList.stream().map(ProductCategoryVO::<span class="hljs-keyword">new</span>).collect(Collectors.toList());<br>    getLevelOneProduct(productCategoryVOList);<br>    <span class="hljs-keyword">return</span> productCategoryVOList;<br>&#125;<br><br></code></pre></td></tr></table></figure><p><img src="https://yuki-picgo-img.oss-cn-beijing.aliyuncs.com/yuque-img/20220516223817.png"></p><p>更换下前端代码即可</p><p><img src="https://yuki-picgo-img.oss-cn-beijing.aliyuncs.com/yuque-img/20220516224020.png"></p><h2 id="5、商品查询"><a href="#5、商品查询" class="headerlink" title="5、商品查询"></a>5、商品查询</h2><ol><li><p>前台添加<code>action</code><img src="https://yuki-picgo-img.oss-cn-beijing.aliyuncs.com/yuque-img/20220516233306.png"></p></li><li><p>到<code>ProductController</code>控制器里写方法<img src="https://yuki-picgo-img.oss-cn-beijing.aliyuncs.com/yuque-img/20220516233904.png"></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@PostMapping(&quot;/search&quot;)</span><br><span class="hljs-keyword">public</span> ModelAndView <span class="hljs-title function_">search</span><span class="hljs-params">(String keyWord,HttpSession session)</span>&#123;<br><span class="hljs-comment">//1、对数据进行判断，从上面复制</span><br>    <span class="hljs-keyword">if</span>(keyWord == <span class="hljs-literal">null</span>)&#123;<br>        log.info(<span class="hljs-string">&quot;【商品搜索】参数为空&quot;</span>);<br>        <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">UnifiedException</span>(ResponseEnum.PARAMETER_NULL);<br>    &#125;<br>    <span class="hljs-comment">//2、判断是否登录，从上面复制</span><br>    <span class="hljs-type">ModelAndView</span> <span class="hljs-variable">modelAndView</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">ModelAndView</span>();<br>    modelAndView.setViewName(<span class="hljs-string">&quot;productList&quot;</span>);<br>    <span class="hljs-comment">//3、模糊查询的数据</span><br>    <span class="hljs-type">User</span> <span class="hljs-variable">user</span> <span class="hljs-operator">=</span> (User) session.getAttribute(<span class="hljs-string">&quot;user&quot;</span>);<br>    <span class="hljs-keyword">if</span> (user == <span class="hljs-literal">null</span>)&#123;<br>        <span class="hljs-comment">//未登录,返回一个空的集合</span><br>        modelAndView.addObject(<span class="hljs-string">&quot;cartList&quot;</span>, <span class="hljs-keyword">new</span> <span class="hljs-title class_">ArrayList</span>&lt;&gt;());<br>    &#125;<span class="hljs-keyword">else</span> &#123;<br>        <span class="hljs-comment">//已登录,查询该用户的购物车记录</span><br>    &#125;<br>    <span class="hljs-comment">//商品分类</span><br>    modelAndView.addObject(<span class="hljs-string">&quot;list&quot;</span>, <span class="hljs-built_in">this</span>.productCategoryService.buildProductCategoryMenu());<br>    <span class="hljs-keyword">return</span> modelAndView;<br>&#125;<br></code></pre></td></tr></table></figure></li><li><p>完成代码</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><code class="hljs java">    <span class="hljs-meta">@PostMapping(&quot;/search&quot;)</span><br>    <span class="hljs-keyword">public</span> ModelAndView <span class="hljs-title function_">search</span><span class="hljs-params">(String keyWord,HttpSession session)</span>&#123;<br>    <span class="hljs-comment">//1、对数据进行判断，从上面复制</span><br>        <span class="hljs-keyword">if</span>(keyWord == <span class="hljs-literal">null</span>)&#123;<br>            log.info(<span class="hljs-string">&quot;【商品搜索】参数为空&quot;</span>);<br>            <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">UnifiedException</span>(ResponseEnum.PARAMETER_NULL);<br>        &#125;<br>        <span class="hljs-comment">//2、判断是否登录，从上面复制</span><br>        <span class="hljs-type">ModelAndView</span> <span class="hljs-variable">modelAndView</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">ModelAndView</span>();<br>        modelAndView.setViewName(<span class="hljs-string">&quot;productList&quot;</span>);<br>        <span class="hljs-comment">//3、模糊查询的数据</span><br>        QueryWrapper&lt;Product&gt; queryWrapper = <span class="hljs-keyword">new</span> <span class="hljs-title class_">QueryWrapper</span>&lt;&gt;();<br>        <span class="hljs-comment">//根据关键字模糊查询</span><br>        queryWrapper.like(<span class="hljs-string">&quot;name&quot;</span>,keyWord);<br><span class="hljs-comment">//        this.productService.list(queryWrapper).var</span><br>        <span class="hljs-comment">//结果</span><br><span class="hljs-comment">//        List&lt;Product&gt; list = this.productService.list(queryWrapper);</span><br>        modelAndView.addObject(<span class="hljs-string">&quot;productList&quot;</span>,<span class="hljs-built_in">this</span>.productService.list(queryWrapper));<br>        <span class="hljs-type">User</span> <span class="hljs-variable">user</span> <span class="hljs-operator">=</span> (User) session.getAttribute(<span class="hljs-string">&quot;user&quot;</span>);<br>        <span class="hljs-keyword">if</span> (user == <span class="hljs-literal">null</span>)&#123;<br>            <span class="hljs-comment">//未登录,返回一个空的集合</span><br>            modelAndView.addObject(<span class="hljs-string">&quot;cartList&quot;</span>, <span class="hljs-keyword">new</span> <span class="hljs-title class_">ArrayList</span>&lt;&gt;());<br>        &#125;<span class="hljs-keyword">else</span> &#123;<br>            <span class="hljs-comment">//已登录,查询该用户的购物车记录</span><br>        &#125;<br>        <span class="hljs-comment">//商品分类</span><br>        modelAndView.addObject(<span class="hljs-string">&quot;list&quot;</span>, <span class="hljs-built_in">this</span>.productCategoryService.buildProductCategoryMenu());<br>        <span class="hljs-keyword">return</span> modelAndView;<br>    &#125;<br></code></pre></td></tr></table></figure></li><li><p>测试成功<img src="https://yuki-picgo-img.oss-cn-beijing.aliyuncs.com/yuque-img/20220516234703.png"></p></li></ol><h2 id="6、商品详情展示"><a href="#6、商品详情展示" class="headerlink" title="6、商品详情展示"></a>6、商品详情展示</h2><ol><li><p>点击商品进入对应的商品详情页面（<code>product</code>控制器，<code>detail</code>方法）<img src="C:\Users\10937\AppData\Roaming\Typora\typora-user-images\image-20220517151831358.png" alt="image-20220517151831358"></p></li><li><p>编写<code>ProductController</code></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * 商品详情页</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@param</span> id</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@return</span></span><br><span class="hljs-comment"> */</span><br><span class="hljs-meta">@GetMapping(&quot;/detail/&#123;id&#125;&quot;)</span><br><span class="hljs-keyword">public</span> ModelAndView <span class="hljs-title function_">detail</span><span class="hljs-params">(<span class="hljs-meta">@PathVariable(&quot;id&quot;)</span> Integer id)</span>&#123;<br>   <br>&#125;<br></code></pre></td></tr></table></figure></li><li><p>非空校验（从上面复制）</p></li><li><p>获取数据</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-type">ModelAndView</span> <span class="hljs-variable">modelAndView</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">ModelAndView</span>();<br><span class="hljs-keyword">return</span> modelAndView;<br></code></pre></td></tr></table></figure></li><li><p>指定页面<code>modelAndView.setViewName(&quot;productDetail&quot;);</code></p></li><li><p>判断用户是否登录（从上面复制）</p></li><li><p>添加商品分类菜单（从上面复制）</p></li><li><p>添加商品详情（已经有商品id了，直接通过<code>ProductService</code>提供的方法查询即可）<img src="https://yuki-picgo-img.oss-cn-beijing.aliyuncs.com/yuque-img/20220517162532.png"></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * 商品详情页</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@param</span> id</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@return</span></span><br><span class="hljs-comment"> */</span><br><span class="hljs-meta">@GetMapping(&quot;/detail/&#123;id&#125;&quot;)</span><br><span class="hljs-keyword">public</span> ModelAndView <span class="hljs-title function_">detail</span><span class="hljs-params">(<span class="hljs-meta">@PathVariable(&quot;id&quot;)</span> Integer id,HttpSession session)</span>&#123;<br>    <span class="hljs-keyword">if</span>(id == <span class="hljs-literal">null</span>)&#123;<br>        log.info(<span class="hljs-string">&quot;【商品详情】参数为空&quot;</span>);<br>        <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">UnifiedException</span>(ResponseEnum.PARAMETER_NULL);<br>    &#125;<br>    <span class="hljs-type">ModelAndView</span> <span class="hljs-variable">modelAndView</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">ModelAndView</span>();<br>    <span class="hljs-comment">//指定页面</span><br>    modelAndView.setViewName(<span class="hljs-string">&quot;productDetail&quot;</span>);<br>    <span class="hljs-comment">//判断用户是否登录</span><br>    <span class="hljs-type">User</span> <span class="hljs-variable">user</span> <span class="hljs-operator">=</span> (User) session.getAttribute(<span class="hljs-string">&quot;user&quot;</span>);<br>    <span class="hljs-keyword">if</span> (user == <span class="hljs-literal">null</span>)&#123;<br>        <span class="hljs-comment">//未登录,返回一个空的集合</span><br>        modelAndView.addObject(<span class="hljs-string">&quot;cartList&quot;</span>, <span class="hljs-keyword">new</span> <span class="hljs-title class_">ArrayList</span>&lt;&gt;());<br>    &#125;<span class="hljs-keyword">else</span> &#123;<br>        <span class="hljs-comment">//已登录,查询该用户的购物车记录</span><br>    &#125;<br>    <span class="hljs-comment">//商品分类</span><br>    modelAndView.addObject(<span class="hljs-string">&quot;list&quot;</span>, <span class="hljs-built_in">this</span>.productCategoryService.buildProductCategoryMenu());<br>    <span class="hljs-comment">//商品详情</span><br>    modelAndView.addObject(<span class="hljs-string">&quot;product&quot;</span>, <span class="hljs-built_in">this</span>.productService.getById(id));<br>    <span class="hljs-keyword">return</span> modelAndView;<br>&#125;<br></code></pre></td></tr></table></figure></li><li><p>修改前端页面<img src="https://yuki-picgo-img.oss-cn-beijing.aliyuncs.com/yuque-img/20220517162608.png"></p></li></ol><h2 id="8、添加购物车"><a href="#8、添加购物车" class="headerlink" title="8、添加购物车"></a>8、添加购物车</h2><p>控制器封装cart对象，</p><ol><li><p>使用过滤器判断是否为登录用户</p></li><li><p>声明过滤器逻辑，对登录状态进行判断<img src="C:\Users\10937\AppData\Roaming\Typora\typora-user-images\image-20220517172245661.png" alt="image-20220517172245661"></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">package</span> com.travelweb.filter;<br><br><span class="hljs-keyword">import</span> javax.servlet.*;<br><span class="hljs-keyword">import</span> javax.servlet.http.HttpServletRequest;<br><span class="hljs-keyword">import</span> javax.servlet.http.HttpServletResponse;<br><span class="hljs-keyword">import</span> javax.servlet.http.HttpSession;<br><span class="hljs-keyword">import</span> java.io.IOException;<br><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">UserFilter</span> <span class="hljs-keyword">implements</span> <span class="hljs-title class_">Filter</span> &#123;<br>    <span class="hljs-meta">@Override</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">doFilter</span><span class="hljs-params">(ServletRequest servletRequest, ServletResponse servletResponse, FilterChain filterChain)</span> <span class="hljs-keyword">throws</span> IOException, ServletException &#123;<br>        <span class="hljs-type">HttpServletRequest</span> <span class="hljs-variable">request</span> <span class="hljs-operator">=</span> (HttpServletRequest) servletRequest;<br>        <span class="hljs-type">HttpServletResponse</span> <span class="hljs-variable">response</span> <span class="hljs-operator">=</span> (HttpServletResponse) servletResponse;<br>        <span class="hljs-type">HttpSession</span> <span class="hljs-variable">session</span> <span class="hljs-operator">=</span> request.getSession();<br>        <span class="hljs-comment">//判断是否为登录用户</span><br>        <span class="hljs-keyword">if</span>(session.getAttribute(<span class="hljs-string">&quot;user&quot;</span>) == <span class="hljs-literal">null</span>)&#123;<br>            response.sendRedirect(<span class="hljs-string">&quot;/login&quot;</span>);<br>        &#125;<span class="hljs-keyword">else</span>&#123;<br>            <span class="hljs-comment">//过滤器放行</span><br>            filterChain.doFilter(servletRequest,servletResponse);<br>        &#125;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure></li><li><p>添加过滤器的配置类，注入IOC容器<img src="C:\Users\10937\AppData\Roaming\Typora\typora-user-images\image-20220517172037794.png" alt="image-20220517172037794"></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">package</span> com.travelweb.configuration;<br><br><span class="hljs-keyword">import</span> com.travelweb.filter.UserFilter;<br><span class="hljs-keyword">import</span> org.springframework.boot.web.servlet.FilterRegistrationBean;<br><span class="hljs-keyword">import</span> org.springframework.context.annotation.Bean;<br><span class="hljs-keyword">import</span> org.springframework.context.annotation.Configuration;<br><br><span class="hljs-meta">@Configuration</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">FilterConfiguration</span> &#123;<br><br>    <span class="hljs-meta">@Bean</span><br>    <span class="hljs-keyword">public</span> FilterRegistrationBean <span class="hljs-title function_">registrationBean</span><span class="hljs-params">()</span>&#123;<br>        <span class="hljs-comment">//声明注册对象</span><br>        <span class="hljs-type">FilterRegistrationBean</span> <span class="hljs-variable">filterRegistrationBean</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">FilterRegistrationBean</span>();<br>        <span class="hljs-comment">//把UserFilter加进去</span><br>        filterRegistrationBean.setFilter(<span class="hljs-keyword">new</span> <span class="hljs-title class_">UserFilter</span>());<br>       <span class="hljs-comment">//配置拦截路径 </span><br>        filterRegistrationBean.addUrlPatterns(<span class="hljs-string">&quot;/cart/*&quot;</span>,<span class="hljs-string">&quot;/user/orderList&quot;</span>,<span class="hljs-string">&quot;/user/addressList&quot;</span>);<br>        <span class="hljs-keyword">return</span> filterRegistrationBean;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure></li><li><p>前台<img src="C:\Users\10937\AppData\Roaming\Typora\typora-user-images\image-20220517165317438.png" alt="image-20220517165317438"></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-comment">//添加购物车</span><br><span class="hljs-keyword">function</span> <span class="hljs-title function_">addCart</span>(<span class="hljs-params">productId,price</span>)&#123;<br>    <span class="hljs-keyword">let</span> stockStr = $(<span class="hljs-string">&quot;#stock&quot;</span>).<span class="hljs-title function_">text</span>();<br>    <span class="hljs-keyword">let</span> stock = <span class="hljs-built_in">parseInt</span>(stockStr);<br>    <span class="hljs-keyword">if</span>(stock == <span class="hljs-number">0</span>)&#123;<br>        <span class="hljs-title function_">alert</span>(<span class="hljs-string">&quot;库存不足！&quot;</span>);<br>        <span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>;<br>    &#125;<br>    <span class="hljs-keyword">let</span> quantity = $(<span class="hljs-string">&quot;#quantity&quot;</span>).<span class="hljs-title function_">val</span>();<br>    <span class="hljs-variable language_">window</span>.<span class="hljs-property">location</span>.<span class="hljs-property">href</span>=<span class="hljs-string">&quot;/cart/add/&quot;</span>+productId+<span class="hljs-string">&quot;/&quot;</span>+price+<span class="hljs-string">&quot;/&quot;</span>+quantity;<br>&#125;<br></code></pre></td></tr></table></figure><p><img src="https://yuki-picgo-img.oss-cn-beijing.aliyuncs.com/yuque-img/20220517165350.png"></p></li><li><p>创建方法<img src="https://yuki-picgo-img.oss-cn-beijing.aliyuncs.com/yuque-img/20220517165644.png"></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@GetMapping(&quot;/add/&#123;productId&#125;/&#123;price&#125;/&#123;quantity&#125;&quot;)</span><br><span class="hljs-keyword">public</span> String <span class="hljs-title function_">add</span><span class="hljs-params">()</span>&#123;<br>    <br>&#125;<br></code></pre></td></tr></table></figure></li><li><p>取出三个参数，非空校验，判断是否为登录用户（从上面复制）<img src="https://yuki-picgo-img.oss-cn-beijing.aliyuncs.com/yuque-img/20220517171539.png"></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * 添加购物车</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@return</span></span><br><span class="hljs-comment"> */</span><br><span class="hljs-meta">@GetMapping(&quot;/add/&#123;productId&#125;/&#123;price&#125;/&#123;quantity&#125;&quot;)</span><br><span class="hljs-keyword">public</span> ModelAndView <span class="hljs-title function_">add</span><span class="hljs-params">(</span><br><span class="hljs-params">        //取出三个参数</span><br><span class="hljs-params">        <span class="hljs-meta">@PathVariable(&quot;productId&quot;)</span> Integer productId,</span><br><span class="hljs-params">        <span class="hljs-meta">@PathVariable(&quot;price&quot;)</span> Float price,</span><br><span class="hljs-params">        <span class="hljs-meta">@PathVariable(&quot;quantity&quot;)</span> Integer quantity,</span><br><span class="hljs-params">        HttpSession session</span><br><span class="hljs-params">)</span>&#123;<br>    <span class="hljs-keyword">if</span>(productId == <span class="hljs-literal">null</span> || price == <span class="hljs-literal">null</span> || quantity == <span class="hljs-literal">null</span>)&#123;<br>        log.info(<span class="hljs-string">&quot;【添加购物车】参数为空&quot;</span>);<br>        <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">UnifiedException</span>(ResponseEnum.PARAMETER_NULL);<br>    &#125;<br>    <span class="hljs-type">User</span> <span class="hljs-variable">user</span> <span class="hljs-operator">=</span> (User) session.getAttribute(<span class="hljs-string">&quot;user&quot;</span>);<br>    <span class="hljs-keyword">if</span>(user == <span class="hljs-literal">null</span>)&#123;<br>        log.info(<span class="hljs-string">&quot;【添加购物车】当前为未登录状态&quot;</span>);<br>        <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">UnifiedException</span>(ResponseEnum.NOT_LOGIN);<br>    &#125;<br>    <span class="hljs-type">ModelAndView</span> <span class="hljs-variable">modelAndView</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">ModelAndView</span>();<br>    <span class="hljs-keyword">return</span> modelAndView;<br>&#125;<br></code></pre></td></tr></table></figure></li><li><p><code>CartService</code>新建方法判断是否添加成功<code>public Boolean add(Integer productOd,Float price,Integer quantity);</code></p></li><li><p>实现方法CTRL+I<img src="https://yuki-picgo-img.oss-cn-beijing.aliyuncs.com/yuque-img/20220517171151.png"></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@Service</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">CartServiceImpl</span> <span class="hljs-keyword">extends</span> <span class="hljs-title class_">ServiceImpl</span>&lt;CartMapper, Cart&gt; <span class="hljs-keyword">implements</span> <span class="hljs-title class_">CartService</span> &#123;<br>    <span class="hljs-meta">@Override</span><br>    <span class="hljs-keyword">public</span> Boolean <span class="hljs-title function_">add</span><span class="hljs-params">(Integer productOd, Float price, Integer quantity)</span> &#123;<br>        <span class="hljs-comment">//封装cart对象</span><br>        <span class="hljs-type">Cart</span> <span class="hljs-variable">cart</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">Cart</span>();<br>        <span class="hljs-keyword">return</span> <span class="hljs-literal">null</span>;<br>    &#125;<br>&#125;<br><br></code></pre></td></tr></table></figure></li><li><p>查询用户购物车记录</p></li><li><p>到<code>ProductCategoryController</code>注入<code>CartService</code></p></li><li><p>完善登录逻辑，查询已登录用户的购物车</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">//已登录,查询该用户的购物车记录</span><br>QueryWrapper&lt;Cart&gt; queryWrapper = <span class="hljs-keyword">new</span> <span class="hljs-title class_">QueryWrapper</span>&lt;&gt;();<br>queryWrapper.eq(<span class="hljs-string">&quot;user_id&quot;</span>,user.getId());<br>modelAndView.addObject(<span class="hljs-string">&quot;cartList&quot;</span>,<span class="hljs-built_in">this</span>.cartService.list(queryWrapper));<br></code></pre></td></tr></table></figure></li><li><p><img src="https://yuki-picgo-img.oss-cn-beijing.aliyuncs.com/yuque-img/20220517174218.png"></p></li><li><p>其他控制器有判断用户登陆状态的也加上</p></li><li><p>登录用户展示用户名，到前端修改<img src="https://yuki-picgo-img.oss-cn-beijing.aliyuncs.com/yuque-img/20220517175115.png"></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">li</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;nav-item&quot;</span> <span class="hljs-attr">th:if</span>=<span class="hljs-string">&quot;$&#123;session.user == null&#125;&quot;</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;nav-link&quot;</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;login.html&quot;</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">i</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;fa fa-user&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">i</span>&gt;</span>登录<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">li</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;nav-item&quot;</span> <span class="hljs-attr">th:if</span>=<span class="hljs-string">&quot;$&#123;session.user != null&#125;&quot;</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;nav-link&quot;</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;login.html&quot;</span> &gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">i</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;fa fa-user&quot;</span> <span class="hljs-attr">th:text</span>=<span class="hljs-string">&quot;$&#123;session.user.userName&#125;&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">i</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br></code></pre></td></tr></table></figure></li><li><p>对对象的封装放到控制器里，<code>CartService</code>直接传入cart对象，同时修改impl中实现方法的传入参数<img src="https://yuki-picgo-img.oss-cn-beijing.aliyuncs.com/yuque-img/20220519144407.png"></p></li><li><p>填充数据<img src="https://yuki-picgo-img.oss-cn-beijing.aliyuncs.com/yuque-img/20220519144816.png"></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs java">cart.setUserId(user.getId());<br>cart.setProductId(productId);<br>cart.setQuantity(quantity);<br>cart.setCost(price * quantity);<br></code></pre></td></tr></table></figure></li><li><p>调<code>CartService</code><img src="https://yuki-picgo-img.oss-cn-beijing.aliyuncs.com/yuque-img/20220519145148.png"></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs java">           <span class="hljs-meta">@Autowired</span><br>    <span class="hljs-keyword">private</span> CartService cartService;<br><br>       <br>       <br>       <br>       <span class="hljs-comment">//封装cart对象</span><br>        <span class="hljs-type">Cart</span> <span class="hljs-variable">cart</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">Cart</span>();<br>        cart.setUserId(user.getId());<br>        cart.setProductId(productId);<br>        cart.setQuantity(quantity);<br>        cart.setCost(price * quantity);<br><span class="hljs-comment">//        this.cartService.add(cart).var</span><br>        <span class="hljs-type">Boolean</span> <span class="hljs-variable">add</span> <span class="hljs-operator">=</span> <span class="hljs-built_in">this</span>.cartService.add(cart);<br>        <span class="hljs-keyword">if</span>(!add)&#123;<br>            log.info(<span class="hljs-string">&quot;【添加购物车】添加失败&quot;</span>);<br>            <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">UnifiedException</span>(ResponseEnum.CART_ADD_ERROR);<br>        &#125;<br></code></pre></td></tr></table></figure></li><li><p>回到<code>CartServiceImpl</code>完成<code>add</code>方法，注入<code>cartMapper</code>,调<code>cartMapper</code>方法写入数据<img src="https://yuki-picgo-img.oss-cn-beijing.aliyuncs.com/yuque-img/20220519145519.png"></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@Autowired</span><br><span class="hljs-keyword">private</span> CartMapper cartMapper;<br>    <br><span class="hljs-meta">@Override</span><br><span class="hljs-keyword">public</span> Boolean <span class="hljs-title function_">add</span><span class="hljs-params">(Cart cart)</span> &#123;<br>    <span class="hljs-comment">//添加购物车</span><br>    <span class="hljs-type">int</span> <span class="hljs-variable">insert</span> <span class="hljs-operator">=</span> <span class="hljs-built_in">this</span>.cartMapper.insert(cart);<br>    <span class="hljs-keyword">if</span>(insert != <span class="hljs-number">1</span>)&#123;<br>        <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">UnifiedException</span>(ResponseEnum.CART_ADD_ERROR);<br>    &#125;<br>    <span class="hljs-keyword">return</span> <span class="hljs-literal">null</span>;<br>&#125;<br></code></pre></td></tr></table></figure></li><li><p>添加到购物车之后，商品减库存。调用<code>ProductMapper</code>(mybatis-plus要先查询stock，再做update，这里我们使用自定义的Mapper)<img src="https://yuki-picgo-img.oss-cn-beijing.aliyuncs.com/yuque-img/20220519150813.png"></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">public</span> <span class="hljs-type">int</span> <span class="hljs-title function_">updateStockById</span><span class="hljs-params">(Integer id,Integer stock)</span>;<br></code></pre></td></tr></table></figure></li><li><p>到<code>xml</code>创建操作</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">update</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;updateStockById&quot;</span>&gt;</span><br>    update product set stock = #&#123;param2&#125; where id = #&#123;param1&#125;<br><span class="hljs-tag">&lt;/<span class="hljs-name">update</span>&gt;</span>``<br></code></pre></td></tr></table></figure><p><img src="https://yuki-picgo-img.oss-cn-beijing.aliyuncs.com/yuque-img/20220519150926.png"></p></li><li><p>调用刚创建的操作<img src="https://yuki-picgo-img.oss-cn-beijing.aliyuncs.com/yuque-img/20220519151342.png"></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">package</span> com.travelweb.service.impl;<br><br><span class="hljs-keyword">import</span> com.travelweb.entity.Cart;<br><span class="hljs-keyword">import</span> com.travelweb.exception.UnifiedException;<br><span class="hljs-keyword">import</span> com.travelweb.mapper.CartMapper;<br><span class="hljs-keyword">import</span> com.travelweb.mapper.ProductMapper;<br><span class="hljs-keyword">import</span> com.travelweb.result.ResponseEnum;<br><span class="hljs-keyword">import</span> com.travelweb.service.CartService;<br><span class="hljs-keyword">import</span> com.baomidou.mybatisplus.extension.service.impl.ServiceImpl;<br><span class="hljs-keyword">import</span> lombok.extern.slf4j.Slf4j;<br><span class="hljs-keyword">import</span> org.springframework.beans.factory.annotation.Autowired;<br><span class="hljs-keyword">import</span> org.springframework.stereotype.Service;<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * &lt;p&gt;</span><br><span class="hljs-comment"> *  服务实现类</span><br><span class="hljs-comment"> * &lt;/p&gt;</span><br><span class="hljs-comment"> *</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@author</span> Yuki</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@since</span> 2022-05-12</span><br><span class="hljs-comment"> */</span><br><span class="hljs-meta">@Service</span><br><span class="hljs-meta">@Slf4j</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">CartServiceImpl</span> <span class="hljs-keyword">extends</span> <span class="hljs-title class_">ServiceImpl</span>&lt;CartMapper, Cart&gt; <span class="hljs-keyword">implements</span> <span class="hljs-title class_">CartService</span> &#123;<br>    <span class="hljs-meta">@Autowired</span><br>    <span class="hljs-keyword">private</span> CartMapper cartMapper;<br>    <span class="hljs-meta">@Autowired</span><br>    <span class="hljs-keyword">private</span> ProductMapper productMapper;<br><br>    <span class="hljs-meta">@Override</span><br>    <span class="hljs-keyword">public</span> Boolean <span class="hljs-title function_">add</span><span class="hljs-params">(Cart cart)</span> &#123;<br>        <span class="hljs-comment">//添加购物车</span><br>        <span class="hljs-type">int</span> <span class="hljs-variable">insert</span> <span class="hljs-operator">=</span> <span class="hljs-built_in">this</span>.cartMapper.insert(cart);<br>        <span class="hljs-keyword">if</span>(insert != <span class="hljs-number">1</span>)&#123;<br>            <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">UnifiedException</span>(ResponseEnum.CART_ADD_ERROR);<br>        &#125;<br>        <span class="hljs-comment">//添加购物车之后商品减库存</span><br>        <span class="hljs-built_in">this</span>.productMapper.updateStockById(cart.getProductId(), );<br>        <span class="hljs-keyword">return</span> <span class="hljs-literal">null</span>;<br>    &#125;<br><br><br>&#125;<br></code></pre></td></tr></table></figure></li><li><p>再去Mapper写一个方法，通过id查库存<code>public Integer getStockById(Integer id);</code></p></li><li><p>到xml中写方法</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">select</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;getStockById&quot;</span> <span class="hljs-attr">resultType</span>=<span class="hljs-string">&quot;int&quot;</span>&gt;</span><br>    select stock from product where id = #&#123;id&#125;<br><span class="hljs-tag">&lt;/<span class="hljs-name">select</span>&gt;</span><br></code></pre></td></tr></table></figure></li><li><p>将参数都改为Integer，添加<code>@Transactional</code>注解，以使得数据能够回滚<img src="https://yuki-picgo-img.oss-cn-beijing.aliyuncs.com/yuque-img/20220519152512.png"></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">package</span> com.travelweb.service.impl;<br><br><span class="hljs-keyword">import</span> com.travelweb.entity.Cart;<br><span class="hljs-keyword">import</span> com.travelweb.exception.UnifiedException;<br><span class="hljs-keyword">import</span> com.travelweb.mapper.CartMapper;<br><span class="hljs-keyword">import</span> com.travelweb.mapper.ProductMapper;<br><span class="hljs-keyword">import</span> com.travelweb.result.ResponseEnum;<br><span class="hljs-keyword">import</span> com.travelweb.service.CartService;<br><span class="hljs-keyword">import</span> com.baomidou.mybatisplus.extension.service.impl.ServiceImpl;<br><span class="hljs-keyword">import</span> lombok.extern.slf4j.Slf4j;<br><span class="hljs-keyword">import</span> org.springframework.beans.factory.annotation.Autowired;<br><span class="hljs-keyword">import</span> org.springframework.stereotype.Service;<br><span class="hljs-keyword">import</span> org.springframework.transaction.annotation.Transactional;<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * &lt;p&gt;</span><br><span class="hljs-comment"> *  服务实现类</span><br><span class="hljs-comment"> * &lt;/p&gt;</span><br><span class="hljs-comment"> *</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@author</span> Yuki</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@since</span> 2022-05-12</span><br><span class="hljs-comment"> */</span><br><span class="hljs-meta">@Service</span><br><span class="hljs-meta">@Slf4j</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">CartServiceImpl</span> <span class="hljs-keyword">extends</span> <span class="hljs-title class_">ServiceImpl</span>&lt;CartMapper, Cart&gt; <span class="hljs-keyword">implements</span> <span class="hljs-title class_">CartService</span> &#123;<br>    <span class="hljs-meta">@Autowired</span><br>    <span class="hljs-keyword">private</span> CartMapper cartMapper;<br>    <span class="hljs-meta">@Autowired</span><br>    <span class="hljs-keyword">private</span> ProductMapper productMapper;<br><br>    <span class="hljs-meta">@Override</span><br>    <span class="hljs-meta">@Transactional</span><br><br>    <span class="hljs-keyword">public</span> Boolean <span class="hljs-title function_">add</span><span class="hljs-params">(Cart cart)</span> &#123;<br>        <span class="hljs-comment">//添加购物车</span><br>        <span class="hljs-type">int</span> <span class="hljs-variable">insert</span> <span class="hljs-operator">=</span> <span class="hljs-built_in">this</span>.cartMapper.insert(cart);<br>        <span class="hljs-keyword">if</span>(insert != <span class="hljs-number">1</span>)&#123;<br>            <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">UnifiedException</span>(ResponseEnum.CART_ADD_ERROR);<br>        &#125;<br>        <span class="hljs-comment">//添加购物车之后商品减库存</span><br>        <span class="hljs-comment">//首先查询库存，用我们再mapper里自创的方法</span><br>        <span class="hljs-type">Integer</span> <span class="hljs-variable">stock</span> <span class="hljs-operator">=</span> <span class="hljs-built_in">this</span>.productMapper.getStockById(cart.getProductId());<br>        <span class="hljs-comment">//判断库存状态</span><br>        <span class="hljs-keyword">if</span>(stock == <span class="hljs-literal">null</span>)&#123;<br>            log.info(<span class="hljs-string">&quot;【添加购物车】商品不存在&quot;</span>);<br>            <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">UnifiedException</span>(ResponseEnum.PRODUCT_NOT_EXISTS);<br>        &#125;<br>        <span class="hljs-keyword">if</span>(stock == <span class="hljs-number">0</span>)&#123;<br>            log.info(<span class="hljs-string">&quot;【添加购物车】库存不足&quot;</span>);<br>            <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">UnifiedException</span>(ResponseEnum.PRODUCT_STOCK_ERROR);<br>        &#125;<br>        <span class="hljs-comment">//计算最新库存</span><br>        <span class="hljs-type">Integer</span> <span class="hljs-variable">newStock</span> <span class="hljs-operator">=</span> stock - cart.getQuantity();<br>        <span class="hljs-keyword">if</span>(newStock &lt; <span class="hljs-number">0</span>)&#123;<br>            log.info(<span class="hljs-string">&quot;【添加购物车】库存不足&quot;</span>);<br>            <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">UnifiedException</span>(ResponseEnum.PRODUCT_STOCK_ERROR);<br>        &#125;<br>        <span class="hljs-comment">//将新库存数据传入数据库</span><br>        <span class="hljs-built_in">this</span>.productMapper.updateStockById(cart.getProductId(),newStock);<br>        <span class="hljs-keyword">return</span> <span class="hljs-literal">true</span>;<br>    &#125;<br><br><br>&#125;<br><br></code></pre></td></tr></table></figure></li><li><p>添加成功之后让他来到购物车页面<code>modelAndView.setViewName(&quot;settlement1&quot;);</code></p></li><li><p>进行测试，随便点一个商品加入购物车，添加成功<img src="https://yuki-picgo-img.oss-cn-beijing.aliyuncs.com/yuque-img/20220519153523.png"></p></li></ol><h2 id="9、查看购物车"><a href="#9、查看购物车" class="headerlink" title="9、查看购物车"></a>9、查看购物车</h2><ol><li><p>添加用户购物车数据</p></li><li><p>新建<code>CartVO</code>，<code>cart</code>表中的数据不足以显示购物车中商品所需的所有信息<img src="C:\Users\10937\AppData\Roaming\Typora\typora-user-images\image-20220519154855552.png" alt="image-20220519154855552"></p></li><li><p>去<code>CartService</code>返回一个cartVO的集合</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">//通过用户id找到当前用户的购物车信息</span><br><span class="hljs-keyword">public</span> List&lt;CartVO&gt; <span class="hljs-title function_">findVOListByUserId</span><span class="hljs-params">(Integer userId)</span>;<br></code></pre></td></tr></table></figure></li><li><p>实现方法<img src="https://yuki-picgo-img.oss-cn-beijing.aliyuncs.com/yuque-img/20220519160049.png"></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@Override</span><br><span class="hljs-keyword">public</span> List&lt;CartVO&gt; <span class="hljs-title function_">findVOListByUserId</span><span class="hljs-params">(Integer userId)</span> &#123;<br>    QueryWrapper&lt;Cart&gt; queryWrapper = <span class="hljs-keyword">new</span> <span class="hljs-title class_">QueryWrapper</span>&lt;&gt;();<br>    queryWrapper.eq(<span class="hljs-string">&quot;user_id&quot;</span>, userId);<br>    List&lt;Cart&gt; cartList = <span class="hljs-built_in">this</span>.cartMapper.selectList(queryWrapper);<br>    List&lt;CartVO&gt; cartVOList = <span class="hljs-keyword">new</span> <span class="hljs-title class_">ArrayList</span>&lt;&gt;();<br>    <span class="hljs-keyword">for</span> (Cart cart : cartList) &#123;<br>        <span class="hljs-comment">//通过ProductId查询商品的信息</span><br>        <span class="hljs-type">Product</span> <span class="hljs-variable">product</span> <span class="hljs-operator">=</span> <span class="hljs-built_in">this</span>.productMapper.selectById(cart.getProductId());<br>        <span class="hljs-type">CartVO</span> <span class="hljs-variable">cartVO</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">CartVO</span>();<br>        <span class="hljs-comment">//进行赋值，把product数据赋给VO，把cart数据赋给VO，两张表混合的数据</span><br>        BeanUtils.copyProperties(product, cartVO);<br>        BeanUtils.copyProperties(cart, cartVO);<br>        cartVOList.add(cartVO);<br>    &#125;<br>    <span class="hljs-keyword">return</span> cartVOList;<br>&#125;<br></code></pre></td></tr></table></figure></li><li><p>通过id查询用户的购物车记录<img src="https://yuki-picgo-img.oss-cn-beijing.aliyuncs.com/yuque-img/20220519160341.png"></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs java"><br><span class="hljs-comment">//已登录,查询该用户的购物车记录</span><br>            modelAndView.addObject(<span class="hljs-string">&quot;cartList&quot;</span>,<span class="hljs-built_in">this</span>.cartService.findVOListByUserId(user.getId()));<br></code></pre></td></tr></table></figure></li><li><p>前端对<code>cartList</code>进行遍历即可获得所需的数据<img src="https://yuki-picgo-img.oss-cn-beijing.aliyuncs.com/yuque-img/20220519160437.png"></p></li><li><p>修改所有包含<code>cartList</code>的控制器中已登录用户的购物车记录(求和：&#96;th:text&#x3D;”$</p></li></ol>]]></content>
    
    
    
    <tags>
      
      <tag>笔记</tag>
      
      <tag>thyme leaf</tag>
      
      <tag>Javaweb</tag>
      
      <tag>spring boot</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>搭建商城网站</title>
    <link href="/2022/05/02/%E6%90%AD%E5%BB%BA%E5%95%86%E5%9F%8E%E7%BD%91%E9%A1%B5/"/>
    <url>/2022/05/02/%E6%90%AD%E5%BB%BA%E5%95%86%E5%9F%8E%E7%BD%91%E9%A1%B5/</url>
    
    <content type="html"><![CDATA[<p>Spring Boot + MyBatis Plus + Thymeleaf + MySQL搭建动态网页</p><span id="more"></span><p>[TOC]</p><h1 id="一、技术框架"><a href="#一、技术框架" class="headerlink" title="一、技术框架"></a>一、技术框架</h1><p>Spring Boot + MyBatis Plus + Thymeleaf + MySQL</p><h1 id="二、前端页面"><a href="#二、前端页面" class="headerlink" title="二、前端页面"></a>二、前端页面</h1><ul><li><p>公共部分提取出来然后其他页面引入即可</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">th:fragment</span>=<span class="hljs-string">&quot;source&quot;</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">charset</span>=<span class="hljs-string">&quot;utf-8&quot;</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;viewport&quot;</span> <span class="hljs-attr">content</span>=<span class="hljs-string">&quot;width=device-width, initial-scale=1, shrink-to-fit=no&quot;</span>&gt;</span><br><span class="hljs-comment">&lt;!-- CSS only --&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">link</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css&quot;</span> <span class="hljs-attr">rel</span>=<span class="hljs-string">&quot;stylesheet&quot;</span> <span class="hljs-attr">integrity</span>=<span class="hljs-string">&quot;sha384-1BmE4kWBq78iYhFldvKuhfTAU6auU8tT94WrHftjDbrCEXSU1oBoqyl2QvZ6jIW3&quot;</span> <span class="hljs-attr">crossorigin</span>=<span class="hljs-string">&quot;anonymous&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;https://code.jquery.com/jquery-3.6.0.js&quot;</span> <span class="hljs-attr">integrity</span>=<span class="hljs-string">&quot;sha256-H+K7U5CnXl1h5ywQfKtSj8PCmoN9aaq30gDh27Xc0jk=&quot;</span> <span class="hljs-attr">crossorigin</span>=<span class="hljs-string">&quot;anonymous&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br><span class="hljs-comment">&lt;!-- JavaScript Bundle with Popper --&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.bundle.min.js&quot;</span> <span class="hljs-attr">integrity</span>=<span class="hljs-string">&quot;sha384-ka7Sk0Gln4gmtz2MlQnikT1wXgYsOg+OMhuP+IlRH9sENBO0LRn5q+8nbTov4+1p&quot;</span> <span class="hljs-attr">crossorigin</span>=<span class="hljs-string">&quot;anonymous&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">th:block</span> <span class="hljs-attr">th:include</span>=<span class="hljs-string">&quot;common.html :: source&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">th:block</span>&gt;</span><br></code></pre></td></tr></table></figure></li><li><p>application.yml</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs yml"><span class="hljs-attr">spring:</span><br>    <span class="hljs-attr">thymeleaf:</span><br>        <span class="hljs-string">prefix:classpath:/static/</span><br>        <span class="hljs-string">suffix:.html</span><br><span class="hljs-attr">server:</span><br>    <span class="hljs-string">port:8181</span><br></code></pre></td></tr></table></figure></li><li><p>页面跳转(RedirectController)</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@Controller</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">RedirectController</span> &#123;<br><br>    <span class="hljs-comment">//页面映射</span><br>    <span class="hljs-meta">@GetMapping(&quot;/&#123;url&#125;&quot;)</span><br>    <span class="hljs-keyword">public</span> String <span class="hljs-title function_">redirect</span><span class="hljs-params">(<span class="hljs-meta">@PathVariable(&quot;url&quot;)</span> String url)</span>&#123; <span class="hljs-keyword">return</span> url;&#125;<br>    <span class="hljs-comment">//什么都不输入的时候（主页 默认页面）</span><br>    <span class="hljs-meta">@GetMapping(&quot;/&quot;)</span><br>    <span class="hljs-keyword">public</span> String <span class="hljs-title function_">main</span><span class="hljs-params">()</span>&#123; <span class="hljs-keyword">return</span> <span class="hljs-string">&quot;redirect:/index&quot;</span>;&#125;<br>    <span class="hljs-comment">//解决错误 没有也没啥</span><br>    <span class="hljs-meta">@GetMapping(&quot;favicon.ico&quot;)</span><br>    <span class="hljs-meta">@ResponseBody</span><br>    <span class="hljs-keyword">void</span> <span class="hljs-title function_">returnNoFacicon</span><span class="hljs-params">()</span>&#123;&#125;<br>&#125;<br></code></pre></td></tr></table></figure><p><img src="https://yuki-picgo-img.oss-cn-beijing.aliyuncs.com/vscode-img/20220502164207.png" alt="20220502164207"><br><img src="https://yuki-picgo-img.oss-cn-beijing.aliyuncs.com/vscode-img/20220502164226.png" alt="20220502164226"></p></li></ul><h1 id="三、数据库"><a href="#三、数据库" class="headerlink" title="三、数据库"></a>三、数据库</h1><p>cart、orders、order_detail、product、<br>product_category、user、user_address</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-comment">-- MySQL dump 10.13  Distrib 8.0.19, for Win64 (x86_64)</span><br><span class="hljs-comment">--</span><br><span class="hljs-comment">-- Host: 127.0.0.1    Database: mmall</span><br><span class="hljs-comment">-- ------------------------------------------------------</span><br><span class="hljs-comment">-- Server version8.0.19</span><br><br><span class="hljs-comment">/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */</span>;<br><span class="hljs-comment">/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */</span>;<br><span class="hljs-comment">/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */</span>;<br><span class="hljs-comment">/*!50503 SET NAMES utf8mb4 */</span>;<br><span class="hljs-comment">/*!40103 SET @OLD_TIME_ZONE=@@TIME_ZONE */</span>;<br><span class="hljs-comment">/*!40103 SET TIME_ZONE=&#x27;+00:00&#x27; */</span>;<br><span class="hljs-comment">/*!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0 */</span>;<br><span class="hljs-comment">/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */</span>;<br><span class="hljs-comment">/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE=&#x27;NO_AUTO_VALUE_ON_ZERO&#x27; */</span>;<br><span class="hljs-comment">/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */</span>;<br><br><span class="hljs-comment">--</span><br><span class="hljs-comment">-- Current Database: `mmall`</span><br><span class="hljs-comment">--</span><br><br><span class="hljs-keyword">CREATE</span> DATABASE <span class="hljs-comment">/*!32312 IF NOT EXISTS*/</span> `mmall` <span class="hljs-comment">/*!40100 DEFAULT CHARACTER SET utf8 */</span> <span class="hljs-comment">/*!80016 DEFAULT ENCRYPTION=&#x27;N&#x27; */</span>;<br><br>USE `mmall`;<br><br><span class="hljs-comment">--</span><br><span class="hljs-comment">-- Table structure for table `cart`</span><br><span class="hljs-comment">--</span><br><br><span class="hljs-keyword">DROP</span> <span class="hljs-keyword">TABLE</span> IF <span class="hljs-keyword">EXISTS</span> `cart`;<br><span class="hljs-comment">/*!40101 SET @saved_cs_client     = @@character_set_client */</span>;<br><span class="hljs-comment">/*!50503 SET character_set_client = utf8mb4 */</span>;<br><span class="hljs-keyword">CREATE</span> <span class="hljs-keyword">TABLE</span> `cart` (<br>  `id` <span class="hljs-type">int</span> <span class="hljs-keyword">NOT</span> <span class="hljs-keyword">NULL</span> AUTO_INCREMENT,<br>  `product_id` <span class="hljs-type">int</span> <span class="hljs-keyword">DEFAULT</span> <span class="hljs-keyword">NULL</span>,<br>  `quantity` <span class="hljs-type">int</span> <span class="hljs-keyword">DEFAULT</span> <span class="hljs-keyword">NULL</span>,<br>  `cost` <span class="hljs-type">float</span> <span class="hljs-keyword">DEFAULT</span> <span class="hljs-keyword">NULL</span>,<br>  `user_id` <span class="hljs-type">int</span> <span class="hljs-keyword">DEFAULT</span> <span class="hljs-keyword">NULL</span>,<br>  `create_time` datetime <span class="hljs-keyword">NOT</span> <span class="hljs-keyword">NULL</span>,<br>  `update_time` datetime <span class="hljs-keyword">NOT</span> <span class="hljs-keyword">NULL</span>,<br>  <span class="hljs-keyword">PRIMARY</span> KEY (`id`),<br>  KEY `productId` (`product_id`),<br>  KEY `userId` (`user_id`),<br>  <span class="hljs-keyword">CONSTRAINT</span> `cart_ibfk_1` <span class="hljs-keyword">FOREIGN</span> KEY (`product_id`) <span class="hljs-keyword">REFERENCES</span> `product` (`id`),<br>  <span class="hljs-keyword">CONSTRAINT</span> `cart_ibfk_2` <span class="hljs-keyword">FOREIGN</span> KEY (`user_id`) <span class="hljs-keyword">REFERENCES</span> `<span class="hljs-keyword">user</span>` (`id`)<br>) ENGINE<span class="hljs-operator">=</span>InnoDB AUTO_INCREMENT<span class="hljs-operator">=</span><span class="hljs-number">326</span> <span class="hljs-keyword">DEFAULT</span> CHARSET<span class="hljs-operator">=</span>utf8;<br><span class="hljs-comment">/*!40101 SET character_set_client = @saved_cs_client */</span>;<br><br><span class="hljs-comment">--</span><br><span class="hljs-comment">-- Dumping data for table `cart`</span><br><span class="hljs-comment">--</span><br><br>LOCK TABLES `cart` WRITE;<br><span class="hljs-comment">/*!40000 ALTER TABLE `cart` DISABLE KEYS */</span>;<br><span class="hljs-comment">/*!40000 ALTER TABLE `cart` ENABLE KEYS */</span>;<br>UNLOCK TABLES;<br><br><span class="hljs-comment">--</span><br><span class="hljs-comment">-- Table structure for table `order_detail`</span><br><span class="hljs-comment">--</span><br><br><span class="hljs-keyword">DROP</span> <span class="hljs-keyword">TABLE</span> IF <span class="hljs-keyword">EXISTS</span> `order_detail`;<br><span class="hljs-comment">/*!40101 SET @saved_cs_client     = @@character_set_client */</span>;<br><span class="hljs-comment">/*!50503 SET character_set_client = utf8mb4 */</span>;<br><span class="hljs-keyword">CREATE</span> <span class="hljs-keyword">TABLE</span> `order_detail` (<br>  `id` <span class="hljs-type">int</span> <span class="hljs-keyword">NOT</span> <span class="hljs-keyword">NULL</span> AUTO_INCREMENT COMMENT <span class="hljs-string">&#x27;主键&#x27;</span>,<br>  `order_id` <span class="hljs-type">int</span> <span class="hljs-keyword">NOT</span> <span class="hljs-keyword">NULL</span> COMMENT <span class="hljs-string">&#x27;订单主键&#x27;</span>,<br>  `product_id` <span class="hljs-type">int</span> <span class="hljs-keyword">NOT</span> <span class="hljs-keyword">NULL</span> COMMENT <span class="hljs-string">&#x27;商品主键&#x27;</span>,<br>  `quantity` <span class="hljs-type">int</span> <span class="hljs-keyword">NOT</span> <span class="hljs-keyword">NULL</span> COMMENT <span class="hljs-string">&#x27;数量&#x27;</span>,<br>  `cost` <span class="hljs-type">float</span> <span class="hljs-keyword">NOT</span> <span class="hljs-keyword">NULL</span> COMMENT <span class="hljs-string">&#x27;消费&#x27;</span>,<br>  <span class="hljs-keyword">PRIMARY</span> KEY (`id`),<br>  <span class="hljs-keyword">UNIQUE</span> KEY `PK__EASYBUY___66E1BD8E2F10007B` (`id`)<br>) ENGINE<span class="hljs-operator">=</span>InnoDB AUTO_INCREMENT<span class="hljs-operator">=</span><span class="hljs-number">178</span> <span class="hljs-keyword">DEFAULT</span> CHARSET<span class="hljs-operator">=</span>utf8;<br><span class="hljs-comment">/*!40101 SET character_set_client = @saved_cs_client */</span>;<br><br><span class="hljs-comment">--</span><br><span class="hljs-comment">-- Dumping data for table `order_detail`</span><br><span class="hljs-comment">--</span><br><br>LOCK TABLES `order_detail` WRITE;<br><span class="hljs-comment">/*!40000 ALTER TABLE `order_detail` DISABLE KEYS */</span>;<br><span class="hljs-comment">/*!40000 ALTER TABLE `order_detail` ENABLE KEYS */</span>;<br>UNLOCK TABLES;<br><br><span class="hljs-comment">--</span><br><span class="hljs-comment">-- Table structure for table `orders`</span><br><span class="hljs-comment">--</span><br><br><span class="hljs-keyword">DROP</span> <span class="hljs-keyword">TABLE</span> IF <span class="hljs-keyword">EXISTS</span> `orders`;<br><span class="hljs-comment">/*!40101 SET @saved_cs_client     = @@character_set_client */</span>;<br><span class="hljs-comment">/*!50503 SET character_set_client = utf8mb4 */</span>;<br><span class="hljs-keyword">CREATE</span> <span class="hljs-keyword">TABLE</span> `orders` (<br>  `id` <span class="hljs-type">int</span> <span class="hljs-keyword">NOT</span> <span class="hljs-keyword">NULL</span> AUTO_INCREMENT COMMENT <span class="hljs-string">&#x27;主键&#x27;</span>,<br>  `user_id` <span class="hljs-type">int</span> <span class="hljs-keyword">DEFAULT</span> <span class="hljs-keyword">NULL</span> COMMENT <span class="hljs-string">&#x27;用户主键&#x27;</span>,<br>  `login_name` <span class="hljs-type">varchar</span>(<span class="hljs-number">255</span>) <span class="hljs-keyword">DEFAULT</span> <span class="hljs-keyword">NULL</span> COMMENT <span class="hljs-string">&#x27;用户名&#x27;</span>,<br>  `user_address` <span class="hljs-type">varchar</span>(<span class="hljs-number">255</span>) <span class="hljs-keyword">DEFAULT</span> <span class="hljs-keyword">NULL</span> COMMENT <span class="hljs-string">&#x27;用户地址&#x27;</span>,<br>  `cost` <span class="hljs-type">float</span> <span class="hljs-keyword">DEFAULT</span> <span class="hljs-keyword">NULL</span> COMMENT <span class="hljs-string">&#x27;总金额&#x27;</span>,<br>  `serialnumber` <span class="hljs-type">varchar</span>(<span class="hljs-number">255</span>) <span class="hljs-keyword">DEFAULT</span> <span class="hljs-keyword">NULL</span> COMMENT <span class="hljs-string">&#x27;订单号&#x27;</span>,<br>  `create_time` datetime <span class="hljs-keyword">DEFAULT</span> <span class="hljs-keyword">NULL</span> COMMENT <span class="hljs-string">&#x27;创建时间&#x27;</span>,<br>  `update_time` datetime <span class="hljs-keyword">NOT</span> <span class="hljs-keyword">NULL</span> COMMENT <span class="hljs-string">&#x27;更新时间&#x27;</span>,<br>  <span class="hljs-keyword">PRIMARY</span> KEY (`id`)<br>) ENGINE<span class="hljs-operator">=</span>InnoDB AUTO_INCREMENT<span class="hljs-operator">=</span><span class="hljs-number">178</span> <span class="hljs-keyword">DEFAULT</span> CHARSET<span class="hljs-operator">=</span>utf8;<br><span class="hljs-comment">/*!40101 SET character_set_client = @saved_cs_client */</span>;<br><br><span class="hljs-comment">--</span><br><span class="hljs-comment">-- Dumping data for table `orders`</span><br><span class="hljs-comment">--</span><br><br>LOCK TABLES `orders` WRITE;<br><span class="hljs-comment">/*!40000 ALTER TABLE `orders` DISABLE KEYS */</span>;<br><span class="hljs-comment">/*!40000 ALTER TABLE `orders` ENABLE KEYS */</span>;<br>UNLOCK TABLES;<br><br><span class="hljs-comment">--</span><br><span class="hljs-comment">-- Table structure for table `product`</span><br><span class="hljs-comment">--</span><br><br><span class="hljs-keyword">DROP</span> <span class="hljs-keyword">TABLE</span> IF <span class="hljs-keyword">EXISTS</span> `product`;<br><span class="hljs-comment">/*!40101 SET @saved_cs_client     = @@character_set_client */</span>;<br><span class="hljs-comment">/*!50503 SET character_set_client = utf8mb4 */</span>;<br><span class="hljs-keyword">CREATE</span> <span class="hljs-keyword">TABLE</span> `product` (<br>  `id` <span class="hljs-type">int</span> <span class="hljs-keyword">NOT</span> <span class="hljs-keyword">NULL</span> AUTO_INCREMENT COMMENT <span class="hljs-string">&#x27;主键&#x27;</span>,<br>  `name` <span class="hljs-type">varchar</span>(<span class="hljs-number">200</span>) <span class="hljs-keyword">NOT</span> <span class="hljs-keyword">NULL</span> COMMENT <span class="hljs-string">&#x27;名称&#x27;</span>,<br>  `description` <span class="hljs-type">varchar</span>(<span class="hljs-number">1024</span>) <span class="hljs-keyword">DEFAULT</span> <span class="hljs-keyword">NULL</span> COMMENT <span class="hljs-string">&#x27;描述&#x27;</span>,<br>  `price` <span class="hljs-type">float</span> <span class="hljs-keyword">NOT</span> <span class="hljs-keyword">NULL</span> COMMENT <span class="hljs-string">&#x27;价格&#x27;</span>,<br>  `stock` <span class="hljs-type">int</span> <span class="hljs-keyword">NOT</span> <span class="hljs-keyword">NULL</span> COMMENT <span class="hljs-string">&#x27;库存&#x27;</span>,<br>  `categorylevelone_id` <span class="hljs-type">int</span> <span class="hljs-keyword">DEFAULT</span> <span class="hljs-keyword">NULL</span> COMMENT <span class="hljs-string">&#x27;分类1&#x27;</span>,<br>  `categoryleveltwo_id` <span class="hljs-type">int</span> <span class="hljs-keyword">DEFAULT</span> <span class="hljs-keyword">NULL</span> COMMENT <span class="hljs-string">&#x27;分类2&#x27;</span>,<br>  `categorylevelthree_id` <span class="hljs-type">int</span> <span class="hljs-keyword">DEFAULT</span> <span class="hljs-keyword">NULL</span> COMMENT <span class="hljs-string">&#x27;分类3&#x27;</span>,<br>  `file_name` <span class="hljs-type">varchar</span>(<span class="hljs-number">200</span>) <span class="hljs-keyword">DEFAULT</span> <span class="hljs-keyword">NULL</span> COMMENT <span class="hljs-string">&#x27;文件名称&#x27;</span>,<br>  <span class="hljs-keyword">PRIMARY</span> KEY (`id`),<br>  <span class="hljs-keyword">UNIQUE</span> KEY `PK__EASYBUY___94F6E55132E0915F` (`id`)<br>) ENGINE<span class="hljs-operator">=</span>InnoDB AUTO_INCREMENT<span class="hljs-operator">=</span><span class="hljs-number">777</span> <span class="hljs-keyword">DEFAULT</span> CHARSET<span class="hljs-operator">=</span>utf8;<br><span class="hljs-comment">/*!40101 SET character_set_client = @saved_cs_client */</span>;<br><br><span class="hljs-comment">--</span><br><span class="hljs-comment">-- Dumping data for table `product`</span><br><span class="hljs-comment">--</span><br><br>LOCK TABLES `product` WRITE;<br><span class="hljs-comment">/*!40000 ALTER TABLE `product` DISABLE KEYS */</span>;<br><span class="hljs-keyword">INSERT</span> <span class="hljs-keyword">INTO</span> `product` <span class="hljs-keyword">VALUES</span> (<span class="hljs-number">733</span>,<span class="hljs-string">&#x27;香奈儿&#x27;</span>,<span class="hljs-string">&#x27;好闻的香水！！！&#x27;</span>,<span class="hljs-number">152</span>,<span class="hljs-number">1</span>,<span class="hljs-number">548</span>,<span class="hljs-number">654</span>,<span class="hljs-number">655</span>,<span class="hljs-string">&#x27;baby_1.jpg&#x27;</span>),(<span class="hljs-number">734</span>,<span class="hljs-string">&#x27;洗面奶&#x27;</span>,<span class="hljs-string">&#x27;&#x27;</span>,<span class="hljs-number">153</span>,<span class="hljs-number">75</span>,<span class="hljs-number">548</span>,<span class="hljs-number">654</span>,<span class="hljs-number">655</span>,<span class="hljs-string">&#x27;baby_2.jpg&#x27;</span>),(<span class="hljs-number">735</span>,<span class="hljs-string">&#x27;啫喱水&#x27;</span>,<span class="hljs-string">&#x27;&#x27;</span>,<span class="hljs-number">152</span>,<span class="hljs-number">948</span>,<span class="hljs-number">548</span>,<span class="hljs-number">654</span>,<span class="hljs-number">655</span>,<span class="hljs-string">&#x27;baby_3.jpg&#x27;</span>),(<span class="hljs-number">736</span>,<span class="hljs-string">&#x27;香水&#x27;</span>,<span class="hljs-string">&#x27;&#x27;</span>,<span class="hljs-number">152</span>,<span class="hljs-number">984</span>,<span class="hljs-number">548</span>,<span class="hljs-number">654</span>,<span class="hljs-number">655</span>,<span class="hljs-string">&#x27;baby_4.jpg&#x27;</span>),(<span class="hljs-number">737</span>,<span class="hljs-string">&#x27;香水&#x27;</span>,<span class="hljs-string">&#x27;&#x27;</span>,<span class="hljs-number">152</span>,<span class="hljs-number">111</span>,<span class="hljs-number">548</span>,<span class="hljs-number">654</span>,<span class="hljs-number">655</span>,<span class="hljs-string">&#x27;baby_5.jpg&#x27;</span>),(<span class="hljs-number">738</span>,<span class="hljs-string">&#x27;润肤露&#x27;</span>,<span class="hljs-string">&#x27;&#x27;</span>,<span class="hljs-number">45</span>,<span class="hljs-number">99</span>,<span class="hljs-number">548</span>,<span class="hljs-number">654</span>,<span class="hljs-number">655</span>,<span class="hljs-string">&#x27;baby_6.jpg&#x27;</span>),(<span class="hljs-number">739</span>,<span class="hljs-string">&#x27;洁面装&#x27;</span>,<span class="hljs-string">&#x27;&#x27;</span>,<span class="hljs-number">156</span>,<span class="hljs-number">33</span>,<span class="hljs-number">548</span>,<span class="hljs-number">654</span>,<span class="hljs-number">655</span>,<span class="hljs-string">&#x27;bk_2.jpg&#x27;</span>),(<span class="hljs-number">740</span>,<span class="hljs-string">&#x27;电饭锅&#x27;</span>,<span class="hljs-string">&#x27;&#x27;</span>,<span class="hljs-number">158</span>,<span class="hljs-number">87</span>,<span class="hljs-number">628</span>,<span class="hljs-number">656</span>,<span class="hljs-number">659</span>,<span class="hljs-string">&#x27;bk_1.jpg&#x27;</span>),(<span class="hljs-number">741</span>,<span class="hljs-string">&#x27;婴儿喂奶装&#x27;</span>,<span class="hljs-string">&#x27;&#x27;</span>,<span class="hljs-number">569</span>,<span class="hljs-number">100</span>,<span class="hljs-number">632</span>,<span class="hljs-number">637</span>,<span class="hljs-number">653</span>,<span class="hljs-string">&#x27;bk_3.jpg&#x27;</span>),(<span class="hljs-number">742</span>,<span class="hljs-string">&#x27;坚果套餐&#x27;</span>,<span class="hljs-string">&#x27;&#x27;</span>,<span class="hljs-number">158</span>,<span class="hljs-number">1000</span>,<span class="hljs-number">660</span>,<span class="hljs-number">661</span>,<span class="hljs-number">662</span>,<span class="hljs-string">&#x27;bk_4.jpg&#x27;</span>),(<span class="hljs-number">743</span>,<span class="hljs-string">&#x27;超甜蜜崭&#x27;</span>,<span class="hljs-string">&#x27;&#x27;</span>,<span class="hljs-number">589</span>,<span class="hljs-number">995</span>,<span class="hljs-number">660</span>,<span class="hljs-number">661</span>,<span class="hljs-number">663</span>,<span class="hljs-string">&#x27;bk_5.jpg&#x27;</span>),(<span class="hljs-number">744</span>,<span class="hljs-string">&#x27;华为2566&#x27;</span>,<span class="hljs-string">&#x27;&#x27;</span>,<span class="hljs-number">589</span>,<span class="hljs-number">1000</span>,<span class="hljs-number">670</span>,<span class="hljs-number">671</span>,<span class="hljs-number">672</span>,<span class="hljs-string">&#x27;de1.jpg&#x27;</span>),(<span class="hljs-number">745</span>,<span class="hljs-string">&#x27;荣耀3C&#x27;</span>,<span class="hljs-string">&#x27;&#x27;</span>,<span class="hljs-number">589</span>,<span class="hljs-number">92</span>,<span class="hljs-number">670</span>,<span class="hljs-number">671</span>,<span class="hljs-number">672</span>,<span class="hljs-string">&#x27;de2.jpg&#x27;</span>),(<span class="hljs-number">746</span>,<span class="hljs-string">&#x27;小米手环&#x27;</span>,<span class="hljs-string">&#x27;&#x27;</span>,<span class="hljs-number">963</span>,<span class="hljs-number">98</span>,<span class="hljs-number">670</span>,<span class="hljs-number">674</span>,<span class="hljs-number">675</span>,<span class="hljs-string">&#x27;de3.jpg&#x27;</span>),(<span class="hljs-number">747</span>,<span class="hljs-string">&#x27;华为2265&#x27;</span>,<span class="hljs-string">&#x27;&#x27;</span>,<span class="hljs-number">896</span>,<span class="hljs-number">1000</span>,<span class="hljs-number">670</span>,<span class="hljs-number">671</span>,<span class="hljs-number">673</span>,<span class="hljs-string">&#x27;de4.jpg&#x27;</span>),(<span class="hljs-number">748</span>,<span class="hljs-string">&#x27;越南坚果&#x27;</span>,<span class="hljs-string">&#x27;&#x27;</span>,<span class="hljs-number">520</span>,<span class="hljs-number">1</span>,<span class="hljs-number">660</span>,<span class="hljs-number">661</span>,<span class="hljs-number">662</span>,<span class="hljs-string">&#x27;de5.jpg&#x27;</span>),(<span class="hljs-number">749</span>,<span class="hljs-string">&#x27;进口马桶&#x27;</span>,<span class="hljs-string">&#x27;&#x27;</span>,<span class="hljs-number">5866</span>,<span class="hljs-number">93</span>,<span class="hljs-number">628</span>,<span class="hljs-number">657</span>,<span class="hljs-keyword">NULL</span>,<span class="hljs-string">&#x27;food_1.jpg&#x27;</span>),(<span class="hljs-number">750</span>,<span class="hljs-string">&#x27;联想Y系列&#x27;</span>,<span class="hljs-string">&#x27;&#x27;</span>,<span class="hljs-number">569</span>,<span class="hljs-number">894</span>,<span class="hljs-number">670</span>,<span class="hljs-number">690</span>,<span class="hljs-number">691</span>,<span class="hljs-string">&#x27;food_2.jpg&#x27;</span>),(<span class="hljs-number">751</span>,<span class="hljs-string">&#x27;脑白金1号&#x27;</span>,<span class="hljs-string">&#x27;&#x27;</span>,<span class="hljs-number">589</span>,<span class="hljs-number">998</span>,<span class="hljs-number">676</span>,<span class="hljs-number">677</span>,<span class="hljs-number">680</span>,<span class="hljs-string">&#x27;food_3.jpg&#x27;</span>),(<span class="hljs-number">752</span>,<span class="hljs-string">&#x27;莫里斯按&#x27;</span>,<span class="hljs-string">&#x27;&#x27;</span>,<span class="hljs-number">589</span>,<span class="hljs-number">998</span>,<span class="hljs-number">660</span>,<span class="hljs-number">661</span>,<span class="hljs-number">662</span>,<span class="hljs-string">&#x27;food_4.jpg&#x27;</span>),(<span class="hljs-number">753</span>,<span class="hljs-string">&#x27;三鹿好奶粉&#x27;</span>,<span class="hljs-string">&#x27;&#x27;</span>,<span class="hljs-number">859</span>,<span class="hljs-number">100</span>,<span class="hljs-number">660</span>,<span class="hljs-number">661</span>,<span class="hljs-number">662</span>,<span class="hljs-string">&#x27;food_5.jpg&#x27;</span>),(<span class="hljs-number">754</span>,<span class="hljs-string">&#x27;儿童牛奶&#x27;</span>,<span class="hljs-string">&#x27;&#x27;</span>,<span class="hljs-number">5896</span>,<span class="hljs-number">100</span>,<span class="hljs-number">676</span>,<span class="hljs-number">679</span>,<span class="hljs-keyword">NULL</span>,<span class="hljs-string">&#x27;food_6.jpg&#x27;</span>),(<span class="hljs-number">755</span>,<span class="hljs-string">&#x27;软沙发&#x27;</span>,<span class="hljs-string">&#x27;&#x27;</span>,<span class="hljs-number">8596</span>,<span class="hljs-number">7</span>,<span class="hljs-number">628</span>,<span class="hljs-number">696</span>,<span class="hljs-keyword">NULL</span>,<span class="hljs-string">&#x27;food_b1.jpg&#x27;</span>),(<span class="hljs-number">756</span>,<span class="hljs-string">&#x27;收纳盒&#x27;</span>,<span class="hljs-string">&#x27;&#x27;</span>,<span class="hljs-number">5966</span>,<span class="hljs-number">103</span>,<span class="hljs-number">628</span>,<span class="hljs-number">696</span>,<span class="hljs-keyword">NULL</span>,<span class="hljs-string">&#x27;food_b2.jpg&#x27;</span>),(<span class="hljs-number">757</span>,<span class="hljs-string">&#x27;洗衣液&#x27;</span>,<span class="hljs-string">&#x27;&#x27;</span>,<span class="hljs-number">58</span>,<span class="hljs-number">1000</span>,<span class="hljs-number">628</span>,<span class="hljs-number">696</span>,<span class="hljs-keyword">NULL</span>,<span class="hljs-string">&#x27;food_r.jpg&#x27;</span>),(<span class="hljs-number">758</span>,<span class="hljs-string">&#x27;红短沙发&#x27;</span>,<span class="hljs-string">&#x27;&#x27;</span>,<span class="hljs-number">596</span>,<span class="hljs-number">113</span>,<span class="hljs-number">628</span>,<span class="hljs-number">696</span>,<span class="hljs-keyword">NULL</span>,<span class="hljs-string">&#x27;fre_1.jpg&#x27;</span>),(<span class="hljs-number">759</span>,<span class="hljs-string">&#x27;新西兰奶粉&#x27;</span>,<span class="hljs-string">&#x27;&#x27;</span>,<span class="hljs-number">5896</span>,<span class="hljs-number">100</span>,<span class="hljs-number">676</span>,<span class="hljs-number">679</span>,<span class="hljs-keyword">NULL</span>,<span class="hljs-string">&#x27;fre_2.jpg&#x27;</span>),(<span class="hljs-number">760</span>,<span class="hljs-string">&#x27;婴儿车&#x27;</span>,<span class="hljs-string">&#x27;&#x27;</span>,<span class="hljs-number">11000</span>,<span class="hljs-number">100</span>,<span class="hljs-number">681</span>,<span class="hljs-number">682</span>,<span class="hljs-number">687</span>,<span class="hljs-string">&#x27;fre_3.jpg&#x27;</span>),(<span class="hljs-number">761</span>,<span class="hljs-string">&#x27;夏款婴儿车&#x27;</span>,<span class="hljs-string">&#x27;&#x27;</span>,<span class="hljs-number">963</span>,<span class="hljs-number">99</span>,<span class="hljs-number">681</span>,<span class="hljs-number">682</span>,<span class="hljs-number">688</span>,<span class="hljs-string">&#x27;fre_4.jpg&#x27;</span>),(<span class="hljs-number">762</span>,<span class="hljs-string">&#x27;抗压旅行箱&#x27;</span>,<span class="hljs-string">&#x27;&#x27;</span>,<span class="hljs-number">569</span>,<span class="hljs-number">998</span>,<span class="hljs-number">681</span>,<span class="hljs-number">683</span>,<span class="hljs-number">685</span>,<span class="hljs-string">&#x27;fre_5.jpg&#x27;</span>),(<span class="hljs-number">763</span>,<span class="hljs-string">&#x27;透明手提箱&#x27;</span>,<span class="hljs-string">&#x27;&#x27;</span>,<span class="hljs-number">8596</span>,<span class="hljs-number">1000</span>,<span class="hljs-number">681</span>,<span class="hljs-number">683</span>,<span class="hljs-number">684</span>,<span class="hljs-string">&#x27;fre_6.jpg&#x27;</span>),(<span class="hljs-number">764</span>,<span class="hljs-string">&#x27;婴儿果粉&#x27;</span>,<span class="hljs-string">&#x27;&#x27;</span>,<span class="hljs-number">5896</span>,<span class="hljs-number">999</span>,<span class="hljs-number">660</span>,<span class="hljs-number">661</span>,<span class="hljs-number">662</span>,<span class="hljs-string">&#x27;milk_1.jpg&#x27;</span>),(<span class="hljs-number">765</span>,<span class="hljs-string">&#x27;椰子粉&#x27;</span>,<span class="hljs-string">&#x27;&#x27;</span>,<span class="hljs-number">5963</span>,<span class="hljs-number">1000</span>,<span class="hljs-number">660</span>,<span class="hljs-number">661</span>,<span class="hljs-number">662</span>,<span class="hljs-string">&#x27;milk_2.jpg&#x27;</span>),(<span class="hljs-number">766</span>,<span class="hljs-string">&#x27;坚果蛋糕&#x27;</span>,<span class="hljs-string">&#x27;&#x27;</span>,<span class="hljs-number">200</span>,<span class="hljs-number">94</span>,<span class="hljs-number">660</span>,<span class="hljs-number">661</span>,<span class="hljs-number">663</span>,<span class="hljs-string">&#x27;milk_3.jpg&#x27;</span>),(<span class="hljs-number">767</span>,<span class="hljs-string">&#x27;编制手提箱&#x27;</span>,<span class="hljs-string">&#x27;&#x27;</span>,<span class="hljs-number">5896</span>,<span class="hljs-number">1000</span>,<span class="hljs-number">681</span>,<span class="hljs-number">682</span>,<span class="hljs-number">688</span>,<span class="hljs-string">&#x27;milk_4.jpg&#x27;</span>),(<span class="hljs-number">768</span>,<span class="hljs-string">&#x27;纸箱&#x27;</span>,<span class="hljs-string">&#x27;&#x27;</span>,<span class="hljs-number">5896</span>,<span class="hljs-number">3</span>,<span class="hljs-number">681</span>,<span class="hljs-number">682</span>,<span class="hljs-number">687</span>,<span class="hljs-string">&#x27;milk_5.jpg&#x27;</span>),(<span class="hljs-number">769</span>,<span class="hljs-string">&#x27;健胃液&#x27;</span>,<span class="hljs-string">&#x27;&#x27;</span>,<span class="hljs-number">152</span>,<span class="hljs-number">1000</span>,<span class="hljs-number">676</span>,<span class="hljs-number">679</span>,<span class="hljs-keyword">NULL</span>,<span class="hljs-string">&#x27;milk_6.jpg&#x27;</span>),(<span class="hljs-number">770</span>,<span class="hljs-string">&#x27;联想NTC&#x27;</span>,<span class="hljs-string">&#x27;&#x27;</span>,<span class="hljs-number">8596</span>,<span class="hljs-number">100</span>,<span class="hljs-number">670</span>,<span class="hljs-number">671</span>,<span class="hljs-number">673</span>,<span class="hljs-string">&#x27;milk_7.jpg&#x27;</span>),(<span class="hljs-number">771</span>,<span class="hljs-string">&#x27;香水1&#x27;</span>,<span class="hljs-keyword">NULL</span>,<span class="hljs-number">100</span>,<span class="hljs-number">100</span>,<span class="hljs-number">548</span>,<span class="hljs-number">654</span>,<span class="hljs-number">655</span>,<span class="hljs-string">&#x27;milk_8.jpg&#x27;</span>),(<span class="hljs-number">772</span>,<span class="hljs-string">&#x27;香水2&#x27;</span>,<span class="hljs-keyword">NULL</span>,<span class="hljs-number">100</span>,<span class="hljs-number">100</span>,<span class="hljs-number">548</span>,<span class="hljs-number">654</span>,<span class="hljs-number">655</span>,<span class="hljs-string">&#x27;pro1.jpg&#x27;</span>),(<span class="hljs-number">773</span>,<span class="hljs-string">&#x27;香水3&#x27;</span>,<span class="hljs-keyword">NULL</span>,<span class="hljs-number">100</span>,<span class="hljs-number">95</span>,<span class="hljs-number">548</span>,<span class="hljs-number">654</span>,<span class="hljs-number">655</span>,<span class="hljs-string">&#x27;pro2.jpg&#x27;</span>),(<span class="hljs-number">774</span>,<span class="hljs-string">&#x27;香水4&#x27;</span>,<span class="hljs-keyword">NULL</span>,<span class="hljs-number">100</span>,<span class="hljs-number">100</span>,<span class="hljs-number">548</span>,<span class="hljs-number">654</span>,<span class="hljs-number">655</span>,<span class="hljs-string">&#x27;pro3.jpg&#x27;</span>),(<span class="hljs-number">775</span>,<span class="hljs-string">&#x27;香水5&#x27;</span>,<span class="hljs-keyword">NULL</span>,<span class="hljs-number">100</span>,<span class="hljs-number">100</span>,<span class="hljs-number">548</span>,<span class="hljs-number">654</span>,<span class="hljs-number">655</span>,<span class="hljs-string">&#x27;pro4.jpg&#x27;</span>),(<span class="hljs-number">776</span>,<span class="hljs-string">&#x27;香水6&#x27;</span>,<span class="hljs-keyword">NULL</span>,<span class="hljs-number">1</span>,<span class="hljs-number">1</span>,<span class="hljs-number">548</span>,<span class="hljs-number">654</span>,<span class="hljs-number">655</span>,<span class="hljs-string">&#x27;pro5.jpg&#x27;</span>);<br><span class="hljs-comment">/*!40000 ALTER TABLE `product` ENABLE KEYS */</span>;<br>UNLOCK TABLES;<br><br><span class="hljs-comment">--</span><br><span class="hljs-comment">-- Table structure for table `product_category`</span><br><span class="hljs-comment">--</span><br><br><span class="hljs-keyword">DROP</span> <span class="hljs-keyword">TABLE</span> IF <span class="hljs-keyword">EXISTS</span> `product_category`;<br><span class="hljs-comment">/*!40101 SET @saved_cs_client     = @@character_set_client */</span>;<br><span class="hljs-comment">/*!50503 SET character_set_client = utf8mb4 */</span>;<br><span class="hljs-keyword">CREATE</span> <span class="hljs-keyword">TABLE</span> `product_category` (<br>  `id` <span class="hljs-type">int</span> <span class="hljs-keyword">NOT</span> <span class="hljs-keyword">NULL</span> AUTO_INCREMENT COMMENT <span class="hljs-string">&#x27;主键&#x27;</span>,<br>  `name` <span class="hljs-type">varchar</span>(<span class="hljs-number">20</span>) <span class="hljs-keyword">NOT</span> <span class="hljs-keyword">NULL</span> COMMENT <span class="hljs-string">&#x27;名称&#x27;</span>,<br>  `parent_id` <span class="hljs-type">int</span> <span class="hljs-keyword">NOT</span> <span class="hljs-keyword">NULL</span> COMMENT <span class="hljs-string">&#x27;父级目录id&#x27;</span>,<br>  `type` <span class="hljs-type">int</span> <span class="hljs-keyword">DEFAULT</span> <span class="hljs-keyword">NULL</span> COMMENT <span class="hljs-string">&#x27;级别(1:一级 2：二级 3：三级)&#x27;</span>,<br>  <span class="hljs-keyword">PRIMARY</span> KEY (`id`),<br>  <span class="hljs-keyword">UNIQUE</span> KEY `PK__EASYBUY___9EC2A4E236B12243` (`id`)<br>) ENGINE<span class="hljs-operator">=</span>InnoDB AUTO_INCREMENT<span class="hljs-operator">=</span><span class="hljs-number">697</span> <span class="hljs-keyword">DEFAULT</span> CHARSET<span class="hljs-operator">=</span>utf8;<br><span class="hljs-comment">/*!40101 SET character_set_client = @saved_cs_client */</span>;<br><br><span class="hljs-comment">--</span><br><span class="hljs-comment">-- Dumping data for table `product_category`</span><br><span class="hljs-comment">--</span><br><br>LOCK TABLES `product_category` WRITE;<br><span class="hljs-comment">/*!40000 ALTER TABLE `product_category` DISABLE KEYS */</span>;<br><span class="hljs-keyword">INSERT</span> <span class="hljs-keyword">INTO</span> `product_category` <span class="hljs-keyword">VALUES</span> (<span class="hljs-number">548</span>,<span class="hljs-string">&#x27;化妆品&#x27;</span>,<span class="hljs-number">0</span>,<span class="hljs-number">1</span>),(<span class="hljs-number">628</span>,<span class="hljs-string">&#x27;家用商品&#x27;</span>,<span class="hljs-number">0</span>,<span class="hljs-number">1</span>),(<span class="hljs-number">654</span>,<span class="hljs-string">&#x27;面部护理&#x27;</span>,<span class="hljs-number">548</span>,<span class="hljs-number">2</span>),(<span class="hljs-number">655</span>,<span class="hljs-string">&#x27;少女派&#x27;</span>,<span class="hljs-number">654</span>,<span class="hljs-number">3</span>),(<span class="hljs-number">656</span>,<span class="hljs-string">&#x27;餐具&#x27;</span>,<span class="hljs-number">628</span>,<span class="hljs-number">2</span>),(<span class="hljs-number">657</span>,<span class="hljs-string">&#x27;卫具&#x27;</span>,<span class="hljs-number">628</span>,<span class="hljs-number">2</span>),(<span class="hljs-number">658</span>,<span class="hljs-string">&#x27;叉子&#x27;</span>,<span class="hljs-number">656</span>,<span class="hljs-number">3</span>),(<span class="hljs-number">659</span>,<span class="hljs-string">&#x27;锅&#x27;</span>,<span class="hljs-number">656</span>,<span class="hljs-number">3</span>),(<span class="hljs-number">660</span>,<span class="hljs-string">&#x27;进口食品&#x27;</span>,<span class="hljs-number">0</span>,<span class="hljs-number">1</span>),(<span class="hljs-number">661</span>,<span class="hljs-string">&#x27;零食/糖果/巧克力&#x27;</span>,<span class="hljs-number">660</span>,<span class="hljs-number">2</span>),(<span class="hljs-number">662</span>,<span class="hljs-string">&#x27;坚果&#x27;</span>,<span class="hljs-number">661</span>,<span class="hljs-number">3</span>),(<span class="hljs-number">663</span>,<span class="hljs-string">&#x27;蜜饯&#x27;</span>,<span class="hljs-number">661</span>,<span class="hljs-number">3</span>),(<span class="hljs-number">669</span>,<span class="hljs-string">&#x27;孕期教育&#x27;</span>,<span class="hljs-number">546</span>,<span class="hljs-number">3</span>),(<span class="hljs-number">670</span>,<span class="hljs-string">&#x27;电子商品&#x27;</span>,<span class="hljs-number">0</span>,<span class="hljs-number">1</span>),(<span class="hljs-number">671</span>,<span class="hljs-string">&#x27;手机&#x27;</span>,<span class="hljs-number">670</span>,<span class="hljs-number">2</span>),(<span class="hljs-number">672</span>,<span class="hljs-string">&#x27;华为手机&#x27;</span>,<span class="hljs-number">671</span>,<span class="hljs-number">3</span>),(<span class="hljs-number">673</span>,<span class="hljs-string">&#x27;联想手机&#x27;</span>,<span class="hljs-number">671</span>,<span class="hljs-number">3</span>),(<span class="hljs-number">674</span>,<span class="hljs-string">&#x27;手环&#x27;</span>,<span class="hljs-number">670</span>,<span class="hljs-number">2</span>),(<span class="hljs-number">675</span>,<span class="hljs-string">&#x27;小米手环&#x27;</span>,<span class="hljs-number">674</span>,<span class="hljs-number">3</span>),(<span class="hljs-number">676</span>,<span class="hljs-string">&#x27;保健食品&#x27;</span>,<span class="hljs-number">0</span>,<span class="hljs-number">1</span>),(<span class="hljs-number">677</span>,<span class="hljs-string">&#x27;老年保健品&#x27;</span>,<span class="hljs-number">676</span>,<span class="hljs-number">2</span>),(<span class="hljs-number">678</span>,<span class="hljs-string">&#x27;中年营养品&#x27;</span>,<span class="hljs-number">676</span>,<span class="hljs-number">2</span>),(<span class="hljs-number">679</span>,<span class="hljs-string">&#x27;儿童保健品&#x27;</span>,<span class="hljs-number">676</span>,<span class="hljs-number">2</span>),(<span class="hljs-number">680</span>,<span class="hljs-string">&#x27;脑白金&#x27;</span>,<span class="hljs-number">677</span>,<span class="hljs-number">3</span>),(<span class="hljs-number">681</span>,<span class="hljs-string">&#x27;箱包&#x27;</span>,<span class="hljs-number">0</span>,<span class="hljs-number">1</span>),(<span class="hljs-number">682</span>,<span class="hljs-string">&#x27;旅行箱&#x27;</span>,<span class="hljs-number">681</span>,<span class="hljs-number">2</span>),(<span class="hljs-number">683</span>,<span class="hljs-string">&#x27;手提箱&#x27;</span>,<span class="hljs-number">681</span>,<span class="hljs-number">2</span>),(<span class="hljs-number">684</span>,<span class="hljs-string">&#x27;大型&#x27;</span>,<span class="hljs-number">683</span>,<span class="hljs-number">3</span>),(<span class="hljs-number">685</span>,<span class="hljs-string">&#x27;小型&#x27;</span>,<span class="hljs-number">683</span>,<span class="hljs-number">3</span>),(<span class="hljs-number">686</span>,<span class="hljs-string">&#x27;中型&#x27;</span>,<span class="hljs-number">683</span>,<span class="hljs-number">3</span>),(<span class="hljs-number">687</span>,<span class="hljs-string">&#x27;大型&#x27;</span>,<span class="hljs-number">682</span>,<span class="hljs-number">3</span>),(<span class="hljs-number">688</span>,<span class="hljs-string">&#x27;中型&#x27;</span>,<span class="hljs-number">682</span>,<span class="hljs-number">3</span>),(<span class="hljs-number">689</span>,<span class="hljs-string">&#x27;小型&#x27;</span>,<span class="hljs-number">682</span>,<span class="hljs-number">3</span>),(<span class="hljs-number">690</span>,<span class="hljs-string">&#x27;电脑&#x27;</span>,<span class="hljs-number">670</span>,<span class="hljs-number">2</span>),(<span class="hljs-number">691</span>,<span class="hljs-string">&#x27;联想电脑&#x27;</span>,<span class="hljs-number">690</span>,<span class="hljs-number">3</span>),(<span class="hljs-number">692</span>,<span class="hljs-string">&#x27;刀叉&#x27;</span>,<span class="hljs-number">656</span>,<span class="hljs-number">3</span>),(<span class="hljs-number">693</span>,<span class="hljs-string">&#x27;碗筷&#x27;</span>,<span class="hljs-number">656</span>,<span class="hljs-number">3</span>),(<span class="hljs-number">696</span>,<span class="hljs-string">&#x27;客厅专用&#x27;</span>,<span class="hljs-number">628</span>,<span class="hljs-number">2</span>);<br><span class="hljs-comment">/*!40000 ALTER TABLE `product_category` ENABLE KEYS */</span>;<br>UNLOCK TABLES;<br><br><span class="hljs-comment">--</span><br><span class="hljs-comment">-- Table structure for table `user`</span><br><span class="hljs-comment">--</span><br><br><span class="hljs-keyword">DROP</span> <span class="hljs-keyword">TABLE</span> IF <span class="hljs-keyword">EXISTS</span> `<span class="hljs-keyword">user</span>`;<br><span class="hljs-comment">/*!40101 SET @saved_cs_client     = @@character_set_client */</span>;<br><span class="hljs-comment">/*!50503 SET character_set_client = utf8mb4 */</span>;<br><span class="hljs-keyword">CREATE</span> <span class="hljs-keyword">TABLE</span> `<span class="hljs-keyword">user</span>` (<br>  `id` <span class="hljs-type">int</span> <span class="hljs-keyword">NOT</span> <span class="hljs-keyword">NULL</span> AUTO_INCREMENT COMMENT <span class="hljs-string">&#x27;主键&#x27;</span>,<br>  `login_name` <span class="hljs-type">varchar</span>(<span class="hljs-number">255</span>) <span class="hljs-keyword">NOT</span> <span class="hljs-keyword">NULL</span> COMMENT <span class="hljs-string">&#x27;登录名&#x27;</span>,<br>  `user_name` <span class="hljs-type">varchar</span>(<span class="hljs-number">255</span>) <span class="hljs-keyword">NOT</span> <span class="hljs-keyword">NULL</span> COMMENT <span class="hljs-string">&#x27;用户名&#x27;</span>,<br>  `password` <span class="hljs-type">varchar</span>(<span class="hljs-number">255</span>) <span class="hljs-keyword">NOT</span> <span class="hljs-keyword">NULL</span> COMMENT <span class="hljs-string">&#x27;密码&#x27;</span>,<br>  `gender` <span class="hljs-type">int</span> <span class="hljs-keyword">NOT</span> <span class="hljs-keyword">NULL</span> <span class="hljs-keyword">DEFAULT</span> <span class="hljs-string">&#x27;1&#x27;</span> COMMENT <span class="hljs-string">&#x27;性别(1:男 0：女)&#x27;</span>,<br>  `email` <span class="hljs-type">varchar</span>(<span class="hljs-number">80</span>) <span class="hljs-keyword">DEFAULT</span> <span class="hljs-keyword">NULL</span> COMMENT <span class="hljs-string">&#x27;邮箱&#x27;</span>,<br>  `mobile` <span class="hljs-type">varchar</span>(<span class="hljs-number">11</span>) <span class="hljs-keyword">DEFAULT</span> <span class="hljs-keyword">NULL</span> COMMENT <span class="hljs-string">&#x27;手机&#x27;</span>,<br>  `file_name` <span class="hljs-type">varchar</span>(<span class="hljs-number">255</span>) <span class="hljs-keyword">DEFAULT</span> <span class="hljs-keyword">NULL</span>,<br>  `create_time` datetime <span class="hljs-keyword">NOT</span> <span class="hljs-keyword">NULL</span>,<br>  `update_time` datetime <span class="hljs-keyword">NOT</span> <span class="hljs-keyword">NULL</span>,<br>  <span class="hljs-keyword">PRIMARY</span> KEY (`id`),<br>  <span class="hljs-keyword">UNIQUE</span> KEY `PK__EASYBUY___C96109CC3A81B327` (`login_name`)<br>) ENGINE<span class="hljs-operator">=</span>InnoDB AUTO_INCREMENT<span class="hljs-operator">=</span><span class="hljs-number">60</span> <span class="hljs-keyword">DEFAULT</span> CHARSET<span class="hljs-operator">=</span>utf8;<br><span class="hljs-comment">/*!40101 SET character_set_client = @saved_cs_client */</span>;<br><br><span class="hljs-comment">--</span><br><span class="hljs-comment">-- Dumping data for table `user`</span><br><span class="hljs-comment">--</span><br><br>LOCK TABLES `<span class="hljs-keyword">user</span>` WRITE;<br><span class="hljs-comment">/*!40000 ALTER TABLE `user` DISABLE KEYS */</span>;<br><span class="hljs-keyword">INSERT</span> <span class="hljs-keyword">INTO</span> `<span class="hljs-keyword">user</span>` <span class="hljs-keyword">VALUES</span> (<span class="hljs-number">58</span>,<span class="hljs-string">&#x27;test&#x27;</span>,<span class="hljs-string">&#x27;张三&#x27;</span>,<span class="hljs-string">&#x27;b3472e734711122a5c892c3a93705ed11d1513d59b107d57&#x27;</span>,<span class="hljs-number">1</span>,<span class="hljs-string">&#x27;123@test.com&#x27;</span>,<span class="hljs-string">&#x27;13312345678&#x27;</span>,<span class="hljs-keyword">NULL</span>,<span class="hljs-string">&#x27;2021-11-18 12:55:37&#x27;</span>,<span class="hljs-string">&#x27;2021-11-18 12:55:37&#x27;</span>),(<span class="hljs-number">59</span>,<span class="hljs-string">&#x27;test2&#x27;</span>,<span class="hljs-string">&#x27;张三&#x27;</span>,<span class="hljs-string">&#x27;f1bc53d58d67b98a3d41a247a94f5b11de5aa2bc61596723&#x27;</span>,<span class="hljs-number">1</span>,<span class="hljs-string">&#x27;123@test.com&#x27;</span>,<span class="hljs-string">&#x27;13312345678&#x27;</span>,<span class="hljs-keyword">NULL</span>,<span class="hljs-string">&#x27;2021-11-18 13:00:07&#x27;</span>,<span class="hljs-string">&#x27;2021-11-18 13:00:07&#x27;</span>);<br><span class="hljs-comment">/*!40000 ALTER TABLE `user` ENABLE KEYS */</span>;<br>UNLOCK TABLES;<br><br><span class="hljs-comment">--</span><br><span class="hljs-comment">-- Table structure for table `user_address`</span><br><span class="hljs-comment">--</span><br><br><span class="hljs-keyword">DROP</span> <span class="hljs-keyword">TABLE</span> IF <span class="hljs-keyword">EXISTS</span> `user_address`;<br><span class="hljs-comment">/*!40101 SET @saved_cs_client     = @@character_set_client */</span>;<br><span class="hljs-comment">/*!50503 SET character_set_client = utf8mb4 */</span>;<br><span class="hljs-keyword">CREATE</span> <span class="hljs-keyword">TABLE</span> `user_address` (<br>  `id` <span class="hljs-type">int</span> <span class="hljs-keyword">NOT</span> <span class="hljs-keyword">NULL</span> AUTO_INCREMENT COMMENT <span class="hljs-string">&#x27;主键id&#x27;</span>,<br>  `user_id` <span class="hljs-type">int</span> <span class="hljs-keyword">DEFAULT</span> <span class="hljs-keyword">NULL</span> COMMENT <span class="hljs-string">&#x27;用户主键&#x27;</span>,<br>  `address` <span class="hljs-type">varchar</span>(<span class="hljs-number">255</span>) <span class="hljs-keyword">DEFAULT</span> <span class="hljs-keyword">NULL</span> COMMENT <span class="hljs-string">&#x27;地址&#x27;</span>,<br>  `remark` <span class="hljs-type">varchar</span>(<span class="hljs-number">255</span>) <span class="hljs-keyword">DEFAULT</span> <span class="hljs-keyword">NULL</span> COMMENT <span class="hljs-string">&#x27;备注&#x27;</span>,<br>  `isdefault` <span class="hljs-type">int</span> <span class="hljs-keyword">DEFAULT</span> <span class="hljs-string">&#x27;0&#x27;</span> COMMENT <span class="hljs-string">&#x27;是否是默认地址（1:是 0否）&#x27;</span>,<br>  `create_time` datetime <span class="hljs-keyword">DEFAULT</span> <span class="hljs-keyword">NULL</span> COMMENT <span class="hljs-string">&#x27;创建时间&#x27;</span>,<br>  `update_time` datetime <span class="hljs-keyword">NOT</span> <span class="hljs-keyword">NULL</span>,<br>  <span class="hljs-keyword">PRIMARY</span> KEY (`id`)<br>) ENGINE<span class="hljs-operator">=</span>InnoDB AUTO_INCREMENT<span class="hljs-operator">=</span><span class="hljs-number">60</span> <span class="hljs-keyword">DEFAULT</span> CHARSET<span class="hljs-operator">=</span>utf8;<br><span class="hljs-comment">/*!40101 SET character_set_client = @saved_cs_client */</span>;<br><br><span class="hljs-comment">--</span><br><span class="hljs-comment">-- Dumping data for table `user_address`</span><br><span class="hljs-comment">--</span><br><br>LOCK TABLES `user_address` WRITE;<br><span class="hljs-comment">/*!40000 ALTER TABLE `user_address` DISABLE KEYS */</span>;<br><span class="hljs-keyword">INSERT</span> <span class="hljs-keyword">INTO</span> `user_address` <span class="hljs-keyword">VALUES</span> (<span class="hljs-number">49</span>,<span class="hljs-number">56</span>,<span class="hljs-string">&#x27;IT园&#x27;</span>,<span class="hljs-string">&#x27;公司&#x27;</span>,<span class="hljs-number">0</span>,<span class="hljs-string">&#x27;2020-05-21 15:55:24&#x27;</span>,<span class="hljs-string">&#x27;2020-07-29 11:22:13&#x27;</span>),(<span class="hljs-number">50</span>,<span class="hljs-number">56</span>,<span class="hljs-string">&#x27;软件园&#x27;</span>,<span class="hljs-string">&#x27;公司&#x27;</span>,<span class="hljs-number">0</span>,<span class="hljs-string">&#x27;2020-05-22 15:11:07&#x27;</span>,<span class="hljs-string">&#x27;2020-07-25 09:14:19&#x27;</span>),(<span class="hljs-number">57</span>,<span class="hljs-number">56</span>,<span class="hljs-string">&#x27;测试&#x27;</span>,<span class="hljs-string">&#x27;测试&#x27;</span>,<span class="hljs-number">0</span>,<span class="hljs-string">&#x27;2021-11-17 18:04:49&#x27;</span>,<span class="hljs-string">&#x27;2021-11-17 18:04:49&#x27;</span>),(<span class="hljs-number">59</span>,<span class="hljs-number">59</span>,<span class="hljs-string">&#x27;软件园&#x27;</span>,<span class="hljs-string">&#x27;公司&#x27;</span>,<span class="hljs-number">1</span>,<span class="hljs-string">&#x27;2021-11-18 13:01:19&#x27;</span>,<span class="hljs-string">&#x27;2021-11-18 13:01:19&#x27;</span>);<br><span class="hljs-comment">/*!40000 ALTER TABLE `user_address` ENABLE KEYS */</span>;<br>UNLOCK TABLES;<br><span class="hljs-comment">/*!40103 SET TIME_ZONE=@OLD_TIME_ZONE */</span>;<br><br><span class="hljs-comment">/*!40101 SET SQL_MODE=@OLD_SQL_MODE */</span>;<br><span class="hljs-comment">/*!40014 SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS */</span>;<br><span class="hljs-comment">/*!40014 SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS */</span>;<br><span class="hljs-comment">/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */</span>;<br><span class="hljs-comment">/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */</span>;<br><span class="hljs-comment">/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */</span>;<br><span class="hljs-comment">/*!40111 SET SQL_NOTES=@OLD_SQL_NOTES */</span>;<br><br><span class="hljs-comment">-- Dump completed on 2021-11-22 17:43:09</span><br></code></pre></td></tr></table></figure><h1 id="四、项目开发"><a href="#四、项目开发" class="headerlink" title="四、项目开发"></a>四、项目开发</h1><h2 id="1、新建spring-boot工程，选择对应依赖"><a href="#1、新建spring-boot工程，选择对应依赖" class="headerlink" title="1、新建spring boot工程，选择对应依赖"></a>1、新建spring boot工程，选择对应依赖</h2><p><img src="https://yuki-picgo-img.oss-cn-beijing.aliyuncs.com/yuque-img/20220515094507.png"><br><img src="https://yuki-picgo-img.oss-cn-beijing.aliyuncs.com/yuque-img/20220515094615.png"><br>等待依赖下载完成<br><img src="https://yuki-picgo-img.oss-cn-beijing.aliyuncs.com/vscode-img/20220502170302.png" alt="20220502170302"></p><h2 id="2、拷贝静态资源"><a href="#2、拷贝静态资源" class="headerlink" title="2、拷贝静态资源"></a>2、拷贝静态资源</h2><p>拷贝前端静态资源（html页面、js、css等等）html页面放到 templates 下，其他静态资源放到 static下。</p><h2 id="3、创建-RedirectController，实现页面的映射"><a href="#3、创建-RedirectController，实现页面的映射" class="headerlink" title="3、创建 RedirectController，实现页面的映射"></a>3、创建 RedirectController，实现页面的映射</h2><p><img src="https://yuki-picgo-img.oss-cn-beijing.aliyuncs.com/vscode-img/20220502171001.png" alt="20220502171001"><br><img src="https://yuki-picgo-img.oss-cn-beijing.aliyuncs.com/vscode-img/20220502171055.png" alt="20220502171055"><br><img src="https://yuki-picgo-img.oss-cn-beijing.aliyuncs.com/vscode-img/20220502171301.png" alt="20220502171301"></p><h2 id="4、使用MyBatis-Plus-连接数据库，自动生成代码（Controller、Service、Entity、Mapper）"><a href="#4、使用MyBatis-Plus-连接数据库，自动生成代码（Controller、Service、Entity、Mapper）" class="headerlink" title="4、使用MyBatis Plus 连接数据库，自动生成代码（Controller、Service、Entity、Mapper）"></a>4、使用MyBatis Plus 连接数据库，自动生成代码（Controller、Service、Entity、Mapper）</h2><p>引入MyBatis Plus依赖（pom.xml）</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>com.baomidou<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>mybatis-plus-boot-starter<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">version</span>&gt;</span>3.4.3.1<span class="hljs-tag">&lt;/<span class="hljs-name">version</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>com.baomidou<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>mybatis-plus-generator<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">version</span>&gt;</span>3.3.2<span class="hljs-tag">&lt;/<span class="hljs-name">version</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>org.apache.velocity<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>velocity<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">version</span>&gt;</span>1.7<span class="hljs-tag">&lt;/<span class="hljs-name">version</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span><br></code></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">package</span> com.yuki.travel;<br><br><span class="hljs-keyword">import</span> com.baomidou.mybatisplus.annotation.DbType;<br><span class="hljs-keyword">import</span> com.baomidou.mybatisplus.annotation.FieldFill;<br><span class="hljs-keyword">import</span> com.baomidou.mybatisplus.generator.AutoGenerator;<br><span class="hljs-keyword">import</span> com.baomidou.mybatisplus.generator.config.DataSourceConfig;<br><span class="hljs-keyword">import</span> com.baomidou.mybatisplus.generator.config.GlobalConfig;<br><span class="hljs-keyword">import</span> com.baomidou.mybatisplus.generator.config.PackageConfig;<br><span class="hljs-keyword">import</span> com.baomidou.mybatisplus.generator.config.StrategyConfig;<br><span class="hljs-keyword">import</span> com.baomidou.mybatisplus.generator.config.po.TableFill;<br><span class="hljs-keyword">import</span> com.baomidou.mybatisplus.generator.config.rules.NamingStrategy;<br><br><span class="hljs-keyword">import</span> java.util.ArrayList;<br><span class="hljs-keyword">import</span> java.util.List;<br><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">Main</span> &#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">main</span><span class="hljs-params">(String[] args)</span> &#123;<br>        <span class="hljs-type">AutoGenerator</span> <span class="hljs-variable">autoGenerator</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">AutoGenerator</span>();<br>        <span class="hljs-type">DataSourceConfig</span> <span class="hljs-variable">dataSourceConfig</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">DataSourceConfig</span>();<br>        <span class="hljs-comment">//数据源</span><br>        dataSourceConfig.setDbType(DbType.MYSQL);<br>        <span class="hljs-comment">//驱动名称</span><br>        dataSourceConfig.setDriverName(<span class="hljs-string">&quot;com.mysql.cj.jdbc.Driver&quot;</span>);<br>        <span class="hljs-comment">//数据库用户名密码url</span><br>        dataSourceConfig.setUsername(<span class="hljs-string">&quot;root&quot;</span>);<br>        dataSourceConfig.setPassword(<span class="hljs-string">&quot;109372&quot;</span>);<br>        dataSourceConfig.setUrl(<span class="hljs-string">&quot;jdbc:mysql://localhost:3306/mall?useUnicode=true&amp;characterEncoding=UTF-8&quot;</span>);<br>        autoGenerator.setDataSource(dataSourceConfig);<br>        <span class="hljs-type">GlobalConfig</span> <span class="hljs-variable">globalConfig</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">GlobalConfig</span>();<br>        <span class="hljs-comment">//代码生成之后是否自动打开（文件夹）</span><br>        globalConfig.setOpen(<span class="hljs-literal">false</span>);<br>        <span class="hljs-comment">//生成代码的路径</span><br>        globalConfig.setOutputDir(System.getProperty(<span class="hljs-string">&quot;user.dir&quot;</span>)+<span class="hljs-string">&quot;/src/main/java&quot;</span>);<br>        <span class="hljs-comment">//作者</span><br>        globalConfig.setAuthor(<span class="hljs-string">&quot;Yuki&quot;</span>);<br>        <span class="hljs-comment">//service层命名，后面补一个Service（user→userService）</span><br>        globalConfig.setServiceName(<span class="hljs-string">&quot;%sService&quot;</span>);<br>        autoGenerator.setGlobalConfig(globalConfig);<br>        <span class="hljs-type">PackageConfig</span> <span class="hljs-variable">packageConfig</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">PackageConfig</span>();<br>        <span class="hljs-comment">//设置包信息</span><br>        packageConfig.setParent(<span class="hljs-string">&quot;com.yuki&quot;</span>);<br>        packageConfig.setEntity(<span class="hljs-string">&quot;entity&quot;</span>);<br>        packageConfig.setMapper(<span class="hljs-string">&quot;mapper&quot;</span>);<br>        packageConfig.setController(<span class="hljs-string">&quot;controller&quot;</span>);<br>        packageConfig.setService(<span class="hljs-string">&quot;service&quot;</span>);<br>        packageConfig.setServiceImpl(<span class="hljs-string">&quot;service.impl&quot;</span>);<br>        autoGenerator.setPackageInfo(packageConfig);<br>        <span class="hljs-type">StrategyConfig</span> <span class="hljs-variable">strategyConfig</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">StrategyConfig</span>();<br>        <span class="hljs-comment">//是否给实体类添加Lombok</span><br>        strategyConfig.setEntityLombokModel(<span class="hljs-literal">true</span>);<br>        <span class="hljs-comment">//下划线转驼峰，表名映射到类名</span><br>        strategyConfig.setNaming(NamingStrategy.underline_to_camel);<br>        <span class="hljs-comment">//字段的映射</span><br>        strategyConfig.setColumnNaming(NamingStrategy.underline_to_camel);<br><br>        List&lt;TableFill&gt; list = <span class="hljs-keyword">new</span> <span class="hljs-title class_">ArrayList</span>&lt;&gt;();<br>        <span class="hljs-comment">//创建时间和修改时间</span><br>        <span class="hljs-type">TableFill</span> <span class="hljs-variable">tableFill1</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">TableFill</span>(<span class="hljs-string">&quot;create_time&quot;</span>, FieldFill.INSERT);<br>        <span class="hljs-type">TableFill</span> <span class="hljs-variable">tableFill2</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">TableFill</span>(<span class="hljs-string">&quot;update_time&quot;</span>,FieldFill.INSERT_UPDATE);<br>        list.add(tableFill1);<br>        list.add(tableFill2);<br><br>        strategyConfig.setTableFillList(list);<br>        autoGenerator.setStrategy(strategyConfig);<br><br>        autoGenerator.execute();<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>添加完成之后运行，运行成功<br><img src="https://yuki-picgo-img.oss-cn-beijing.aliyuncs.com/vscode-img/20220502173311.png" alt="20220502173311"></p><h2 id="5、扫描mapper接口"><a href="#5、扫描mapper接口" class="headerlink" title="5、扫描mapper接口"></a>5、扫描mapper接口</h2><p><img src="https://yuki-picgo-img.oss-cn-beijing.aliyuncs.com/vscode-img/20220502174543.png" alt="20220502174543"></p><h2 id="6、配置数据库"><a href="#6、配置数据库" class="headerlink" title="6、配置数据库"></a>6、配置数据库</h2><p>引入mybatisplus会自动连接数据库<br><img src="https://yuki-picgo-img.oss-cn-beijing.aliyuncs.com/vscode-img/![20220502174739](httpsyuki-picgo-img.oss-cn-beijing.aliyuncs.comvscode-img20220502174739.png).png" alt="![20220502174739](httpsyuki-picgo-img.oss-cn-beijing.aliyuncs.comvscode-img20220502174739.png)"></p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs yml"><span class="hljs-attr">spring:</span><br>  <span class="hljs-attr">datasource:</span><br>    <span class="hljs-attr">url:</span> <span class="hljs-string">jdbc:mysql://localhost:3306/mall?useUnicode=true&amp;characterEncoding=UTF-8</span><br>    <span class="hljs-attr">username:</span> <span class="hljs-string">root</span><br>    <span class="hljs-attr">password:</span> <span class="hljs-number">109372</span><br>    <span class="hljs-attr">driver-class-name:</span> <span class="hljs-string">com.mysql.cj.jdbc.Driver</span><br><span class="hljs-attr">mybatis-plus:</span><br>  <span class="hljs-attr">configuration:</span><br>    <span class="hljs-attr">log-impl:</span> <span class="hljs-string">org.apache.ibatis.logging.stdout.StdOutImpl</span><br>    <span class="hljs-attr">mapper-locations:</span> <span class="hljs-string">classpath:com/yuki/travel/mapper/xml/*.xml</span><br></code></pre></td></tr></table></figure><h1 id="五、异常统一处理机制"><a href="#五、异常统一处理机制" class="headerlink" title="五、异常统一处理机制"></a>五、异常统一处理机制</h1><h1 id="六、注册"><a href="#六、注册" class="headerlink" title="六、注册"></a>六、注册</h1><h2 id="1、前端进行校验，提交表单，发送到后端"><a href="#1、前端进行校验，提交表单，发送到后端" class="headerlink" title="1、前端进行校验，提交表单，发送到后端"></a>1、前端进行校验，提交表单，发送到后端</h2><p><code>&lt;form id=&quot;register&quot; action=&quot;/user/register&quot; method=&quot;post&quot;&gt;</code><br><code>user</code>映射控制器<code>register</code>映射方法<br>在UserController中写register方法<br><img src="https://yuki-picgo-img.oss-cn-beijing.aliyuncs.com/vscode-img/20220502180940.png" alt="20220502180940"><br><img src="https://yuki-picgo-img.oss-cn-beijing.aliyuncs.com/vscode-img/20220502180951.png" alt="20220502180951"><br>后台成功拿到数据<br><img src="https://yuki-picgo-img.oss-cn-beijing.aliyuncs.com/vscode-img/20220502181036.png" alt="20220502181036"></p><h2 id="2、后端再一次进行数据校验（非空校验（springmvc的数据校验）-amp-格式校验）"><a href="#2、后端再一次进行数据校验（非空校验（springmvc的数据校验）-amp-格式校验）" class="headerlink" title="2、后端再一次进行数据校验（非空校验（springmvc的数据校验） &amp; 格式校验）"></a>2、后端再一次进行数据校验（非空校验（springmvc的数据校验） &amp; 格式校验）</h2><h3 id="1、引用相关依赖"><a href="#1、引用相关依赖" class="headerlink" title="1、引用相关依赖"></a>1、引用相关依赖</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>org.hibernate<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>hibernate-validator<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">version</span>&gt;</span>5.2.4.Final<span class="hljs-tag">&lt;/<span class="hljs-name">version</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>javax.validation<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>validation-api<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">version</span>&gt;</span>2.0.1.Final<span class="hljs-tag">&lt;/<span class="hljs-name">version</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>org.jboss.logging<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>jboss-logging<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">version</span>&gt;</span>3.4.2.Final<span class="hljs-tag">&lt;/<span class="hljs-name">version</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span><br></code></pre></td></tr></table></figure><h3 id="2、非空校验（创建表单对象专门用来校验）"><a href="#2、非空校验（创建表单对象专门用来校验）" class="headerlink" title="2、非空校验（创建表单对象专门用来校验）"></a>2、非空校验（创建表单对象专门用来校验）</h3><p><img src="https://yuki-picgo-img.oss-cn-beijing.aliyuncs.com/vscode-img/20220502183406.png" alt="20220502183406"></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">package</span> com.yuki.travel.form;<br><br><span class="hljs-keyword">import</span> lombok.Data;<br><span class="hljs-keyword">import</span> org.hibernate.validator.constraints.NotEmpty;<br><br><span class="hljs-keyword">import</span> javax.validation.constraints.NotNull;<br><br><span class="hljs-meta">@Data</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">UserRegisterForm</span> &#123;<br>    <span class="hljs-meta">@NotEmpty(message = &quot;登录名不能为空&quot;)</span><br>    <span class="hljs-keyword">private</span> String loginName;<br>    <span class="hljs-meta">@NotEmpty(message = &quot;用户名不能为空&quot;)</span><br>    <span class="hljs-keyword">private</span> String userName;<br>    <span class="hljs-meta">@NotEmpty(message = &quot;密码不能为空&quot;)</span><br>    <span class="hljs-keyword">private</span> String password;<br>    <span class="hljs-meta">@NotNull(message = &quot;性别不能为空&quot;)</span><br>    <span class="hljs-keyword">private</span> Integer gender;<br>    <span class="hljs-meta">@NotEmpty(message = &quot;邮箱不能为空&quot;)</span><br>    <span class="hljs-keyword">private</span> String email;<br>    <span class="hljs-meta">@NotEmpty(message = &quot;手机不能为空&quot;)</span><br>    <span class="hljs-keyword">private</span> String mobile;<br>&#125;<br></code></pre></td></tr></table></figure><p><img src="https://yuki-picgo-img.oss-cn-beijing.aliyuncs.com/vscode-img/20220502183516.png" alt="20220502183516"></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@PostMapping(&quot;register&quot;)</span><br><span class="hljs-comment">//前端数据封装成UserRegisterForm对象，根据注解判断是否有错误，结果封装汇总到BindingResult对象中</span><br><span class="hljs-keyword">public</span> String <span class="hljs-title function_">register</span><span class="hljs-params">(<span class="hljs-meta">@Valid</span> UserRegisterForm userRegisterForm, BindingResult bindingResult)</span>&#123;<br>    <span class="hljs-comment">//判断BindingResult中有没有错误信息</span><br>    <span class="hljs-keyword">if</span> (bindingResult.hasErrors())&#123;<br>        <span class="hljs-comment">//错误可能不止一个，结果是个集合</span><br>        List&lt;ObjectError&gt; allErrors = bindingResult.getAllErrors();<br>        <span class="hljs-comment">//输出所有错误信息</span><br>        <span class="hljs-keyword">for</span> (ObjectError allError : allErrors) &#123;<br>            System.out.println(allError.getDefaultMessage());<br>        &#125;<br>    &#125;<br>    <span class="hljs-keyword">return</span> <span class="hljs-literal">null</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="3、异常处理"><a href="#3、异常处理" class="headerlink" title="3、异常处理"></a>3、异常处理</h3><p>流程：<br>1、注册信息一提交，进入usercontroller控制器，对表单进行校验，如果有错误，抛异常<br><img src="https://yuki-picgo-img.oss-cn-beijing.aliyuncs.com/vscode-img/20220505220202.png" alt="20220505220202"><br>2、统一异常处理器捕获异常<br><img src="https://yuki-picgo-img.oss-cn-beijing.aliyuncs.com/vscode-img/20220505220248.png" alt="20220505220248"></p><p>1、定义异常<br>新建<code>exception.MallException</code><br>新建错误枚举类型<code>result.ResponseEnum</code><br><img src="https://yuki-picgo-img.oss-cn-beijing.aliyuncs.com/vscode-img/20220503181129.png" alt="20220503181129"><br>2、抛出异常<br><img src="https://yuki-picgo-img.oss-cn-beijing.aliyuncs.com/vscode-img/20220505215342.png" alt="20220505215342"><br>3、接受异常<br>新建<code>UnifiedExceptionHandler</code><br><img src="https://yuki-picgo-img.oss-cn-beijing.aliyuncs.com/vscode-img/20220505215420.png" alt="20220505215420"><br>添加注解使其能够接收异常，只要抛异常就能够进入到这个方法里面<br><img src="https://yuki-picgo-img.oss-cn-beijing.aliyuncs.com/vscode-img/20220505215529.png" alt="20220505215529"></p><h3 id="4、格式校验"><a href="#4、格式校验" class="headerlink" title="4、格式校验"></a>4、格式校验</h3><p>校验工具类<br><img src="https://yuki-picgo-img.oss-cn-beijing.aliyuncs.com/vscode-img/20220505221139.png" alt="20220505221139"><br>1、使用工具类判断<br>2、打印日志<br>3、抛异常（ResponseEnum中定义）<br><img src="https://yuki-picgo-img.oss-cn-beijing.aliyuncs.com/vscode-img/20220505222327.png" alt="20220505222327"></p><h3 id="5、异常处理"><a href="#5、异常处理" class="headerlink" title="5、异常处理"></a>5、异常处理</h3><p><code>mallexception</code>中记录枚举类型→在<code>UnifiedExceptionHandler</code>中拿到→通过code判断是什么错误,然后进行处理→通过thyme leaf将封装的错误信息展示到前端</p><p><img src="https://yuki-picgo-img.oss-cn-beijing.aliyuncs.com/vscode-img/20220505222844.png" alt="20220505222844"><br><img src="https://yuki-picgo-img.oss-cn-beijing.aliyuncs.com/vscode-img/20220505222907.png" alt="20220505222907"><br>记录当前枚举类型<br><img src="https://yuki-picgo-img.oss-cn-beijing.aliyuncs.com/vscode-img/20220505223033.png" alt="20220505223033"><br><img src="https://yuki-picgo-img.oss-cn-beijing.aliyuncs.com/vscode-img/20220505223914.png" alt="20220505223914"><br>然后通过thyme leaf将封装的数据传到前端（传了信息才会展示）<br><img src="https://yuki-picgo-img.oss-cn-beijing.aliyuncs.com/vscode-img/20220505224124.png" alt="20220505224124"></p><h3 id="6、判断用户名是否存在"><a href="#6、判断用户名是否存在" class="headerlink" title="6、判断用户名是否存在"></a>6、判断用户名是否存在</h3><ol><li>注入service<img src="https://yuki-picgo-img.oss-cn-beijing.aliyuncs.com/vscode-img/20220505231411.png" alt="20220505231411"></li><li>条件查询用户名是否存在<img src="https://yuki-picgo-img.oss-cn-beijing.aliyuncs.com/vscode-img/20220505232706.png" alt="20220505232706"></li><li>如果存在，则将异常抛出，其余步骤与上述相同</li></ol><h2 id="3、将数据存储到数据库中"><a href="#3、将数据存储到数据库中" class="headerlink" title="3、将数据存储到数据库中"></a>3、将数据存储到数据库中</h2><h3 id="1、优化：controller只负责接收数据，然后调用service层"><a href="#1、优化：controller只负责接收数据，然后调用service层" class="headerlink" title="1、优化：controller只负责接收数据，然后调用service层"></a>1、优化：controller只负责接收数据，然后调用service层</h3><ol><li><img src="https://yuki-picgo-img.oss-cn-beijing.aliyuncs.com/vscode-img/20220505233711.png" alt="20220505233711"></li><li>重写服务实现类<img src="https://yuki-picgo-img.oss-cn-beijing.aliyuncs.com/vscode-img/20220505233902.png" alt="20220505233902"></li><li>将各种校验写到服务实现类里<img src="https://yuki-picgo-img.oss-cn-beijing.aliyuncs.com/vscode-img/20220505234037.png" alt="20220505234037"></li><li>添加注解<img src="https://yuki-picgo-img.oss-cn-beijing.aliyuncs.com/vscode-img/20220505234100.png" alt="20220505234100"></li><li>已经在service层就不能再调service了，所以调mapper，更换方法名<img src="https://yuki-picgo-img.oss-cn-beijing.aliyuncs.com/vscode-img/20220505234351.png" alt="20220505234351"></li></ol><h3 id="2、存储数据"><a href="#2、存储数据" class="headerlink" title="2、存储数据"></a>2、存储数据</h3><p>mybatisplus已经将数据封装好了，调<code>usermapper</code>就好了</p><ol><li>需要传入的是一个user对象，所以将userform转换成user（这个方法只能传user），首先封装一个user对象<code>User user = new User();</code></li><li>赋值(将userregisterform的属性值全部赋给user)<code>BeanUtils.copyProperties(userRegisterForm,user);</code></li><li>使用MD5工具类加密密码<code>user.setPassword(MD5Util.getSaltMD5(user.getPassword()));</code></li><li>将数据传输到数据库<code>int insert = this.userMapper.insert(user);</code></li><li>自动生成创建时间，添加工具类<code>MyMetaObjectHandler</code><img src="https://yuki-picgo-img.oss-cn-beijing.aliyuncs.com/vscode-img/20220506000547.png" alt="20220506000547"><img src="https://yuki-picgo-img.oss-cn-beijing.aliyuncs.com/vscode-img/20220506000719.png" alt="20220506000719"></li><li>修改<code>userController</code><img src="https://yuki-picgo-img.oss-cn-beijing.aliyuncs.com/vscode-img/20220506001517.png" alt="20220506001517"><br><img src="https://yuki-picgo-img.oss-cn-beijing.aliyuncs.com/vscode-img/20220506002325.png" alt="20220506002325"></li></ol><h1 id="七、登录"><a href="#七、登录" class="headerlink" title="七、登录"></a>七、登录</h1><ol><li>数据校验（非空校验）<img src="https://yuki-picgo-img.oss-cn-beijing.aliyuncs.com/vscode-img/20220506003940.png" alt="20220506003940"></li><li>非空校验照抄用户注册的即可<img src="https://yuki-picgo-img.oss-cn-beijing.aliyuncs.com/vscode-img/20220506004208.png" alt="20220506004208"></li><li>去<code>service</code>层完成登录<img src="https://yuki-picgo-img.oss-cn-beijing.aliyuncs.com/vscode-img/20220506004358.png" alt="20220506004358"></li><li>去<code>UserServiceImpl</code>实现方法<img src="https://yuki-picgo-img.oss-cn-beijing.aliyuncs.com/vscode-img/20220506004532.png" alt="20220506004532"> <img src="https://yuki-picgo-img.oss-cn-beijing.aliyuncs.com/vscode-img/20220506004619.png" alt="20220506004619"></li><li><img src="https://yuki-picgo-img.oss-cn-beijing.aliyuncs.com/vscode-img/20220506011550.png" alt="20220506011550"></li><li>返回到<code>UserController</code> <img src="https://yuki-picgo-img.oss-cn-beijing.aliyuncs.com/vscode-img/20220506010101.png" alt="20220506010101"></li><li>进到异常处理中，删除<code>modelAndView.setViewName(&quot;register&quot;);</code> <img src="https://yuki-picgo-img.oss-cn-beijing.aliyuncs.com/vscode-img/20220506010414.png" alt="20220506010414"></li><li>该返回哪填哪<img src="https://yuki-picgo-img.oss-cn-beijing.aliyuncs.com/vscode-img/20220506010531.png" alt="20220506010531"></li><li>不直接返回视图，把用户存到session当中 <img src="https://yuki-picgo-img.oss-cn-beijing.aliyuncs.com/yuque-img/%E7%94%A8%E6%88%B7%E7%99%BB%E5%BD%95_%E5%AD%98session.png"> <img src="https://yuki-picgo-img.oss-cn-beijing.aliyuncs.com/yuque-img/%E7%94%A8%E6%88%B7%E7%99%BB%E5%BD%95_session.png"></li><li>进到<code>ProductCategoryController</code>中写<code>main</code>方法</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">ProductCategoryController</span> &#123;<br>    <span class="hljs-meta">@GetMapping(&quot;/mall&quot;)</span><br>    <span class="hljs-keyword">public</span> ModelAndView <span class="hljs-title function_">main</span><span class="hljs-params">()</span>&#123;<br>    <span class="hljs-comment">//返回真正的商城首页</span><br>        <span class="hljs-type">ModelAndView</span> <span class="hljs-variable">modelAndView</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">ModelAndView</span>();<br>        modelAndView.setViewName(<span class="hljs-string">&quot;mall&quot;</span>);<br>        <span class="hljs-keyword">return</span> modelAndView;<br>    &#125;<br><br>&#125;<br></code></pre></td></tr></table></figure><p><img src="https://yuki-picgo-img.oss-cn-beijing.aliyuncs.com/yuque-img/20220508165501.png" alt="1"></p><h1 id="八、加载首页数据"><a href="#八、加载首页数据" class="headerlink" title="八、加载首页数据"></a>八、加载首页数据</h1><p>进入<code>ProductCategoryService</code>中写方法。实体类里没有子菜单的属性，根据前端的类型自己封装一个类型，新建<code>vo.ProductCategoryVO</code></p><ol><li><p><img src="https://yuki-picgo-img.oss-cn-beijing.aliyuncs.com/yuque-img/20220508170909.png"></p></li><li><p>写个方法<img src="https://yuki-picgo-img.oss-cn-beijing.aliyuncs.com/yuque-img/20220508171800.png"></p></li><li><p><code>CTRL</code>+<code>I</code>，<img src="https://yuki-picgo-img.oss-cn-beijing.aliyuncs.com/yuque-img/20220508172033.png"></p></li><li><p><img src="https://yuki-picgo-img.oss-cn-beijing.aliyuncs.com/yuque-img/20220508173313.png"> 缺个构造器。编写<code>ProductCategoryVO</code>，<img src="https://yuki-picgo-img.oss-cn-beijing.aliyuncs.com/yuque-img/20220508173539.png"></p></li><li><p>构建子菜单<img src="https://yuki-picgo-img.oss-cn-beijing.aliyuncs.com/yuque-img/20220508173830.png"></p></li><li><pre><code class="java">package com.yuki.travel.service.impl;import com.yuki.travel.entity.ProductCategory;import com.yuki.travel.mapper.ProductCategoryMapper;import com.yuki.travel.service.ProductCategoryService;import com.baomidou.mybatisplus.extension.service.impl.ServiceImpl;import com.yuki.travel.vo.ProductCategoryVO;import org.springframework.beans.factory.annotation.Autowired;import org.springframework.stereotype.Service;import java.util.ArrayList;import java.util.Iterator;import java.util.List;import java.util.stream.Collectors;/** * &lt;p&gt; *  服务实现类 * &lt;/p&gt; * * @author Yuki * @since 2022-05-02 */@Servicepublic class ProductCategoryServiceImpl extends ServiceImpl&lt;ProductCategoryMapper, ProductCategory&gt; implements ProductCategoryService &#123;    @Autowired    private ProductCategoryMapper productCategoryMapper;    /**     * 构建商品分类菜单     * @return     */    @Override    public List&lt;ProductCategoryVO&gt; buildProductCategoryMenu() &#123;        //1、查询所有商品分类数据        List&lt;ProductCategory&gt; productCategoryList = this.productCategoryMapper.selectList(null);        //2、数据类型转换成PROductCategoryVO        List&lt;ProductCategoryVO&gt; productCategoryVOList = productCategoryList.stream().map(ProductCategoryVO::new).collect(Collectors.toList());        //3、进行父子级菜单的封装        List&lt;ProductCategoryVO&gt; levelOneList = buildMenu(productCategoryVOList);        return levelOneList;    &#125;    /**     * 构建菜单     * @param list     */    public List&lt;ProductCategoryVO&gt; buildMenu(List&lt;ProductCategoryVO&gt; list)&#123;    //找到一级菜单        List&lt;ProductCategoryVO&gt; levelOneList = list.stream().filter(c -&gt; c.getParentId() == 0).collect(Collectors.toList());        //对一级菜单进行遍历，调下面的递归方法        for (ProductCategoryVO vo : levelOneList) &#123;            recursion(list,vo);        &#125;        return levelOneList;    &#125;    /**     * 递归分类     * @param list     * @param vo     */    public void recursion(List&lt;ProductCategoryVO&gt; list,ProductCategoryVO vo)&#123;        //找到子菜单        List&lt;ProductCategoryVO&gt; children = getChildren(list, vo);        vo.setChildren(children);        //继续查找子菜单,长度大于0就继续遍历        if(children.size() &gt; 0)&#123;            for (ProductCategoryVO child : children) &#123;                recursion(list,child);            &#125;        &#125;    &#125;    /**     * 获取子菜单     * @param list     * @param vo     */    public List&lt;ProductCategoryVO&gt; getChildren(List&lt;ProductCategoryVO&gt; list,ProductCategoryVO vo)&#123;    List&lt;ProductCategoryVO&gt; children = new ArrayList&lt;&gt;();        Iterator&lt;ProductCategoryVO&gt; iterator = list.iterator();        while (iterator.hasNext()) &#123;            ProductCategoryVO next = iterator.next();            if(next.getParentId().equals(vo.getId()))&#123;                children.add(next);            &#125;        &#125;        return children;    &#125;&#125;<figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br></pre></td><td class="code"><pre><code class="hljs less"><br><span class="hljs-number">7</span>. 在`<span class="hljs-selector-tag">ProductCategoryController</span>`调用<span class="hljs-selector-tag">service</span>层方法   !<span class="hljs-selector-attr">[]</span>(<span class="hljs-attribute">https</span>:<span class="hljs-comment">//yuki-picgo-img.oss-cn-beijing.aliyuncs.com/yuque-img/20220508183742.png)</span><br><span class="hljs-number">8</span>. 获取菜单![](<span class="hljs-attribute">https</span>:<span class="hljs-comment">//yuki-picgo-img.oss-cn-beijing.aliyuncs.com/yuque-img/20220508183918.png)</span><br><span class="hljs-number">9</span>. 修改前端页面代码![](<span class="hljs-attribute">https</span>:<span class="hljs-comment">//yuki-picgo-img.oss-cn-beijing.aliyuncs.com/yuque-img/20220508185140.png)</span><br><span class="hljs-number">10</span>. 修改前端代码（未做）<br><span class="hljs-number">11</span>. 购物车的修改（判断用户是否为登录用户，从session判断）![](<span class="hljs-attribute">https</span>:<span class="hljs-comment">//yuki-picgo-img.oss-cn-beijing.aliyuncs.com/yuque-img/20220508213415.png)</span><br><span class="hljs-number">12</span>. ![](<span class="hljs-attribute">https</span>:<span class="hljs-comment">//yuki-picgo-img.oss-cn-beijing.aliyuncs.com/yuque-img/20220508214204.png)</span><br><span class="hljs-number">13</span>. 查找各级分类对应的商品信息![](<span class="hljs-attribute">https</span>:<span class="hljs-comment">//yuki-picgo-img.oss-cn-beijing.aliyuncs.com/yuque-img/20220508220746.png) 把封装好的集合当作参数传入</span><br><span class="hljs-number">14</span>. 在VO里加上一级分类商品的集合![](<span class="hljs-attribute">https</span>:<span class="hljs-comment">//yuki-picgo-img.oss-cn-beijing.aliyuncs.com/yuque-img/20220508221209.png)</span><br><span class="hljs-number">15</span>. ![](<span class="hljs-attribute">https</span>:<span class="hljs-comment">//yuki-picgo-img.oss-cn-beijing.aliyuncs.com/yuque-img/20220508221832.png)</span><br><span class="hljs-number">16</span>. 改前端代码：<br><span class="hljs-number">13</span>. 用户已登录：<br><br># 九、商品列表<br>## 一、根据商品类型查找商品<br><br><span class="hljs-built_in">`/product/list/type/id`</span>进入<span class="hljs-built_in">`ProductController`</span>中对应方法→先判断数据有没有问题→根据对应字段，把商品查出来→<br><br><span class="hljs-number">1</span>. 修改前端跳转代码![](<span class="hljs-attribute">https</span>:<span class="hljs-comment">//yuki-picgo-img.oss-cn-beijing.aliyuncs.com/yuque-img/20220509005525.png)</span><br><br><span class="hljs-number">2</span>. 编写<span class="hljs-built_in">`ProductController`</span> ![](<span class="hljs-attribute">https</span>:<span class="hljs-comment">//yuki-picgo-img.oss-cn-beijing.aliyuncs.com/yuque-img/20220509005852.png) ![](https://yuki-picgo-img.oss-cn-beijing.aliyuncs.com/yuque-img/20220509005902.png)</span><br><br><span class="hljs-number">3</span>. 编写<span class="hljs-built_in">`ProductService`</span>，<span class="hljs-built_in">`    public List&lt;Product&gt; findAllByTypeAndProductCategoryId(Integer type,Integer id);</span><br><span class="hljs-built_in">    `</span>  ![](<span class="hljs-attribute">https</span>:<span class="hljs-comment">//yuki-picgo-img.oss-cn-beijing.aliyuncs.com/yuque-img/20220509233847.png)</span><br><br><span class="hljs-number">4</span>. 进到<span class="hljs-built_in">`ProductServiceImpl`</span>去实现![](<span class="hljs-attribute">https</span>:<span class="hljs-comment">//yuki-picgo-img.oss-cn-beijing.aliyuncs.com/yuque-img/20220509010757.png)</span><br><br><span class="hljs-number">5</span>. ![](<span class="hljs-attribute">https</span>:<span class="hljs-comment">//yuki-picgo-img.oss-cn-beijing.aliyuncs.com/yuque-img/20220509011402.png)</span><br><br><span class="hljs-number">6</span>. 编写<span class="hljs-built_in">`ProductController`</span> ![](<span class="hljs-attribute">https</span>:<span class="hljs-comment">//yuki-picgo-img.oss-cn-beijing.aliyuncs.com/yuque-img/20220509011621.png)</span><br><br><span class="hljs-number">7</span>. <span class="hljs-built_in">``</span>`java<br>   package com.yuki.travel.controller;<br>   <br>   <br>   import com.yuki.travel.exception.MallException;<br>   import com.yuki.travel.result.ResponseEnum;<br>   import com.yuki.travel.service.ProductService;<br>   import lombok.extern.slf4j.Slf4j;<br>   import org.springframework.beans.factory.annotation.Autowired;<br>   import org.springframework.web.bind.annotation.GetMapping;<br>   import org.springframework.web.bind.annotation.PathVariable;<br>   import org.springframework.web.bind.annotation.RequestMapping;<br>   <br>   import org.springframework.stereotype.Controller;<br>   import org.springframework.web.servlet.ModelAndView;<br>   <br>   <span class="hljs-comment">/**</span><br><span class="hljs-comment">    * &lt;p&gt;</span><br><span class="hljs-comment">    *  前端控制器</span><br><span class="hljs-comment">    * &lt;/p&gt;</span><br><span class="hljs-comment">    *</span><br><span class="hljs-comment">    * @author Yuki</span><br><span class="hljs-comment">    * @since 2022-05-02</span><br><span class="hljs-comment">    */</span><br>   <span class="hljs-variable">@Controller</span><br>   <span class="hljs-variable">@RequestMapping</span>(<span class="hljs-string">&quot;/product&quot;</span>)<br>   <span class="hljs-variable">@Slf4j</span><br>   public class ProductController &#123;<br>       <span class="hljs-variable">@Autowired</span><br>       private ProductService productService;<br>       <span class="hljs-comment">//两个参数。类型ID</span><br>       <span class="hljs-variable">@GetMapping</span>(<span class="hljs-string">&quot;/list/&#123;type&#125;/&#123;id&#125;&quot;</span>)<br>       public ModelAndView <span class="hljs-built_in">list</span>(<br>               <span class="hljs-variable">@PathVariable</span>(<span class="hljs-string">&quot;type&quot;</span>) Integer type,<br>               <span class="hljs-variable">@PathVariable</span>(<span class="hljs-string">&quot;id&quot;</span>) Integer productCategeryId<br>       )&#123;<br>           if (type == null || productCategeryId == null)&#123;<br>               log.<span class="hljs-built_in">info</span>(<span class="hljs-string">&quot;【商品列表】参数为空&quot;</span>);<br>               throw new <span class="hljs-built_in">MallException</span>(ResponseEnum.PARAMETER_NULL);<br>           &#125;<br>           ModelAndView modelAndView = new <span class="hljs-built_in">ModelAndView</span>();<br>           modelAndView.<span class="hljs-built_in">setViewName</span>(<span class="hljs-string">&quot;productList&quot;</span>);<br>           <span class="hljs-comment">//把值拿出来</span><br>           modelAndView.<span class="hljs-built_in">addObject</span>(<span class="hljs-string">&quot;list&quot;</span>,this.productService.<span class="hljs-built_in">findAllByTypeAndProductCategoryId</span>(type, productCategeryId));<br>           return null;<br>       &#125;<br>   &#125;<br></code></pre></td></tr></table></figure></code></pre></li><li><p>修改前端代码，加载拿到的list数据<img src="https://yuki-picgo-img.oss-cn-beijing.aliyuncs.com/yuque-img/20220509013310.png"></p></li></ol><h1 id="九、商品列表"><a href="#九、商品列表" class="headerlink" title="九、商品列表"></a>九、商品列表</h1><ol><li><p>更改链接，从后台进入页面<img src="https://yuki-picgo-img.oss-cn-beijing.aliyuncs.com/yuque-img/20220509180922.png"></p></li><li><p>更改前端页面（&#x2F;后台控制器&#x2F;方法&#x2F;二级分类   二级分类id）<img src="https://yuki-picgo-img.oss-cn-beijing.aliyuncs.com/yuque-img/20220509182411.png"></p></li><li><p>编写<code>ProductController</code>实现方法<img src="https://yuki-picgo-img.oss-cn-beijing.aliyuncs.com/yuque-img/20220509183225.png"></p></li><li><p>测试是否能拿到数据<img src="https://yuki-picgo-img.oss-cn-beijing.aliyuncs.com/yuque-img/20220509183303.png"></p></li><li><pre><code class="java">    //先判断传来的数据是否为空    if (type == null || productCategeryId == null)&#123;        log.info(&quot;【商品列表】参数为空&quot;);        throw new MallException(ResponseEnum.PARAMETER_NULL);    &#125;<figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><code class="hljs less"><br>   !<span class="hljs-selector-attr">[]</span>(<span class="hljs-attribute">https</span>:<span class="hljs-comment">//yuki-picgo-img.oss-cn-beijing.aliyuncs.com/yuque-img/20220509193941.png)</span><br><br><span class="hljs-number">6</span>. 修改<span class="hljs-built_in">`ProductService`</span>，![](<span class="hljs-attribute">https</span>:<span class="hljs-comment">//yuki-picgo-img.oss-cn-beijing.aliyuncs.com/yuque-img/20220509194207.png)</span><br><br><span class="hljs-number">7</span>. 进<span class="hljs-built_in">`impl`</span>中实现，根据type设置查询字段<br><br>   <span class="hljs-built_in">``</span>`java<br>       <span class="hljs-variable">@Autowired</span><br>       private  ProductMapper productMapper;<br>   <br>       <span class="hljs-variable">@Override</span><br>       public List&lt;Product&gt; <span class="hljs-built_in">findAllByTypeAndProductCategoryId</span>(Integer type, Integer id) &#123;<br>           <span class="hljs-comment">//进行条件查询</span><br>           QueryWrapper&lt;Product&gt; queryWrapper = new QueryWrapper&lt;&gt;();<br>           String column = null;<br>           switch (type)&#123;<br>               case <span class="hljs-number">1</span>:<br>                   column = <span class="hljs-string">&quot;categorylevelone_id&quot;</span>;<br>                   break;<br>               case <span class="hljs-number">2</span>:<br>                   column = <span class="hljs-string">&quot;categoryleveltwo_id&quot;</span>;<br>                   break;<br>               case <span class="hljs-number">3</span>:<br>                   column = <span class="hljs-string">&quot;categorylevelthree_id&quot;</span>;<br>                   break;<br>           &#125;<br>           queryWrapper.<span class="hljs-built_in">eq</span>(column,id);<br>           return this.productMapper.<span class="hljs-built_in">selectList</span>(queryWrapper);<br>       &#125;<br></code></pre></td></tr></table></figure></code></pre></li><li><p>把值拿出来attributeName:list</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">//把值拿出来</span><br>       modelAndView.addObject(<span class="hljs-string">&quot;list&quot;</span>,<span class="hljs-built_in">this</span>.productService.findAllByTypeAndProductCategoryId(type, productCategeryId));<br></code></pre></td></tr></table></figure></li><li><p>判断是否为登录用户<img src="https://yuki-picgo-img.oss-cn-beijing.aliyuncs.com/yuque-img/20220509200713.png"></p></li><li><p>封装商品分类菜单<img src="https://yuki-picgo-img.oss-cn-beijing.aliyuncs.com/yuque-img/20220509200803.png"></p></li><li><p>引入方法</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@Autowired</span><br> <span class="hljs-keyword">private</span> ProductCategoryService productCategoryService;<br></code></pre></td></tr></table></figure></li><li></li></ol><h1 id="十、搜索"><a href="#十、搜索" class="headerlink" title="十、搜索"></a>十、搜索</h1><h2 id="优化："><a href="#优化：" class="headerlink" title="优化："></a>优化：<img src="https://yuki-picgo-img.oss-cn-beijing.aliyuncs.com/yuque-img/20220510004759.png"></h2><p>单独去写，回到<code>ProductCategoryController</code><img src="https://yuki-picgo-img.oss-cn-beijing.aliyuncs.com/yuque-img/20220510005014.png"></p><p>去<code>service</code>提供一个方法<img src="https://yuki-picgo-img.oss-cn-beijing.aliyuncs.com/yuque-img/20220510005128.png"></p><p>去实现方法CTRL+I，<img src="https://yuki-picgo-img.oss-cn-beijing.aliyuncs.com/yuque-img/20220510005337.png"></p><p>首先获取一级分类，先获取全部数据再进行筛选，把所有一级分类转成VO，再调<code>getLevelOneProduct</code>这个方法，全部查询出来改代码P12 5:44 <img src="https://yuki-picgo-img.oss-cn-beijing.aliyuncs.com/yuque-img/20220510010716.png"></p><p>然后<img src="https://yuki-picgo-img.oss-cn-beijing.aliyuncs.com/yuque-img/20220510010950.png"></p><p>减少查询次数</p><h2 id="1、修改前端代码"><a href="#1、修改前端代码" class="headerlink" title="1、修改前端代码"></a>1、修改前端代码<img src="https://yuki-picgo-img.oss-cn-beijing.aliyuncs.com/yuque-img/20220510015403.png"></h2><h2 id="2、去写控制器"><a href="#2、去写控制器" class="headerlink" title="2、去写控制器"></a>2、去写控制器</h2><ol><li><p><code>ProductController</code>里写一个<code>search</code>的方法，从上面粘点代码<img src="https://yuki-picgo-img.oss-cn-beijing.aliyuncs.com/yuque-img/20220510013538.png">（图中shop-details应为productlist)</p></li><li><pre><code class="java">    @PostMapping(&quot;/search&quot;)    //拿keyword    public ModelAndView search(String keyWord,HttpSession session)&#123;        //先对数据进行判断,错误给提示        if (keyWord == null)&#123;            log.info(&quot;【商品列表】参数为空&quot;);            throw new MallException(ResponseEnum.PARAMETER_NULL);        &#125;        ModelAndView modelAndView = new ModelAndView();        modelAndView.setViewName(&quot;shop-details&quot;);        //判断用户是否为登录用户        User user = (User) session.getAttribute(&quot;user&quot;);        if (user == null)&#123;            //未登录（直接返回一个空集合）            modelAndView.addObject(&quot;cartList&quot;, new ArrayList&lt;&gt;());        &#125;else &#123;            //已登录,查询用户的购物车记录//            modelAndView.addObject(&quot;cartList&quot;, this.cartService.findVOListByUserId(user.getId()));        &#125;        //封装商品分类菜单        modelAndView.addObject(&quot;list&quot;,this.productCategoryService.buildProductCategoryMenu());        return modelAndView;    &#125;<figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><code class="hljs less"><br><span class="hljs-number">3</span>. 进行模糊查询，交给`<span class="hljs-selector-tag">service</span>`!<span class="hljs-selector-attr">[]</span>(<span class="hljs-attribute">https</span>:<span class="hljs-comment">//yuki-picgo-img.oss-cn-beijing.aliyuncs.com/yuque-img/20220510014225.png)</span><br><br><span class="hljs-number">4</span>. <br><br><br><br># 十一、商品详情展示<br><br><br><br># <span class="hljs-number">1</span>、修改前端代码<br><br><br><br>![](<span class="hljs-attribute">https</span>:<span class="hljs-comment">//yuki-picgo-img.oss-cn-beijing.aliyuncs.com/yuque-img/20220510021548.png)</span><br><br><br><br>## <span class="hljs-number">2</span>、去后台写控制器<br><br><span class="hljs-built_in">``</span>`java<br>    <span class="hljs-variable">@GetMapping</span>(<span class="hljs-string">&quot;/detail/&#123;id&#125;&quot;</span>)<br>    public ModelAndView <span class="hljs-built_in">detail</span>(<span class="hljs-variable">@PathVariable</span>(<span class="hljs-string">&quot;id&quot;</span>) Integer id,HttpSession session)&#123;<br>    &#125;<br></code></pre></td></tr></table></figure></code></pre></li><li><p>非空校验（到上面复制）</p></li><li><pre><code class="java">    @GetMapping(&quot;/detail/&#123;id&#125;&quot;)    public ModelAndView detail(@PathVariable(&quot;id&quot;) Integer id,HttpSession session)&#123;        if (id == null)&#123;            log.info(&quot;【商品详情】参数为空&quot;);            throw new MallException(ResponseEnum.PARAMETER_NULL);        &#125;        ModelAndView modelAndView = new ModelAndView();        modelAndView.setViewName(&quot;shop-details&quot;);        return modelAndView;    &#125;<figure class="highlight reasonml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs reasonml"><br><span class="hljs-number">3.</span> 处理购物车以及商品分类，每个方法都有，从上面粘贴<br><br>   ```java<br>           <span class="hljs-comment">//判断用户是否为登录用户</span><br>           User user = (User) session.get<span class="hljs-constructor">Attribute(<span class="hljs-string">&quot;user&quot;</span>)</span>;<br>           <span class="hljs-keyword">if</span> (user<span class="hljs-operator"> == </span>null)&#123;<br>               <span class="hljs-comment">//未登录（直接返回一个空集合）</span><br>               modelAndView.add<span class="hljs-constructor">Object(<span class="hljs-string">&quot;cartList&quot;</span>, <span class="hljs-params">new</span> ArrayList&lt;&gt;()</span>);<br>           &#125;<span class="hljs-keyword">else</span> &#123;<br>               <span class="hljs-comment">//已登录,查询用户的购物车记录</span><br>   <span class="hljs-comment">//            modelAndView.addObject(&quot;cartList&quot;, this.cartService.findVOListByUserId(user.getId()));</span><br>           &#125;<br>           <span class="hljs-comment">//封装商品分类菜单</span><br>           modelAndView.add<span class="hljs-constructor">Object(<span class="hljs-string">&quot;list&quot;</span>,<span class="hljs-params">this</span>.<span class="hljs-params">productCategoryService</span>.<span class="hljs-params">buildProductCategoryMenu</span>()</span>);<br></code></pre></td></tr></table></figure></code></pre></li><li><p>找商品详情，通过productservice提供的方法查询</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs java">modelAndView.addObject(<span class="hljs-string">&quot;product&quot;</span>,<span class="hljs-built_in">this</span>.productCategoryService.getById(id));<br></code></pre></td></tr></table></figure></li><li><p>回到前端，替换静态数据<img src="https://yuki-picgo-img.oss-cn-beijing.aliyuncs.com/yuque-img/20220510024912.png"></p></li><li></li></ol><h1 id="十二、登录校验"><a href="#十二、登录校验" class="headerlink" title="十二、登录校验"></a>十二、登录校验</h1><ol><li><p>添加js <code>&lt;script type=&quot;text/javascript&quot; src=&quot;/js/productDetail.js&quot;&gt;&lt;/script&gt;</code></p></li><li><p>p14</p></li><li><p><code>CartController</code>里写add方法</p></li><li><pre><code class="java">package com.yuki.travel.controller;import com.yuki.travel.entity.Cart;import com.yuki.travel.exception.MallException;import com.yuki.travel.result.ResponseEnum;import lombok.extern.slf4j.Slf4j;import org.springframework.web.bind.annotation.GetMapping;import org.springframework.web.bind.annotation.PathVariable;import org.springframework.web.bind.annotation.RequestMapping;import org.springframework.stereotype.Controller;import org.springframework.web.servlet.ModelAndView;import javax.servlet.http.HttpSession;/** * &lt;p&gt; *  前端控制器 * &lt;/p&gt; * * @author Yuki * @since 2022-05-02 */@Controller@Slf4j@RequestMapping(&quot;/cart&quot;)public class CartController &#123;    /**     * 添加购物车     * @param productId     * @param price     * @param quantity     * @param session     * @return     */    @GetMapping(&quot;/add/&#123;productId&#125;/&#123;price&#125;/&#123;quantity&#125;&quot;)    public String add(            //取出传来的三个参数            @PathVariable(&quot;productId&quot;) Integer productId,            @PathVariable(&quot;price&quot;) Float price,            @PathVariable(&quot;quantity&quot;) Integer quantity,            HttpSession session    )&#123;        //非空校验        if(productId == null || price == null || quantity == null)&#123;            log.info(&quot;【添加购物车】参数为空&quot;);            throw new MallException(ResponseEnum.PARAMETER_NULL);        &#125;       ModelAndView modelAndView = new  ModelAndView();        return modelAndView;    &#125;&#125;<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><code class="hljs java"><br><span class="hljs-number">5.</span> 到`CartService`里写方法,`<span class="hljs-keyword">public</span> Boolean <span class="hljs-title function_">add</span><span class="hljs-params">(Integer productID,Float price,Integer quantity)</span>;`，到`impl`去实现<br><br><span class="hljs-number">6.</span> 怎么存？：用mybatisplus提供的接口，创建一个cart对象，调接口把cart对象存进去即可<br><br><span class="hljs-number">7.</span> 从session中把用户取出来判断是否登录<br><br><span class="hljs-number">8.</span> 使用过滤器处理未登录用户<br><br><span class="hljs-number">9.</span> 对登录状态进行判断![](https:<span class="hljs-comment">//yuki-picgo-img.oss-cn-beijing.aliyuncs.com/yuque-img/20220510041652.png)</span><br><br><span class="hljs-number">10.</span> 编辑配置类把过滤器注入到容器当中![](https:<span class="hljs-comment">//yuki-picgo-img.oss-cn-beijing.aliyuncs.com/yuque-img/20220510041857.png)</span><br><br><span class="hljs-number">11.</span> ```java<br>    <span class="hljs-keyword">package</span> com.yuki.travel.filter;<br>    <br>    <span class="hljs-keyword">import</span> javax.servlet.*;<br>    <span class="hljs-keyword">import</span> javax.servlet.http.HttpServletRequest;<br>    <span class="hljs-keyword">import</span> javax.servlet.http.HttpServletResponse;<br>    <span class="hljs-keyword">import</span> javax.servlet.http.HttpSession;<br>    <span class="hljs-keyword">import</span> java.io.IOException;<br>    <br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">UserFilter</span> <span class="hljs-keyword">implements</span> <span class="hljs-title class_">Filter</span> &#123;<br>        <span class="hljs-meta">@Override</span><br>        <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">doFilter</span><span class="hljs-params">(ServletRequest servletRequest, ServletResponse servletResponse, FilterChain filterChain)</span> <span class="hljs-keyword">throws</span> IOException, ServletException &#123;<br>            <span class="hljs-comment">//请求和响应拿出来</span><br>            <span class="hljs-type">HttpServletRequest</span> <span class="hljs-variable">request</span> <span class="hljs-operator">=</span> (HttpServletRequest) servletRequest;<br>            <span class="hljs-type">HttpServletResponse</span> <span class="hljs-variable">response</span> <span class="hljs-operator">=</span> (HttpServletResponse) servletResponse;<br>            <span class="hljs-comment">//从session中获取user</span><br>            <span class="hljs-type">HttpSession</span> <span class="hljs-variable">session</span> <span class="hljs-operator">=</span> request.getSession();<br>            <span class="hljs-comment">//未登录直接跳转到登录</span><br>            <span class="hljs-keyword">if</span>(session.getAttribute(<span class="hljs-string">&quot;user&quot;</span>) == <span class="hljs-literal">null</span>)&#123;<br>                response.sendRedirect(<span class="hljs-string">&quot;/login&quot;</span>);<br>            &#125;<span class="hljs-keyword">else</span>&#123;<br>                filterChain.doFilter(servletRequest,servletResponse);<br>            &#125;<br>        &#125;<br>    &#125;<br>    <br></code></pre></td></tr></table></figure></code></pre></li><li><pre><code class="java">package com.yuki.travel.configuration;import com.yuki.travel.filter.UserFilter;import org.springframework.boot.web.servlet.FilterRegistrationBean;import org.springframework.context.annotation.Bean;import org.springframework.context.annotation.Configuration;@Configurationpublic class FilterConfiguration &#123;    @Bean    public FilterRegistrationBean registrationBean()&#123;        FilterRegistrationBean filterRegistrationBean = new FilterRegistrationBean();        filterRegistrationBean.setFilter(new UserFilter());        //拦截路径        filterRegistrationBean.addUrlPatterns(&quot;/cart/*&quot;,&quot;/user/orderList&quot;,&quot;/user/addressList&quot;);        return filterRegistrationBean;    &#125;&#125;</code></pre></li><li><p>处理已登录用户（查询用户的购物车）编写<code>ProductCategoryService</code>,把cartservice注入<img src="https://yuki-picgo-img.oss-cn-beijing.aliyuncs.com/yuque-img/20220510042810.png"></p></li><li><p>所有涉及此的都要改</p></li><li><p>修改前端页面实现登录之后展示用户名<img src="https://yuki-picgo-img.oss-cn-beijing.aliyuncs.com/yuque-img/20220510043835.png"></p></li></ol><h1 id="十三、添加购物车"><a href="#十三、添加购物车" class="headerlink" title="十三、添加购物车"></a>十三、添加购物车</h1><ol><li>去<code>CartServiceImpl</code>完成购物车功能</li></ol><h1 id="debug"><a href="#debug" class="headerlink" title="debug"></a>debug</h1><p>商品分类和分类商品<img src="https://yuki-picgo-img.oss-cn-beijing.aliyuncs.com/yuque-img/20220509230432.png"></p><p>购物车<img src="C:\Users\10937\AppData\Roaming\Typora\typora-user-images\image-20220509230515777.png" alt="image-20220509230515777"></p><h2 id="1、路径问题"><a href="#1、路径问题" class="headerlink" title="1、路径问题"></a>1、路径问题</h2><p><img src="https://yuki-picgo-img.oss-cn-beijing.aliyuncs.com/vscode-img/20220502170717.png" alt="20220502170717"></p><h2 id="2、mapper找不到"><a href="#2、mapper找不到" class="headerlink" title="2、mapper找不到"></a>2、mapper找不到</h2><p><img src="https://yuki-picgo-img.oss-cn-beijing.aliyuncs.com/vscode-img/20220502174133.png" alt="20220502174133"></p><h2 id="3、没有配数据库"><a href="#3、没有配数据库" class="headerlink" title="3、没有配数据库"></a>3、没有配数据库</h2><p><img src="https://yuki-picgo-img.oss-cn-beijing.aliyuncs.com/vscode-img/20220502174432.png" alt="20220502174432"></p><h2 id="3、手机号校验出错（未解决）"><a href="#3、手机号校验出错（未解决）" class="headerlink" title="3、手机号校验出错（未解决）"></a>3、手机号校验出错（未解决）</h2><p><img src="https://yuki-picgo-img.oss-cn-beijing.aliyuncs.com/vscode-img/20220505230940.png" alt="20220505230940"><br><img src="https://yuki-picgo-img.oss-cn-beijing.aliyuncs.com/vscode-img/20220505230946.png" alt="20220505230946"></p>]]></content>
    
    
    
    <tags>
      
      <tag>笔记</tag>
      
      <tag>thyme leaf</tag>
      
      <tag>Javaweb</tag>
      
      <tag>spring boot</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>IDEA自动导包</title>
    <link href="/2022/04/19/IDEA%E8%87%AA%E5%8A%A8%E5%AF%BC%E5%8C%85/"/>
    <url>/2022/04/19/IDEA%E8%87%AA%E5%8A%A8%E5%AF%BC%E5%8C%85/</url>
    
    <content type="html"><![CDATA[<p>妈妈再也不用担心我不会导包（alt+enter）</p><span id="more"></span><h1 id="为什么要设置"><a href="#为什么要设置" class="headerlink" title="为什么要设置"></a>为什么要设置</h1><ul><li>如果导入的包比较多,自己一个个导入比较麻烦和话费时间</li><li>删除一些代码时，不删除导入的包会一直存在，代码提交时会越来越臃肿；</li></ul><h1 id="操作"><a href="#操作" class="headerlink" title="操作"></a>操作</h1><p><code>File</code>→<code>Settings</code> 找到<code>Auto Import</code><br><img src="https://yuki-picgo-img.oss-cn-beijing.aliyuncs.com/vscode-img/20220419155539.png" alt="20220419155539"><br><img src="https://yuki-picgo-img.oss-cn-beijing.aliyuncs.com/vscode-img/20220419155842.png" alt="20220419155842"></p>]]></content>
    
    
    
    <tags>
      
      <tag>IDEA</tag>
      
      <tag>Java</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>将静态网页部署到服务器/云服务器上</title>
    <link href="/2022/04/15/%E5%B0%86%E9%9D%99%E6%80%81%E7%BD%91%E9%A1%B5%E9%83%A8%E7%BD%B2%E5%88%B0%E6%9C%8D%E5%8A%A1%E5%99%A8-%E4%BA%91%E6%9C%8D%E5%8A%A1%E5%99%A8%E4%B8%8A/"/>
    <url>/2022/04/15/%E5%B0%86%E9%9D%99%E6%80%81%E7%BD%91%E9%A1%B5%E9%83%A8%E7%BD%B2%E5%88%B0%E6%9C%8D%E5%8A%A1%E5%99%A8-%E4%BA%91%E6%9C%8D%E5%8A%A1%E5%99%A8%E4%B8%8A/</url>
    
    <content type="html"><![CDATA[<p>将静态网页部署到服务器上（Ubuntu 20.04为例）</p><span id="more"></span><h2 id="1、远程登陆到自己的服务器，进入到存放网页的根目录，根目录路径为-x2F-var-x2F-www-x2F-html"><a href="#1、远程登陆到自己的服务器，进入到存放网页的根目录，根目录路径为-x2F-var-x2F-www-x2F-html" class="headerlink" title="1、远程登陆到自己的服务器，进入到存放网页的根目录，根目录路径为 &#x2F;var&#x2F;www&#x2F;html"></a>1、远程登陆到自己的服务器，进入到存放网页的根目录，根目录路径为 &#x2F;var&#x2F;www&#x2F;html</h2><p>(没有的该目录的话先安装apache2(以乌班图为例) <code>sudo apt-get update</code> <code>sudo apt-get install apache2</code>)<br><img src="https://yuki-picgo-img.oss-cn-beijing.aliyuncs.com/vscode-img/20220416223924.png" alt="20220416223924"></p><h2 id="2、传输文件"><a href="#2、传输文件" class="headerlink" title="2、传输文件"></a>2、传输文件</h2><p><img src="https://yuki-picgo-img.oss-cn-beijing.aliyuncs.com/vscode-img/20220416224929.png" alt="20220416224929"><br><img src="https://yuki-picgo-img.oss-cn-beijing.aliyuncs.com/vscode-img/20220416225138.png" alt="20220416225138"></p><h2 id="3、所有文件传输完成后"><a href="#3、所有文件传输完成后" class="headerlink" title="3、所有文件传输完成后"></a>3、所有文件传输完成后</h2><p>服务器ip+&#x2F;+网页名称<br>eg：192.168.222.1&#x2F;index.html</p>]]></content>
    
    
    
    <tags>
      
      <tag>阿里云</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>BootStrap</title>
    <link href="/2022/04/07/BootStrap/"/>
    <url>/2022/04/07/BootStrap/</url>
    
    <content type="html"><![CDATA[<p>bootstrap</p><span id="more"></span><h2 id="1、BootStrap基本模板"><a href="#1、BootStrap基本模板" class="headerlink" title="1、BootStrap基本模板"></a>1、BootStrap基本模板</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-meta">&lt;!doctype <span class="hljs-keyword">html</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">html</span> <span class="hljs-attr">lang</span>=<span class="hljs-string">&quot;zh-CN&quot;</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">head</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">charset</span>=<span class="hljs-string">&quot;utf-8&quot;</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">http-equiv</span>=<span class="hljs-string">&quot;X-UA-Compatible&quot;</span> <span class="hljs-attr">content</span>=<span class="hljs-string">&quot;IE=edge&quot;</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;viewport&quot;</span> <span class="hljs-attr">content</span>=<span class="hljs-string">&quot;width=device-width, initial-scale=1&quot;</span>&gt;</span><br>    <span class="hljs-comment">&lt;!-- 上述3个meta标签*必须*放在最前面，任何其他内容都*必须*跟随其后！ --&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">title</span>&gt;</span>Bootstrap 101 Template<span class="hljs-tag">&lt;/<span class="hljs-name">title</span>&gt;</span><br><br>    <span class="hljs-comment">&lt;!-- Bootstrap （cdn导入）--&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">link</span> <span class="hljs-attr">rel</span>=<span class="hljs-string">&quot;stylesheet&quot;</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;https://stackpath.bootstrapcdn.com/bootstrap/3.4.1/css/bootstrap.min.css&quot;</span> <span class="hljs-attr">integrity</span>=<span class="hljs-string">&quot;sha384-HSMxcRTRxnN+Bdg0JdbxYKrThecOKuH5zCYotlSAcp1+c8xmyTe9GYg1l9a69psu&quot;</span> <span class="hljs-attr">crossorigin</span>=<span class="hljs-string">&quot;anonymous&quot;</span>&gt;</span><br><br>    <span class="hljs-comment">&lt;!-- HTML5 shim 和 Respond.js 是为了让 IE8 支持 HTML5 元素和媒体查询（media queries）功能 --&gt;</span><br>    <span class="hljs-comment">&lt;!-- 警告：通过 file:// 协议（就是直接将 html 页面拖拽到浏览器中）访问页面时 Respond.js 不起作用 --&gt;</span><br>    <span class="hljs-comment">&lt;!--[if lt IE 9]&gt;</span><br><span class="hljs-comment">      &lt;script src=&quot;https://fastly.jsdelivr.net/npm/html5shiv@3.7.3/dist/html5shiv.min.js&quot;&gt;&lt;/script&gt;</span><br><span class="hljs-comment">      &lt;script src=&quot;https://fastly.jsdelivr.net/npm/respond.js@1.4.2/dest/respond.min.js&quot;&gt;&lt;/script&gt;</span><br><span class="hljs-comment">    &lt;![endif]--&gt;</span><br>  <span class="hljs-tag">&lt;/<span class="hljs-name">head</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">h1</span>&gt;</span>你好，世界！<span class="hljs-tag">&lt;/<span class="hljs-name">h1</span>&gt;</span><br><br>    <span class="hljs-comment">&lt;!-- jQuery (Bootstrap 的所有 JavaScript 插件都依赖 jQuery，所以必须放在前边) --&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;https://fastly.jsdelivr.net/npm/jquery@1.12.4/dist/jquery.min.js&quot;</span> <span class="hljs-attr">integrity</span>=<span class="hljs-string">&quot;sha384-nvAa0+6Qg9clwYCGGPpDQLVpLNn0fRaROjHqs13t4Ggj3Ez50XnGQqc/r8MhnRDZ&quot;</span> <span class="hljs-attr">crossorigin</span>=<span class="hljs-string">&quot;anonymous&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br>    <span class="hljs-comment">&lt;!-- 加载 Bootstrap 的所有 JavaScript 插件。你也可以根据需要只加载单个插件。 --&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;https://stackpath.bootstrapcdn.com/bootstrap/3.4.1/js/bootstrap.min.js&quot;</span> <span class="hljs-attr">integrity</span>=<span class="hljs-string">&quot;sha384-aJ21OjlMXNL5UyIl/XNwTMqvzeRMZH2w8c5cRVpzpU8Y5bApTppSuUkhZXN0VxHd&quot;</span> <span class="hljs-attr">crossorigin</span>=<span class="hljs-string">&quot;anonymous&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br>  <span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">html</span>&gt;</span><br></code></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-keyword">html</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">html</span> <span class="hljs-attr">lang</span>=<span class="hljs-string">&quot;en&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">head</span>&gt;</span><br><br><br><br><br><span class="hljs-tag">&lt;<span class="hljs-name">title</span>&gt;</span>Bootstrap基本的HTML模板<span class="hljs-tag">&lt;/<span class="hljs-name">title</span>&gt;</span><br><br><span class="hljs-tag">&lt;<span class="hljs-name">link</span>  <span class="hljs-attr">rel</span>=<span class="hljs-string">&quot;stylesheet&quot;</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;bootstrap/css/bootstrap.min.css&quot;</span>/&gt;</span><br><br><span class="hljs-tag">&lt;/<span class="hljs-name">head</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">h1</span>&gt;</span>Hello,world!<span class="hljs-tag">&lt;/<span class="hljs-name">h1</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;js/jquery.js&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;bootstrap/js/bootstrap.min.js&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">html</span>&gt;</span><br><br></code></pre></td></tr></table></figure><h2 id="2-安装和使用"><a href="#2-安装和使用" class="headerlink" title="2.安装和使用"></a>2.安装和使用</h2><p><a href="https://v3.bootcss.com/">BootStrap中文文档</a><br><img src="https://yuki-picgo-img.oss-cn-beijing.aliyuncs.com/vscode-img/20220407170537.png" alt="20220407170537"></p><p><img src="https://yuki-picgo-img.oss-cn-beijing.aliyuncs.com/vscode-img/20220407170811.png" alt="20220407170811"></p><h2 id="2、布局容器"><a href="#2、布局容器" class="headerlink" title="2、布局容器"></a>2、布局容器</h2><p>1、.container类用于固定宽度并支持响应式布局的容器<br><code>&lt;div class=&quot;container&quot;&gt;&lt;/div&gt;</code><br>2、<code> .container-fluid</code>类用于100%宽度，占据全部视图（viewport）的容器<br><code>&lt;div class=&quot;container-fluid&quot;&gt;&lt;/div&gt;</code><br><code>&lt;div class=&quot;container&quot; style=&quot;background-color: #46B8DA;height: 18.75rem;&quot;&gt;</code><br>3、<code>.container</code>类用于固定宽度并支持响应式布局的容器</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-keyword">html</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">html</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">head</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">charset</span>=<span class="hljs-string">&quot;utf-8&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">title</span>&gt;</span>布局容器<span class="hljs-tag">&lt;/<span class="hljs-name">title</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">link</span> <span class="hljs-attr">rel</span>=<span class="hljs-string">&quot;stylesheet&quot;</span>  <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text/css&quot;</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;BootStrap/css/bootstrap.min.css&quot;</span>/&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">head</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span><br><br><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;container-fluid&quot;</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;background-color: #67B168;height: 4.375rem;&quot;</span>&gt;</span><br>2、 .container-fluid类用于100%宽度，占据全部视图（viewport）的容器<br><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">html</span>&gt;</span><br></code></pre></td></tr></table></figure><p><img src="https://yuki-picgo-img.oss-cn-beijing.aliyuncs.com/vscode-img/20220408171454.png" alt="20220408171454"></p><h2 id="3、栅格网格系统"><a href="#3、栅格网格系统" class="headerlink" title="3、栅格网格系统"></a>3、栅格网格系统</h2><p><strong>1、列组合</strong><br>列总和数不能超12，大于12，则自动换到下一行<br><strong>2、列偏移</strong><br>只需要在列元素上添加类名” col-md-offset -<em>“(其中星号代表要偏移的列组合数)，那么具有这个类名的列就会向右偏移。<br>列如，你在列元素上添加”col-md-offset-8”，表示该列向右移动8个列的宽度(要保证列与偏移列的总数不超过12，不然:<br>会到下一行<br><strong>3、列排序</strong><br>列排序其实就是改变列的方向，改变左右浮动，并设置浮动的距离。在bootstrap框架的网格系统中时通过添加类名 col-md-push-</em> 和col-md-pull-*（其中星号代表移动的列）往前pull，往后push（会覆盖）<br><strong>4、列嵌套</strong><br>Bootstrap框架的网格系统还支持列的嵌套。你可以在一个列中添加一个或者多个行（row）容器，然后在这个行容器中插入列。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-keyword">html</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">html</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">head</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">charset</span>=<span class="hljs-string">&quot;utf-8&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">title</span>&gt;</span>栅格网格系统<span class="hljs-tag">&lt;/<span class="hljs-name">title</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">link</span> <span class="hljs-attr">rel</span>=<span class="hljs-string">&quot;stylesheet&quot;</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text/css&quot;</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;BootStrap/css/bootstrap.min.css&quot;</span> /&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">head</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span><br><span class="hljs-comment">&lt;!-- 布局容器 --&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;container&quot;</span>&gt;</span><br><span class="hljs-comment">&lt;!--行元素--&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;row&quot;</span>&gt;</span><br><span class="hljs-comment">&lt;!-- 列元素 col-xs-数值    col-sm-数值  col-md-数值 col-lg-数值 --&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;col-md-4 col-lg-4&quot;</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;background-color: #46B8DA;&quot;</span>&gt;</span><br>4格<br><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;col-md-8 col-lg-8&quot;</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;background-color: #888888;&quot;</span>&gt;</span><br>8格,加起来不超过12格<br><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><br><br><span class="hljs-comment">&lt;!-- 列元素  超过12会自动换行--&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;col-md-1&quot;</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;background-color: #000000;&quot;</span>&gt;</span>1<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;col-md-1&quot;</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;background-color: #aa55ff;&quot;</span>&gt;</span>1<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;col-md-1&quot;</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;background-color: #aaaa7f;&quot;</span>&gt;</span>1<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;col-md-1&quot;</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;background-color: #00ff00;&quot;</span>&gt;</span>1<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;col-md-1&quot;</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;background-color: #000000;&quot;</span>&gt;</span>1<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;col-md-1&quot;</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;background-color: #aa55ff;&quot;</span>&gt;</span>1<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;col-md-1&quot;</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;background-color: #aa00ff;&quot;</span>&gt;</span>1<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;col-md-1&quot;</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;background-color: #000000;&quot;</span>&gt;</span>1<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;col-md-1&quot;</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;background-color: #aa55ff;&quot;</span>&gt;</span>1<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;col-md-1&quot;</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;background-color: #000000;&quot;</span>&gt;</span>1<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;col-md-1&quot;</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;background-color: #aa55ff;&quot;</span>&gt;</span>1<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;col-md-1&quot;</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;background-color: #aaaa7f;&quot;</span>&gt;</span>1<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;col-md-1&quot;</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;background-color: #00ff00;&quot;</span>&gt;</span>1<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;col-md-1&quot;</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;background-color: #000000;&quot;</span>&gt;</span>1<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;col-md-1&quot;</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;background-color: #aa55ff;&quot;</span>&gt;</span>1<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;col-md-1&quot;</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;background-color: #aa00ff;&quot;</span>&gt;</span>1<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;col-md-1&quot;</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;background-color: #000000;&quot;</span>&gt;</span>1<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;col-md-1&quot;</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;background-color: #aa55ff;&quot;</span>&gt;</span>1<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><br><span class="hljs-tag">&lt;<span class="hljs-name">hr</span> /&gt;</span><br><span class="hljs-comment">&lt;!-- 列偏移 --&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;col-md-1 &quot;</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;background-color: #000000;&quot;</span>&gt;</span>列偏移<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;col-md-1 col-md-offset-3&quot;</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;background-color: #aa55ff;&quot;</span>&gt;</span>列偏移<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;col-md-1&quot;</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;background-color: #aaaa7f;&quot;</span>&gt;</span>列偏移<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;col-md-1&quot;</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;background-color: #00ff00;&quot;</span>&gt;</span>列偏移<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;col-md-1&quot;</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;background-color: #000000;&quot;</span>&gt;</span>列偏移<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;col-md-1&quot;</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;background-color: #aa55ff;&quot;</span>&gt;</span>列偏移<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;col-md-1&quot;</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;background-color: #aa00ff;&quot;</span>&gt;</span>列偏移<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><br><span class="hljs-tag">&lt;<span class="hljs-name">hr</span> &gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">hr</span> &gt;</span><br><span class="hljs-comment">&lt;!-- 列排序 --&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;col-md-1 &quot;</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;background-color: #000000;&quot;</span>&gt;</span>列排序1<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;col-md-1 col-md-push-8&quot;</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;background-color: #aa55ff;&quot;</span>&gt;</span>列排序2<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;col-md-1&quot;</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;background-color: #aaaa7f;&quot;</span>&gt;</span>列排序3<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;col-md-1&quot;</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;background-color: #00ff00;&quot;</span>&gt;</span>列排序4<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;col-md-1&quot;</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;background-color: #000000;&quot;</span>&gt;</span>列排序5<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;col-md-1&quot;</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;background-color: #aa55ff;&quot;</span>&gt;</span>列排序6<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;col-md-1&quot;</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;background-color: #aa00ff;&quot;</span>&gt;</span>列排序7<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><br><span class="hljs-tag">&lt;<span class="hljs-name">hr</span> &gt;</span> <br><span class="hljs-tag">&lt;<span class="hljs-name">hr</span> &gt;</span><br><br><br><br><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-comment">&lt;!-- 列嵌套 --&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;row&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;col-md-6 &quot;</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;background-color: #00ff00;&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;col-md-1&quot;</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;background-color: #D9534F;&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;col-md-7&quot;</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;background-color: #0000ff;&quot;</span>&gt;</span><br>ASDASD<br><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>1ASDASDASDASSADASDSADASDASD<br><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;col-md-6&quot;</span><span class="hljs-attr">style</span>=<span class="hljs-string">&quot;background-color: teal;&quot;</span>&gt;</span><br>1<br><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><br><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;row&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;col-md-3 col-sm-6&quot;</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;background-color: #C7254E;&quot;</span>&gt;</span>1<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;col-md-3 col-sm-6&quot;</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;background-color: #ff55ff;&quot;</span>&gt;</span>2<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;col-md-3 col-sm-6&quot;</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;background-color: #ffff7f;&quot;</span>&gt;</span>3<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;col-md-3 col-sm-6&quot;</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;background-color: #aaff00;&quot;</span>&gt;</span>4<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">html</span>&gt;</span><br></code></pre></td></tr></table></figure><h2 id="4、常用样式（1）"><a href="#4、常用样式（1）" class="headerlink" title="4、常用样式（1）"></a>4、常用样式（1）</h2><p><img src="https://yuki-picgo-img.oss-cn-beijing.aliyuncs.com/vscode-img/20220407202407.png" alt="20220407202407"><br><strong>1. 标题</strong><br><code>bootstap</code>对<code>h1</code>-<code>h6</code>标题效果进行了覆盖，提供了对应的样式类名，为非标题元素设置样式.<code>h1</code>-.<code>h6</code><br>副标题small标签或.small类名</p><p><strong>2. 段落</strong><br>段落是排版中另一个重要元素之一。<br>通过.lead 来突出强调内容(其作用就是增大文本字号，加粗文本，而且对行高和margin也做相应的处理。<br>可以使用以下标签给文本做突出样式处理;<br><code>&lt;small&gt;</code>:小号字<br><code>&lt;b&gt;&lt;strong&gt;</code>:加粗<br><code>&lt;i&gt;&lt;em&gt;</code>:斜体</p><p><strong>3. 强调</strong><br><code>.text-muted</code>:提示，使用浅灰色(#999)<br><code>.text-primary</code>:主要,使用蓝色(#428bca)<br><code>.text-success</code>:成功，使用浅绿色(#3c763d)<br><code>.text-info</code>:通知信息,使用浅蓝色(#31708f)<br><code>.text-warning</code>:警告,使用黄色(#8a6d3b)<br><code>.text-danger</code>:危险，使用褐色(#a94442)</p><p><strong>4. 对齐效果</strong><br>在CSS中常常使用text-align来实现文本的对齐风格的设置。<br>其中主要有四种风格:<br>左对齐，取值left ;<br>居中对齐，取值center;<br>右对齐，取值right ;<br>两端对齐，取值justify。<br>为了简化操作，方便使用，Bootstrap通过定义四个类名来控制文本的对齐风格:<br>.text-left:左对齐.text-center:居中对齐<br>.text-right:右对齐.text-justify:两端对齐。</p><p><strong>5. 列表</strong><br>在HTML文档中，列表结构主要有三种:<br>无序列表(<code>&lt;u1&gt;&lt;7i&gt;...&lt;/li&gt;&lt;/u1&gt;</code>)有序列表(<code>&lt;o1&gt;&lt;7i&gt;...&lt;/ li&gt;&lt;/o1&gt;</code>)<br>定义列表(<code>&lt;d1&gt;&lt;dt&gt;...&lt;/dt&gt;&lt;dd&gt;...&lt;/dd&gt;&lt;/d1&gt;</code>)</p><ol><li>去点列表 <code>class=&quot;list-unstyled&quot;</code></li></ol><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-keyword">html</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">html</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">head</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">charset</span>=<span class="hljs-string">&quot;utf-8&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">title</span>&gt;</span>常用样式<span class="hljs-tag">&lt;/<span class="hljs-name">title</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">link</span> <span class="hljs-attr">rel</span>=<span class="hljs-string">&quot;stylesheet&quot;</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text/css&quot;</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;BootStrap/css/bootstrap.min.css&quot;</span>/&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">head</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span><br> <span class="hljs-comment">&lt;!-- 标题 --&gt;</span><br> <span class="hljs-tag">&lt;<span class="hljs-name">h1</span>&gt;</span>标题1<span class="hljs-tag">&lt;<span class="hljs-name">small</span>&gt;</span>副标题<span class="hljs-tag">&lt;/<span class="hljs-name">small</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">h1</span>&gt;</span><br> <span class="hljs-tag">&lt;<span class="hljs-name">h2</span>&gt;</span>标题2<span class="hljs-tag">&lt;<span class="hljs-name">span</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;small&quot;</span>&gt;</span>副标题<span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">h2</span>&gt;</span><br> <span class="hljs-tag">&lt;<span class="hljs-name">h3</span>&gt;</span>标题3<span class="hljs-tag">&lt;/<span class="hljs-name">h3</span>&gt;</span><br> <span class="hljs-tag">&lt;<span class="hljs-name">h4</span>&gt;</span>标题4<span class="hljs-tag">&lt;/<span class="hljs-name">h4</span>&gt;</span><br> <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;h1&quot;</span>&gt;</span>你好<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br> <br> <span class="hljs-tag">&lt;<span class="hljs-name">hr</span>&gt;</span><br> <span class="hljs-tag">&lt;<span class="hljs-name">p</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;lead&quot;</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">i</span>&gt;</span>落是排版中另一个重要元素之一<span class="hljs-tag">&lt;/<span class="hljs-name">i</span>&gt;</span>段。通过.lead 来<span class="hljs-tag">&lt;<span class="hljs-name">small</span>&gt;</span>突出强调内容<span class="hljs-tag">&lt;/<span class="hljs-name">small</span>&gt;</span>(其作用就是<span class="hljs-tag">&lt;<span class="hljs-name">b</span>&gt;</span>增大文本字号<span class="hljs-tag">&lt;/<span class="hljs-name">b</span>&gt;</span>，加粗文本，而且对行高和margin也做相应的处理。可以使用以下标签给文本做突出样式处理;<br><span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><br> <br> <br> <span class="hljs-tag">&lt;<span class="hljs-name">hr</span> &gt;</span><br> <span class="hljs-comment">&lt;!-- 强调 --&gt;</span><br> <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;text-muted&quot;</span>&gt;</span><br> .text-muted :提示，使用浅灰色(#999)<br> <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br> <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;text-primary&quot;</span>&gt;</span><br> .text-primary:主要,使用蓝色(#428bca)<br> <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;text-success&quot;</span>&gt;</span><br> .text-success:成功，使用浅绿色(#3c763d)<br><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;text-info&quot;</span>&gt;</span><br> .text-info:通知信息,使用浅蓝色(#31708f)<br><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;text-warning&quot;</span>&gt;</span><br>.text-warning:警告,使用黄色(#8a6d3b)<br><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;text-danger&quot;</span>&gt;</span><br>.text-danger:危险，使用褐色(#a94442)<br><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><br> <span class="hljs-tag">&lt;<span class="hljs-name">hr</span> &gt;</span><br> <span class="hljs-tag">&lt;<span class="hljs-name">p</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;text-left&quot;</span>&gt;</span>左对齐<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><br> <span class="hljs-tag">&lt;<span class="hljs-name">p</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;text-right&quot;</span>&gt;</span>右对齐<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><br> <span class="hljs-tag">&lt;<span class="hljs-name">p</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;text-center&quot;</span>&gt;</span>居中对齐<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><br> <span class="hljs-tag">&lt;<span class="hljs-name">p</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;text-justify&quot;</span>&gt;</span>在CSS中常常使用text-align来实现文本的对齐风格的设置。<br>其中主要有四种风格:<br>左对齐，取值left ;<br>居中对齐，取值center;<br>右对齐，取值right ;<br>两端对齐，取值justify。<br>为了简化操作，方便使用，Bootstrap通过定义四个类名来控制文本的对齐风格:<br>.text-left:左对齐.text-center:居中对齐<br>.text-right:右对齐.text-justify:两端对齐。<br><span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">html</span>&gt;</span><br></code></pre></td></tr></table></figure><h2 id="5、常用样式（2）"><a href="#5、常用样式（2）" class="headerlink" title="5、常用样式（2）"></a>5、常用样式（2）</h2><ol><li>列表<br>无序列表(<code>&lt;ul&gt;&lt;li&gt;...&lt;/ li&gt;&lt;/ul&gt;</code>)<br>有序列表(<code>&lt;ol&gt;&lt;li&gt;...&lt;/ li&gt;&lt;/ol&gt;</code>)<br>定义列表(<code>&lt;dl&gt;&lt;dt&gt;...&lt;/ dt&gt;&lt;dd&gt;...&lt;/ dd&gt;&lt;/ dl&gt;</code>)</li><li>代码<br>一般在个人博客上使用的较为频繁，用于显示代码的风格。在Bootstrap主要提供了三种代码风格:<br>(1）使用<code>&lt;code&gt;&lt;/code&gt;</code>来显示单行内联代码<br>(2)使用<code>&lt;pre&gt;&lt;/pre&gt;</code>来显示多行块代码<br>样式: pre-scrollable (height,max-height高度固定,为340px,超过存在滚动条)<br>(3）使用<code>&lt;kbd&gt;&lt;/kbd&gt;</code>来显示用户输入代码,如快捷键<br>(4)显示五html标签的代码需要适应字符实体<br>小于号(&lt;）要使用硬编码”<code>&amp;1t</code>;”来替代，大于号(&gt;)使用“<code>&amp;gt</code>;”来替代<br>(5)当长度超过指定值，可以添加滚动条<figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">pre</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;pre-scrollable&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">ol</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span>123123123<span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span>123123123<span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span>123123123<span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span>123123123<span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span>123123123<span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span>123123123<span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span>123123123<span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">ol</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">pre</span>&gt;</span><br></code></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-keyword">html</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">html</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">head</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">charset</span>=<span class="hljs-string">&quot;utf-8&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">title</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">title</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">link</span> <span class="hljs-attr">rel</span>=<span class="hljs-string">&quot;stylesheet&quot;</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text/css&quot;</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;BootStrap/css/bootstrap.min.css&quot;</span>/&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">head</span>&gt;</span><br>--&gt;<br><span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">ul</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span>无序列表1<span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span>无序列表2<span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">ul</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">ol</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span>有序列表1<span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span>有序列表2<span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">ol</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">dl</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">dt</span>&gt;</span>定义列表标题1<span class="hljs-tag">&lt;/<span class="hljs-name">dt</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">dd</span>&gt;</span>内容1<span class="hljs-tag">&lt;/<span class="hljs-name">dd</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">dt</span>&gt;</span>定义里欸博爱表2<span class="hljs-tag">&lt;/<span class="hljs-name">dt</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">dd</span>&gt;</span>内同2<span class="hljs-tag">&lt;/<span class="hljs-name">dd</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">dd</span>&gt;</span>内同3<span class="hljs-tag">&lt;/<span class="hljs-name">dd</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">dl</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">hr</span> &gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">ul</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;list-unstyled&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span>去点无序列表1<span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span>去点序列表2<span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">ul</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">hr</span> &gt;</span><br><span class="hljs-comment">&lt;!-- 内联列表（水平列表） --&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">ul</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;list-inline&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span>内联列表1<span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span>内联列表2<span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span>内联列表3<span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">ul</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">hr</span> &gt;</span><br><span class="hljs-comment">&lt;!-- 自定义列表 内联列表 --&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">dl</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;dl-horizontal&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">dt</span>&gt;</span>自定义列表 内联列表1<span class="hljs-tag">&lt;/<span class="hljs-name">dt</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">dd</span>&gt;</span>asdasdasdasdas<span class="hljs-tag">&lt;/<span class="hljs-name">dd</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">dt</span>&gt;</span>自定义列表 内联列表2<span class="hljs-tag">&lt;/<span class="hljs-name">dt</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">dd</span>&gt;</span>asdasdasdasdas<span class="hljs-tag">&lt;/<span class="hljs-name">dd</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">dt</span>&gt;</span>自定义列表 内联列表3<span class="hljs-tag">&lt;/<span class="hljs-name">dt</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">dd</span>&gt;</span>asdasdasdasfasgfasdasdasdasdas<span class="hljs-tag">&lt;/<span class="hljs-name">dd</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">dd</span>&gt;</span>asdasdasdasfasgfasdasdasdasdas<span class="hljs-tag">&lt;/<span class="hljs-name">dd</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">dl</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">hr</span> &gt;</span><br><span class="hljs-comment">&lt;!-- 单行代码 --&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">code</span>&gt;</span>asdasdasdas阿松大阿松大 啊实打实  <span class="hljs-tag">&lt;/<span class="hljs-name">code</span>&gt;</span><br><span class="hljs-comment">&lt;!-- 快捷键 --&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>使用<span class="hljs-tag">&lt;<span class="hljs-name">kbd</span>&gt;</span>ctrl<span class="hljs-tag">&lt;/<span class="hljs-name">kbd</span>&gt;</span>+<span class="hljs-tag">&lt;<span class="hljs-name">kbd</span>&gt;</span>s<span class="hljs-tag">&lt;/<span class="hljs-name">kbd</span>&gt;</span>保存内容<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><br><br><span class="hljs-comment">&lt;!-- 多行代码  代码会保留原本格式--&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">pre</span>&gt;</span><br>package com.yuki.demo07javawebbegin.servlets;//路径<br>import com.yuki.demo07javawebbegin.fruit.dao.FruitDAO;/路径<br>import com.yuki.demo07javawebbegin.fruit.dao.impl.FruitDAOImpl;//路径<br>import com.yuki.demo07javawebbegin.fruit.pojo.Fruit;//路径<br>import javax.servlet.ServletException;<br>import javax.servlet.http.HttpServlet;<br>import javax.servlet.http.HttpServletRequest;<br>import javax.servlet.http.HttpServletResponse;<br>import java.io.IOException;<br>public class AddServlet extends HttpServlet //获取表单中数据<br>&#123;<br>@Override<br>protected void doPost(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException &#123;<br><br>req.setCharacterEncoding(&quot;UTF-8&quot;);//解决中文乱码<br>//idea中写dopost自动生成dopost方法<br>//super.doPost(req, resp);<br>String fname =  req.getParameter(&quot;fname&quot;);<br>String priceStr = req.getParameter(&quot;price&quot;);<br>&#125;<br>&#125;<br><span class="hljs-tag">&lt;/<span class="hljs-name">pre</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">pre</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;pre-scrollable&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">ol</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span>123123123<span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span>123123123<span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span>123123123<span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span>123123123<span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span>123123123<span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span>123123123<span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span>123123123<span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span>123123123<span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span>123123123<span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span>123123123<span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span>123123123<span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span>123123123<span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span>123123123<span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span>123123123<span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">ol</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">pre</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">html</span>&gt;</span><br></code></pre></td></tr></table></figure></li></ol><h2 id="6、表单控件"><a href="#6、表单控件" class="headerlink" title="6、表单控件"></a>6、表单控件</h2><p><strong>1. 文本框</strong><br><code>.form-control</code>表单元素的样式<br>表单控件的大小  <code>.input-lg</code> <code>.input-sm</code></p><p><strong>2. 下拉框</strong><br><code>.form-control</code>表单元素的样式<br><code>multiple=&quot;multiple&quot;</code> 下拉框多选</p><p><strong>3. 文本域</strong><br><code>.form-control</code>表单元素的样式</p><p><strong>4.复选框</strong><br>垂直显示 <code>.checkbox</code><br>水平显示 <code>.checkbox-inline</code></p><p><strong>5.单选框</strong><br>垂直显示 <code>.radio</code><br>水平显示 <code>.radio-inline</code></p><p><strong>6.按钮</strong></p><ol><li>使用按钮<br>基础样式：<code>.btn</code><br>附加样式：<code>btn-primary</code> <code>btn-info</code> <code>btn-success </code><br><code>btn-warning</code> <code>btn-danger</code> <code>btn-link</code> <code>btn-default</code></li></ol><p>2.多标签使用<br>其他标签可以通过添加按钮样式设置成按钮效果（a标签、span标签等)</p><p>3.按钮大小<br>大按钮 <code>.btn-lg</code><br>正常按钮 <code>.btn-sm</code><br>小按钮 <code>.btn-xS</code></p><p>4.按钮禁用</p><ol><li>通过disabled属性（真正禁用）</li><li>通过disabled样式（样式上禁用）</li></ol><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-keyword">html</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">html</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">head</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">charset</span>=<span class="hljs-string">&quot;utf-8&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">title</span>&gt;</span>表单<span class="hljs-tag">&lt;/<span class="hljs-name">title</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">link</span> <span class="hljs-attr">rel</span>=<span class="hljs-string">&quot;stylesheet&quot;</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text/css&quot;</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;BootStrap/css/bootstrap.min.css&quot;</span>/&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">head</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text&quot;</span> /&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">br</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">select</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">option</span>&gt;</span>111<span class="hljs-tag">&lt;/<span class="hljs-name">option</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">option</span>&gt;</span>222<span class="hljs-tag">&lt;/<span class="hljs-name">option</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">option</span>&gt;</span>333<span class="hljs-tag">&lt;/<span class="hljs-name">option</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">option</span>&gt;</span>444<span class="hljs-tag">&lt;/<span class="hljs-name">option</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">select</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">textarea</span> &gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">textarea</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">br</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">hr</span> &gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;checkbox&quot;</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;hobby&quot;</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;&quot;</span> /&gt;</span>唱歌<br><span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;checkbox&quot;</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;hobby&quot;</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;&quot;</span> /&gt;</span>跳舞<br><span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;radio&quot;</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;song&quot;</span>  <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;&quot;</span> /&gt;</span>唱歌<br><span class="hljs-tag">&lt;<span class="hljs-name">hr</span> &gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">button</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;button&quot;</span>&gt;</span>按钮<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;button&quot;</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;按钮&quot;</span> /&gt;</span><br><br><br><br><span class="hljs-tag">&lt;<span class="hljs-name">hr</span> &gt;</span><br><span class="hljs-comment">&lt;!-- 文本框 --&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;row&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;col-md-3&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;form-control&quot;</span>/&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">br</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;form-control input-lg&quot;</span>/&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">br</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;form-control input-sm&quot;</span>/&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">br</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-comment">&lt;!-- 下拉框 --&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;row&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;col-md-3&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">select</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;form-control&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">option</span>&gt;</span>111<span class="hljs-tag">&lt;/<span class="hljs-name">option</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">option</span>&gt;</span>222<span class="hljs-tag">&lt;/<span class="hljs-name">option</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">option</span>&gt;</span>333<span class="hljs-tag">&lt;/<span class="hljs-name">option</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">option</span>&gt;</span>444<span class="hljs-tag">&lt;/<span class="hljs-name">option</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">select</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">select</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;form-control&quot;</span> <span class="hljs-attr">multiple</span>=<span class="hljs-string">&quot;multiple&quot;</span>&gt;</span> <span class="hljs-comment">&lt;!-- 多选 --&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">option</span>&gt;</span>111<span class="hljs-tag">&lt;/<span class="hljs-name">option</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">option</span>&gt;</span>222<span class="hljs-tag">&lt;/<span class="hljs-name">option</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">option</span>&gt;</span>333<span class="hljs-tag">&lt;/<span class="hljs-name">option</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">option</span>&gt;</span>444<span class="hljs-tag">&lt;/<span class="hljs-name">option</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">select</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-comment">&lt;!-- 文本域 --&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;row&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;col-md-9&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">textarea</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;form-control&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">textarea</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">hr</span> &gt;</span><br><span class="hljs-comment">&lt;!-- 复选框（垂直显示） --&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;row&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;col-md-3&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;checkbox&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">label</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;checkbox&quot;</span>/ <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;hobby&quot;</span>&gt;</span>唱歌<span class="hljs-tag">&lt;/<span class="hljs-name">label</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;checkbox&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">label</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;checkbox&quot;</span>/ <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;hobby&quot;</span>&gt;</span>跳舞<span class="hljs-tag">&lt;/<span class="hljs-name">label</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-comment">&lt;!-- 复选框（水平显示） --&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;row&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;col-md-1&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">label</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;checkbox-inline&quot;</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;checkbox&quot;</span>/ <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;hobby&quot;</span>&gt;</span>唱歌<span class="hljs-tag">&lt;/<span class="hljs-name">label</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;col-md-1&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">label</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;checkbox-inline&quot;</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;checkbox&quot;</span>/ <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;hobby&quot;</span>&gt;</span>跳舞<span class="hljs-tag">&lt;/<span class="hljs-name">label</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><br><span class="hljs-comment">&lt;!-- 单选框 --&gt;</span><br><span class="hljs-comment">&lt;!-- 垂直显示 --&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;row&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;col-md-3&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;radio&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">label</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;radio&quot;</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;gender&quot;</span> /&gt;</span>男<span class="hljs-tag">&lt;/<span class="hljs-name">label</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">label</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;radio&quot;</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;gender&quot;</span> /&gt;</span>女<span class="hljs-tag">&lt;/<span class="hljs-name">label</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-comment">&lt;!-- 水平显示 --&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;row&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;col-md-3&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;radio-inline&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">label</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;radio&quot;</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;gender&quot;</span> /&gt;</span>男<span class="hljs-tag">&lt;/<span class="hljs-name">label</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;radio-inline&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">label</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;radio&quot;</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;gender&quot;</span> /&gt;</span>女<span class="hljs-tag">&lt;/<span class="hljs-name">label</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><br><span class="hljs-comment">&lt;!-- 按钮 --&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">button</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;button&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;btn&quot;</span>&gt;</span>按钮<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">button</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;button&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;btn btn-danger&quot;</span> &gt;</span>按钮<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">button</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;button&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;btn btn-success&quot;</span>&gt;</span>按钮<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">button</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;button&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;btn btn-warning&quot;</span>&gt;</span>按钮<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">button</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;button&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;btn btn-primary&quot;</span>&gt;</span>按钮<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">button</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;button&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;btn btn-info&quot;</span>&gt;</span>按钮<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">button</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;button&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;btn btn-default&quot;</span>&gt;</span>按钮<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">button</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;button&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;btn btn-link&quot;</span>&gt;</span>按钮<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span><br><br><span class="hljs-comment">&lt;!-- 普通标签变按钮 --&gt;</span><br><br><span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;#&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;btn btn-success&quot;</span>&gt;</span>a标签<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">span</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;btn btn-danger&quot;</span> &gt;</span>span标签<span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;btn btn-info&quot;</span>&gt;</span>div标签<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><br><span class="hljs-comment">&lt;!-- 设置按钮的大小 --&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">button</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;button&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;btn btn-danger btn-sm&quot;</span> &gt;</span>small按钮<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">button</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;button&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;btn btn-success&quot;</span>&gt;</span>按钮<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">button</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;button&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;btn btn-warning btn-lg&quot;</span>&gt;</span>按钮<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">button</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;button&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;btn btn-warning btn-xs&quot;</span>&gt;</span>按钮<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span><br><br><span class="hljs-comment">&lt;!-- 按钮禁用 --&gt;</span><br><span class="hljs-comment">&lt;!-- 在标签中添加disabled属性 --&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">button</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;btn btn-info&quot;</span> <span class="hljs-attr">onclick</span>=<span class="hljs-string">&quot;alert(hello)&quot;</span> <span class="hljs-attr">disabled</span>=<span class="hljs-string">&quot;disabled&quot;</span>&gt;</span>按钮禁用1<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">br</span>&gt;</span><br><span class="hljs-comment">&lt;!-- 在元素标签中添加类名“disabled” --&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">button</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;btn btn-warning disabled&quot;</span> <span class="hljs-attr">onclick</span>=<span class="hljs-string">&quot;alert(hello)&quot;</span>&gt;</span>按钮禁用2<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">html</span>&gt;</span><br></code></pre></td></tr></table></figure><h2 id="7、表单布局"><a href="#7、表单布局" class="headerlink" title="7、表单布局"></a>7、表单布局</h2><ol><li>水平表单<br>设置样式：<code>form-horizontal</code><br>内联表单</li></ol><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-keyword">html</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">html</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">head</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">charset</span>=<span class="hljs-string">&quot;utf-8&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">title</span>&gt;</span>表单布局<span class="hljs-tag">&lt;/<span class="hljs-name">title</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">link</span> <span class="hljs-attr">rel</span>=<span class="hljs-string">&quot;stylesheet&quot;</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text/css&quot;</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;BootStrap/css/bootstrap.min.css&quot;</span>/&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">head</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">form</span> <span class="hljs-attr">action</span>=<span class="hljs-string">&quot;#&quot;</span> <span class="hljs-attr">method</span>=<span class="hljs-string">&quot;post&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;form-horizontal&quot;</span> <span class="hljs-attr">role</span>=<span class="hljs-string">&quot;form&quot;</span>&gt;</span>、<br><span class="hljs-tag">&lt;<span class="hljs-name">h2</span> <span class="hljs-attr">align</span>=<span class="hljs-string">&quot;center&quot;</span>&gt;</span>用户信息表<span class="hljs-tag">&lt;/<span class="hljs-name">h2</span>&gt;</span><br><span class="hljs-comment">&lt;!-- 表单中的表单元素组 --&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;form-group&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">label</span> <span class="hljs-attr">for</span>=<span class="hljs-string">&quot;uname&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;control-label col-md-2&quot;</span>&gt;</span>姓名<span class="hljs-tag">&lt;/<span class="hljs-name">label</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;col-md-8&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text&quot;</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;&quot;</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;uname&quot;</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;form-control&quot;</span> <span class="hljs-attr">placeholder</span>=<span class="hljs-string">&quot;请输入姓名&quot;</span>/&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;form-group&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">label</span> <span class="hljs-attr">for</span>=<span class="hljs-string">&quot;upwd&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;control-label col-md-2&quot;</span>&gt;</span>密码<span class="hljs-tag">&lt;/<span class="hljs-name">label</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;col-md-8&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text&quot;</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;&quot;</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;upwd&quot;</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;form-control&quot;</span> <span class="hljs-attr">placeholder</span>=<span class="hljs-string">&quot;请输入密码&quot;</span>/&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;form-group&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">label</span>  <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;control-label col-md-2&quot;</span>&gt;</span>爱好<span class="hljs-tag">&lt;/<span class="hljs-name">label</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;col-md-8&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">label</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;checkbox-inline&quot;</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;checkbox&quot;</span>/ <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;hobby&quot;</span>&gt;</span>唱歌<span class="hljs-tag">&lt;/<span class="hljs-name">label</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">label</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;checkbox-inline&quot;</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;checkbox&quot;</span>/ <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;hobby&quot;</span>&gt;</span>跳舞<span class="hljs-tag">&lt;/<span class="hljs-name">label</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;form-group&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">label</span>  <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;control-label col-md-2&quot;</span>&gt;</span>城市<span class="hljs-tag">&lt;/<span class="hljs-name">label</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;col-md-8&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">select</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;form-control&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">option</span>&gt;</span>111<span class="hljs-tag">&lt;/<span class="hljs-name">option</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">option</span>&gt;</span>222<span class="hljs-tag">&lt;/<span class="hljs-name">option</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">option</span>&gt;</span>333<span class="hljs-tag">&lt;/<span class="hljs-name">option</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">option</span>&gt;</span>444<span class="hljs-tag">&lt;/<span class="hljs-name">option</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">select</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;form-group&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">label</span> <span class="hljs-attr">for</span>=<span class="hljs-string">&quot;remark&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;control-label col-md-2&quot;</span>&gt;</span>简介<span class="hljs-tag">&lt;/<span class="hljs-name">label</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;col-md-8&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">textarea</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;remark&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;form-control&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">textarea</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;form-group&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;col-md-2 col-md-offset-5&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">button</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;button&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;btn btn-primary btn-lg&quot;</span>&gt;</span>提交<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><br><span class="hljs-tag">&lt;/<span class="hljs-name">form</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">hr</span> &gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">form</span>  <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;form-inline&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;form-group&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">label</span> <span class="hljs-attr">for</span>=<span class="hljs-string">&quot;username&quot;</span>&gt;</span>姓名<span class="hljs-tag">&lt;/<span class="hljs-name">label</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text&quot;</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;username&quot;</span><span class="hljs-attr">class</span>=<span class="hljs-string">&quot;form-control&quot;</span> <span class="hljs-attr">placeholder</span>=<span class="hljs-string">&quot;请输入姓名&quot;</span>/&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;form-group&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">label</span> <span class="hljs-attr">for</span>=<span class="hljs-string">&quot;userpwd&quot;</span>&gt;</span>密码<span class="hljs-tag">&lt;/<span class="hljs-name">label</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text&quot;</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;userpwd&quot;</span><span class="hljs-attr">class</span>=<span class="hljs-string">&quot;form-control&quot;</span> <span class="hljs-attr">placeholder</span>=<span class="hljs-string">&quot;请输入密码&quot;</span>/&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;form-group&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">button</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;button&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;btn btn-default&quot;</span>&gt;</span>提交<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">form</span>&gt;</span><br><br><span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">html</span>&gt;</span><br><br></code></pre></td></tr></table></figure><h2 id="8、缩略图"><a href="#8、缩略图" class="headerlink" title="8、缩略图"></a>8、缩略图</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-keyword">html</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">html</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">head</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">charset</span>=<span class="hljs-string">&quot;utf-8&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">title</span>&gt;</span>缩略图<span class="hljs-tag">&lt;/<span class="hljs-name">title</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">link</span> <span class="hljs-attr">rel</span>=<span class="hljs-string">&quot;stylesheet&quot;</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text/css&quot;</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;BootStrap/css/bootstrap.min.css&quot;</span>/&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">head</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;container&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;row&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;co1-md-3&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;thumbnail&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">img</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;img/IDR_THEME_NTP_BACKGROUND.png&quot;</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;width: 240px;height: 150px;&quot;</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">h3</span>&gt;</span>高圆圆<span class="hljs-tag">&lt;/<span class="hljs-name">h3</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>出生于北京市，中国内地影视女演员、模特。<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">button</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;btn btn-default&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">span</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;glyphicon glyphicon-heart&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span>喜欢<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">button</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;btn btn-info&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">span</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;glyphicon glyphicon-pencil&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span>评论<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><br><br><br><span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">html</span>&gt;</span><br></code></pre></td></tr></table></figure><p><img src="https://yuki-picgo-img.oss-cn-beijing.aliyuncs.com/vscode-img/20220408173043.png" alt="20220408173043"></p><h2 id="9、面板"><a href="#9、面板" class="headerlink" title="9、面板"></a>9、面板</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-keyword">html</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">html</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">head</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">charset</span>=<span class="hljs-string">&quot;utf-8&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">title</span>&gt;</span>面板<span class="hljs-tag">&lt;/<span class="hljs-name">title</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">link</span> <span class="hljs-attr">rel</span>=<span class="hljs-string">&quot;stylesheet&quot;</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text/css&quot;</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;BootStrap/css/bootstrap.min.css&quot;</span>/&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">head</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;panel panel-warning&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;panel-heading&quot;</span>&gt;</span><br>阿萨大四u的撒啊实打实  <br><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;panel-body&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;row&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;co1-md-2&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;thumbnail&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">img</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;img/IDR_THEME_NTP_BACKGROUND.png&quot;</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;width: 100px;height: 100px;&quot;</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">h3</span>&gt;</span>高圆圆<span class="hljs-tag">&lt;/<span class="hljs-name">h3</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>出生于北京市，中国内地影视女演员、模特。<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">button</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;btn btn-default&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">span</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;glyphicon glyphicon-heart&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span>喜欢<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">button</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;btn btn-info&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">span</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;glyphicon glyphicon-pencil&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span>评论<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;co1-md-2&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;thumbnail&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">img</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;img/IDR_THEME_NTP_BACKGROUND.png&quot;</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;width: 100px;height: 100px;&quot;</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">h3</span>&gt;</span>高圆圆<span class="hljs-tag">&lt;/<span class="hljs-name">h3</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>出生于北京市，中国内地影视女演员、模特。<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">button</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;btn btn-default&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">span</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;glyphicon glyphicon-heart&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span>喜欢<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">button</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;btn btn-info&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">span</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;glyphicon glyphicon-pencil&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span>评论<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span><br><br><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">html</span>&gt;</span><br></code></pre></td></tr></table></figure><p><img src="https://yuki-picgo-img.oss-cn-beijing.aliyuncs.com/vscode-img/20220408173147.png" alt="20220408173147"></p><h2 id="10、导航"><a href="#10、导航" class="headerlink" title="10、导航"></a>10、导航</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-keyword">html</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">html</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">head</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">charset</span>=<span class="hljs-string">&quot;utf-8&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">title</span>&gt;</span>导航<span class="hljs-tag">&lt;/<span class="hljs-name">title</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">link</span> <span class="hljs-attr">rel</span>=<span class="hljs-string">&quot;stylesheet&quot;</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text/css&quot;</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;BootStrap/css/bootstrap.min.css&quot;</span>/&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">head</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>标签式的导航菜单<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">ul</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;nav nav-tabs&quot;</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">li</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;active&quot;</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;#&quot;</span>&gt;</span>Home<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;#&quot;</span>&gt;</span>SVN<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;#&quot;</span>&gt;</span>iOS<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;#&quot;</span>&gt;</span>VB.Net<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;#&quot;</span>&gt;</span>Java<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;#&quot;</span>&gt;</span>PHP<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">ul</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">hr</span> &gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">hr</span> &gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>基本的胶囊式导航菜单<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">ul</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;nav nav-pills&quot;</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">li</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;active&quot;</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;#&quot;</span>&gt;</span>Home<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;#&quot;</span>&gt;</span>SVN<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;#&quot;</span>&gt;</span>iOS<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;#&quot;</span>&gt;</span>VB.Net<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;#&quot;</span>&gt;</span>Java<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;#&quot;</span>&gt;</span>PHP<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">ul</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">hr</span> &gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">hr</span> &gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;container&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;row&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;co1-md-3 &quot;</span> <span class="hljs-attr">align</span>=<span class="hljs-string">&quot;left&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>垂直的胶囊式导航菜单<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">ul</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;nav nav-pills nav-stacked&quot;</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">li</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;active&quot;</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;#&quot;</span>&gt;</span>Home<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;#&quot;</span>&gt;</span>SVN<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;#&quot;</span>&gt;</span>iOS<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;#&quot;</span>&gt;</span>VB.Net<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;#&quot;</span>&gt;</span>Java<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;#&quot;</span>&gt;</span>PHP<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">ul</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">hr</span> &gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">hr</span> &gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>两端对齐的导航元素<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">ul</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;nav nav-pills nav-justified&quot;</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">li</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;active&quot;</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;#&quot;</span>&gt;</span>Home<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;#&quot;</span>&gt;</span>SVN<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;#&quot;</span>&gt;</span>iOS<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;#&quot;</span>&gt;</span>VB.Net<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;#&quot;</span>&gt;</span>Java<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;#&quot;</span>&gt;</span>PHP<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">ul</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">br</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">br</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">br</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">ul</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;nav nav-tabs nav-justified&quot;</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">li</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;active&quot;</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;#&quot;</span>&gt;</span>Home<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;#&quot;</span>&gt;</span>SVN<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;#&quot;</span>&gt;</span>iOS<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;#&quot;</span>&gt;</span>VB.Net<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;#&quot;</span>&gt;</span>Java<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;#&quot;</span>&gt;</span>PHP<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">ul</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">ul</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;breadcrumb&quot;</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;#&quot;</span>&gt;</span>Home<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;#&quot;</span>&gt;</span>2013<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">li</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;active&quot;</span>&gt;</span>十一月<span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">ul</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">hr</span> &gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">hr</span> &gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>分页导航<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">ul</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;pagination&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;#&quot;</span>&gt;</span><span class="hljs-symbol">&amp;laquo;</span><span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">li</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;active&quot;</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;#&quot;</span>&gt;</span>1<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">li</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;disabled&quot;</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;#&quot;</span>&gt;</span>2<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;#&quot;</span>&gt;</span>3<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;#&quot;</span>&gt;</span>4<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;#&quot;</span>&gt;</span>5<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;#&quot;</span>&gt;</span><span class="hljs-symbol">&amp;raquo;</span><span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">ul</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">hr</span> &gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">hr</span> &gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>翻页导航<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">ul</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;pager&quot;</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">li</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot; disabled&quot;</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;#&quot;</span>&gt;</span>上一页<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;#&quot;</span>&gt;</span>下一页<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">ul</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">html</span>&gt;</span><br></code></pre></td></tr></table></figure><p><img src="https://yuki-picgo-img.oss-cn-beijing.aliyuncs.com/vscode-img/20220408173234.png" alt="20220408173234"></p><h2 id="11、各种插件"><a href="#11、各种插件" class="headerlink" title="11、各种插件"></a>11、各种插件</h2><p><a href="https://www.runoob.com/bootstrap/bootstrap-plugins-overview.html">菜鸟联盟</a></p><h2 id="各种"><a href="#各种" class="headerlink" title="各种"></a>各种</h2><h3 id="foot"><a href="#foot" class="headerlink" title="foot"></a>foot</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs html">Copyright <span class="hljs-symbol">&amp;copy;</span><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="language-javascript"><span class="hljs-variable language_">document</span>.<span class="hljs-title function_">write</span>(<span class="hljs-keyword">new</span> <span class="hljs-title class_">Date</span>().<span class="hljs-title function_">getFullYear</span>());</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span> 作者链接作者链接作者链接作者链接作者链接 <span class="hljs-tag">&lt;<span class="hljs-name">i</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;fa fa-heart-o&quot;</span> <span class="hljs-attr">aria-hidden</span>=<span class="hljs-string">&quot;true&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">i</span>&gt;</span> by <span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;#&quot;</span> <span class="hljs-attr">target</span>=<span class="hljs-string">&quot;_blank&quot;</span>&gt;</span>作者链接<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span><br></code></pre></td></tr></table></figure><p><img src="https://yuki-picgo-img.oss-cn-beijing.aliyuncs.com/vscode-img/20220408162106.png" alt="20220408162106"></p><h3 id="Font-Awesome"><a href="#Font-Awesome" class="headerlink" title="Font Awesome"></a>Font Awesome</h3><p><img src="https://yuki-picgo-img.oss-cn-beijing.aliyuncs.com/vscode-img/20220408180508.png" alt="20220408180508"></p><h3 id="Responsive框架"><a href="#Responsive框架" class="headerlink" title="Responsive框架"></a>Responsive框架</h3><p><img src="https://yuki-picgo-img.oss-cn-beijing.aliyuncs.com/vscode-img/20220408221738.png" alt="20220408221738"></p><p><code>            &lt;div class=&quot;overlay bg-parallax&quot; data-stellar-ratio=&quot;0.9&quot; data-stellar-vertical-offset=&quot;0&quot; data-background=&quot;&quot;&gt;&lt;/div&gt;</code></p><p><code>&lt;i class=&quot;lnr lnr-dinner&quot;&gt;&lt;/i&gt;</code><br><img src="https://yuki-picgo-img.oss-cn-beijing.aliyuncs.com/vscode-img/20220408225116.png" alt="20220408225116"><br>黄色小图标<br><img src="https://yuki-picgo-img.oss-cn-beijing.aliyuncs.com/vscode-img/20220408225202.png" alt="20220408225202"><br><img src="https://yuki-picgo-img.oss-cn-beijing.aliyuncs.com/vscode-img/20220408225212.png" alt="20220408225212"></p><h3 id="OwlCarousel"><a href="#OwlCarousel" class="headerlink" title="OwlCarousel"></a>OwlCarousel</h3><p><img src="https://yuki-picgo-img.oss-cn-beijing.aliyuncs.com/vscode-img/20220409173353.png" alt="20220409173353"></p><h3 id="nice-select"><a href="#nice-select" class="headerlink" title="nice-select"></a>nice-select</h3><p><img src="https://yuki-picgo-img.oss-cn-beijing.aliyuncs.com/vscode-img/20220409173307.png" alt="20220409173307"></p><h3 id="bootstrap-datetimepicker"><a href="#bootstrap-datetimepicker" class="headerlink" title="bootstrap-datetimepicker"></a>bootstrap-datetimepicker</h3><p><img src="https://yuki-picgo-img.oss-cn-beijing.aliyuncs.com/vscode-img/20220409173435.png" alt="20220409173435"></p><p><img src="https://yuki-picgo-img.oss-cn-beijing.aliyuncs.com/vscode-img/20220409181509.png" alt="20220409181509"></p><h3 id="fontawosome失效"><a href="#fontawosome失效" class="headerlink" title="fontawosome失效"></a>fontawosome失效</h3><p>必须在css目录下</p>]]></content>
    
    
    
    <tags>
      
      <tag>BootStrap</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Javaweb</title>
    <link href="/2022/04/06/Javaweb/"/>
    <url>/2022/04/06/Javaweb/</url>
    
    <content type="html"><![CDATA[<p>！</p><span id="more"></span><h2 id="CS和BS的异同点"><a href="#CS和BS的异同点" class="headerlink" title="CS和BS的异同点"></a>CS和BS的异同点</h2><p><img src="https://yuki-picgo-img.oss-cn-beijing.aliyuncs.com/vscode-img/20220406165128.png" alt="20220406165128"><br><img src="https://yuki-picgo-img.oss-cn-beijing.aliyuncs.com/vscode-img/20220406165550.png" alt="20220406165550"><br><img src="https://yuki-picgo-img.oss-cn-beijing.aliyuncs.com/vscode-img/20220406165617.png" alt="20220406165617"></p><p>新建Javaweb<br><img src="https://yuki-picgo-img.oss-cn-beijing.aliyuncs.com/vscode-img/20220406170451.png" alt="20220406170451"><br><img src="https://yuki-picgo-img.oss-cn-beijing.aliyuncs.com/vscode-img/20220406170620.png" alt="20220406170620"><br>Project template记得选web application</p><p><img src="https://yuki-picgo-img.oss-cn-beijing.aliyuncs.com/vscode-img/20220406171436.png" alt="20220406171436"><br>上面有个小点</p><p><img src="https://yuki-picgo-img.oss-cn-beijing.aliyuncs.com/vscode-img/20220406172121.png" alt="20220406172121"></p><p><img src="https://yuki-picgo-img.oss-cn-beijing.aliyuncs.com/vscode-img/20220406172248.png" alt="20220406172248"><br><img src="https://yuki-picgo-img.oss-cn-beijing.aliyuncs.com/vscode-img/20220406172609.png" alt="20220406172609"></p><h2 id="忘记勾选web-application"><a href="#忘记勾选web-application" class="headerlink" title="忘记勾选web application"></a>忘记勾选web application</h2><p>选中之后点击左上角<code>file</code> 、<code>Project Structure..</code><br><img src="https://yuki-picgo-img.oss-cn-beijing.aliyuncs.com/vscode-img/20220406174814.png" alt="20220406174814"></p><h2 id="导入别人的项目也没有蓝色小点"><a href="#导入别人的项目也没有蓝色小点" class="headerlink" title="导入别人的项目也没有蓝色小点"></a>导入别人的项目也没有蓝色小点</h2><p>web项目需要部署到tomcat里去（部署包），这个部署包称为Artifact<br><img src="https://yuki-picgo-img.oss-cn-beijing.aliyuncs.com/vscode-img/20220406211543.png" alt="20220406211543"><br><img src="https://yuki-picgo-img.oss-cn-beijing.aliyuncs.com/vscode-img/20220406211615.png" alt="20220406211615"><br><img src="https://yuki-picgo-img.oss-cn-beijing.aliyuncs.com/vscode-img/20220406175001.png" alt="20220406175001"></p><h2 id="JDBC内容"><a href="#JDBC内容" class="headerlink" title="JDBC内容"></a>JDBC内容</h2><p><img src="https://yuki-picgo-img.oss-cn-beijing.aliyuncs.com/vscode-img/20220406215032.png" alt="20220406215032"></p><h3 id="BaseDAO"><a href="#BaseDAO" class="headerlink" title="BaseDAO"></a><code>BaseDAO</code></h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">package</span> com.yuki.demo07javawebbegin.fruit.dao.base;<span class="hljs-comment">//路径</span><br><br><span class="hljs-keyword">import</span> java.lang.reflect.Field;<br><span class="hljs-keyword">import</span> java.lang.reflect.ParameterizedType;<br><span class="hljs-keyword">import</span> java.lang.reflect.Type;<br><span class="hljs-keyword">import</span> java.sql.*;<br><span class="hljs-keyword">import</span> java.util.ArrayList;<br><span class="hljs-keyword">import</span> java.util.List;<br><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">abstract</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">BaseDAO</span>&lt;T&gt; &#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">final</span> <span class="hljs-type">String</span> <span class="hljs-variable">DRIVER</span> <span class="hljs-operator">=</span> <span class="hljs-string">&quot;com.mysql.jdbc.Driver&quot;</span> ;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">final</span> <span class="hljs-type">String</span> <span class="hljs-variable">URL</span> <span class="hljs-operator">=</span> <span class="hljs-string">&quot;jdbc:mysql://localhost:3306/fruitdb?useUnicode=true&amp;characterEncoding=utf-8&amp;useSSL=false&quot;</span>;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">final</span> <span class="hljs-type">String</span> <span class="hljs-variable">USER</span> <span class="hljs-operator">=</span> <span class="hljs-string">&quot;root&quot;</span>;<span class="hljs-comment">//数据库用户名</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">final</span> <span class="hljs-type">String</span> <span class="hljs-variable">PWD</span> <span class="hljs-operator">=</span> <span class="hljs-string">&quot;109372&quot;</span> ;<span class="hljs-comment">//数据库密码</span><br><br>    <span class="hljs-keyword">protected</span> Connection conn ;<br>    <span class="hljs-keyword">protected</span> PreparedStatement psmt ;<br>    <span class="hljs-keyword">protected</span> ResultSet rs ;<br><br>    <span class="hljs-comment">//T的Class对象</span><br>    <span class="hljs-keyword">private</span> Class entityClass ;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-title function_">BaseDAO</span><span class="hljs-params">()</span>&#123;<br>        <span class="hljs-comment">//getClass() 获取Class对象，当前我们执行的是new FruitDAOImpl() , 创建的是FruitDAOImpl的实例</span><br>        <span class="hljs-comment">//那么子类构造方法内部首先会调用父类（BaseDAO）的无参构造方法</span><br>        <span class="hljs-comment">//因此此处的getClass()会被执行，但是getClass获取的是FruitDAOImpl的Class</span><br>        <span class="hljs-comment">//所以getGenericSuperclass()获取到的是BaseDAO的Class</span><br>        <span class="hljs-type">Type</span> <span class="hljs-variable">genericType</span> <span class="hljs-operator">=</span> getClass().getGenericSuperclass();<br>        <span class="hljs-comment">//ParameterizedType 参数化类型</span><br>        Type[] actualTypeArguments = ((ParameterizedType) genericType).getActualTypeArguments();<br>        <span class="hljs-comment">//获取到的&lt;T&gt;中的T的真实的类型</span><br>        <span class="hljs-type">Type</span> <span class="hljs-variable">actualType</span> <span class="hljs-operator">=</span> actualTypeArguments[<span class="hljs-number">0</span>];<br>        <span class="hljs-keyword">try</span> &#123;<br>            entityClass = Class.forName(actualType.getTypeName());<br>        &#125; <span class="hljs-keyword">catch</span> (ClassNotFoundException e) &#123;<br>            e.printStackTrace();<br>        &#125;<br>    &#125;<br><br>    <span class="hljs-keyword">protected</span> Connection <span class="hljs-title function_">getConn</span><span class="hljs-params">()</span>&#123;<br>        <span class="hljs-keyword">try</span> &#123;<br>            <span class="hljs-comment">//1.加载驱动</span><br>            Class.forName(DRIVER);<br>            <span class="hljs-comment">//2.通过驱动管理器获取连接对象</span><br>            <span class="hljs-keyword">return</span> DriverManager.getConnection(URL, USER, PWD);<br>        &#125; <span class="hljs-keyword">catch</span> (ClassNotFoundException | SQLException e) &#123;<br>            e.printStackTrace();<br>        &#125;<br>        <span class="hljs-keyword">return</span> <span class="hljs-literal">null</span> ;<br>    &#125;<br><br>    <span class="hljs-keyword">protected</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">close</span><span class="hljs-params">(ResultSet rs , PreparedStatement psmt , Connection conn)</span>&#123;<br>        <span class="hljs-keyword">try</span> &#123;<br>            <span class="hljs-keyword">if</span> (rs != <span class="hljs-literal">null</span>) &#123;<br>                rs.close();<br>            &#125;<br>            <span class="hljs-keyword">if</span>(psmt!=<span class="hljs-literal">null</span>)&#123;<br>                psmt.close();<br>            &#125;<br>            <span class="hljs-keyword">if</span>(conn!=<span class="hljs-literal">null</span> &amp;&amp; !conn.isClosed())&#123;<br>                conn.close();<br>            &#125;<br>        &#125; <span class="hljs-keyword">catch</span> (SQLException e) &#123;<br>            e.printStackTrace();<br>        &#125;<br>    &#125;<br><br>    <span class="hljs-comment">//给预处理命令对象设置参数</span><br>    <span class="hljs-keyword">private</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">setParams</span><span class="hljs-params">(PreparedStatement psmt , Object... params)</span> <span class="hljs-keyword">throws</span> SQLException &#123;<br>        <span class="hljs-keyword">if</span>(params!=<span class="hljs-literal">null</span> &amp;&amp; params.length&gt;<span class="hljs-number">0</span>)&#123;<br>            <span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> <span class="hljs-variable">i</span> <span class="hljs-operator">=</span> <span class="hljs-number">0</span>; i &lt; params.length; i++) &#123;<br>                psmt.setObject(i+<span class="hljs-number">1</span>,params[i]);<br>            &#125;<br>        &#125;<br>    &#125;<br><br>    <span class="hljs-comment">//执行更新，返回影响行数</span><br>    <span class="hljs-keyword">protected</span> <span class="hljs-type">int</span> <span class="hljs-title function_">executeUpdate</span><span class="hljs-params">(String sql , Object... params)</span>&#123;<br>        <span class="hljs-type">boolean</span> <span class="hljs-variable">insertFlag</span> <span class="hljs-operator">=</span> <span class="hljs-literal">false</span> ;<br>        insertFlag = sql.trim().toUpperCase().startsWith(<span class="hljs-string">&quot;INSERT&quot;</span>);<br>        <span class="hljs-keyword">try</span> &#123;<br>            conn = getConn();<br>            <span class="hljs-keyword">if</span>(insertFlag)&#123;<br>                psmt = conn.prepareStatement(sql,Statement.RETURN_GENERATED_KEYS);<br>            &#125;<span class="hljs-keyword">else</span> &#123;<br>                psmt = conn.prepareStatement(sql);<br>            &#125;<br>            setParams(psmt,params);<br>            <span class="hljs-type">int</span> <span class="hljs-variable">count</span> <span class="hljs-operator">=</span> psmt.executeUpdate() ;<br><br>            rs = psmt.getGeneratedKeys();<br>            <span class="hljs-keyword">if</span>(rs.next())&#123;<br>                <span class="hljs-keyword">return</span> ((Long)rs.getLong(<span class="hljs-number">1</span>)).intValue();<br>            &#125;<br>            <span class="hljs-keyword">return</span> count ;<br>        &#125; <span class="hljs-keyword">catch</span> (SQLException e) &#123;<br>            e.printStackTrace();<br>        &#125;<span class="hljs-keyword">finally</span> &#123;<br>            close(rs,psmt,conn);<br>        &#125;<br>        <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>    &#125;<br><br>    <span class="hljs-comment">//通过反射技术给obj对象的property属性赋propertyValue值</span><br>    <span class="hljs-keyword">private</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">setValue</span><span class="hljs-params">(Object obj ,  String property , Object propertyValue)</span>&#123;<br>        <span class="hljs-type">Class</span> <span class="hljs-variable">clazz</span> <span class="hljs-operator">=</span> obj.getClass();<br>        <span class="hljs-keyword">try</span> &#123;<br>            <span class="hljs-comment">//获取property这个字符串对应的属性名 ， 比如 &quot;fid&quot;  去找 obj对象中的 fid 属性</span><br>            <span class="hljs-type">Field</span> <span class="hljs-variable">field</span> <span class="hljs-operator">=</span> clazz.getDeclaredField(property);<br>            <span class="hljs-keyword">if</span>(field!=<span class="hljs-literal">null</span>)&#123;<br>                field.setAccessible(<span class="hljs-literal">true</span>);<br>                field.set(obj,propertyValue);<br>            &#125;<br>        &#125; <span class="hljs-keyword">catch</span> (NoSuchFieldException | IllegalAccessException e) &#123;<br>            e.printStackTrace();<br>        &#125;<br>    &#125;<br><br>    <span class="hljs-comment">//执行复杂查询，返回例如统计结果</span><br>    <span class="hljs-keyword">protected</span> Object[] executeComplexQuery(String sql , Object... params)&#123;<br>        <span class="hljs-keyword">try</span> &#123;<br>            conn = getConn() ;<br>            psmt = conn.prepareStatement(sql);<br>            setParams(psmt,params);<br>            rs = psmt.executeQuery();<br><br>            <span class="hljs-comment">//通过rs可以获取结果集的元数据</span><br>            <span class="hljs-comment">//元数据：描述结果集数据的数据 , 简单讲，就是这个结果集有哪些列，什么类型等等</span><br><br>            <span class="hljs-type">ResultSetMetaData</span> <span class="hljs-variable">rsmd</span> <span class="hljs-operator">=</span> rs.getMetaData();<br>            <span class="hljs-comment">//获取结果集的列数</span><br>            <span class="hljs-type">int</span> <span class="hljs-variable">columnCount</span> <span class="hljs-operator">=</span> rsmd.getColumnCount();<br>            Object[] columnValueArr = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Object</span>[columnCount];<br>            <span class="hljs-comment">//6.解析rs</span><br>            <span class="hljs-keyword">if</span>(rs.next())&#123;<br>                <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> <span class="hljs-variable">i</span> <span class="hljs-operator">=</span> <span class="hljs-number">0</span> ; i&lt;columnCount;i++)&#123;<br>                    <span class="hljs-type">Object</span> <span class="hljs-variable">columnValue</span> <span class="hljs-operator">=</span> rs.getObject(i+<span class="hljs-number">1</span>);     <span class="hljs-comment">//33    苹果      5</span><br>                    columnValueArr[i]=columnValue;<br>                &#125;<br>                <span class="hljs-keyword">return</span> columnValueArr ;<br>            &#125;<br>        &#125; <span class="hljs-keyword">catch</span> (SQLException e) &#123;<br>            e.printStackTrace();<br>        &#125; <span class="hljs-keyword">finally</span> &#123;<br>            close(rs,psmt,conn);<br>        &#125;<br>        <span class="hljs-keyword">return</span> <span class="hljs-literal">null</span> ;<br>    &#125;<br><br>    <span class="hljs-comment">//执行查询，返回单个实体对象</span><br>    <span class="hljs-keyword">protected</span> T <span class="hljs-title function_">load</span><span class="hljs-params">(String sql , Object... params)</span>&#123;<br>        <span class="hljs-keyword">try</span> &#123;<br>            conn = getConn() ;<br>            psmt = conn.prepareStatement(sql);<br>            setParams(psmt,params);<br>            rs = psmt.executeQuery();<br><br>            <span class="hljs-comment">//通过rs可以获取结果集的元数据</span><br>            <span class="hljs-comment">//元数据：描述结果集数据的数据 , 简单讲，就是这个结果集有哪些列，什么类型等等</span><br><br>            <span class="hljs-type">ResultSetMetaData</span> <span class="hljs-variable">rsmd</span> <span class="hljs-operator">=</span> rs.getMetaData();<br>            <span class="hljs-comment">//获取结果集的列数</span><br>            <span class="hljs-type">int</span> <span class="hljs-variable">columnCount</span> <span class="hljs-operator">=</span> rsmd.getColumnCount();<br>            <span class="hljs-comment">//6.解析rs</span><br>            <span class="hljs-keyword">if</span>(rs.next())&#123;<br>                <span class="hljs-type">T</span> <span class="hljs-variable">entity</span> <span class="hljs-operator">=</span> (T)entityClass.newInstance();<br><br>                <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> <span class="hljs-variable">i</span> <span class="hljs-operator">=</span> <span class="hljs-number">0</span> ; i&lt;columnCount;i++)&#123;<br>                    <span class="hljs-type">String</span> <span class="hljs-variable">columnName</span> <span class="hljs-operator">=</span> rsmd.getColumnName(i+<span class="hljs-number">1</span>);            <span class="hljs-comment">//fid   fname   price</span><br>                    <span class="hljs-type">Object</span> <span class="hljs-variable">columnValue</span> <span class="hljs-operator">=</span> rs.getObject(i+<span class="hljs-number">1</span>);     <span class="hljs-comment">//33    苹果      5</span><br>                    setValue(entity,columnName,columnValue);<br>                &#125;<br>                <span class="hljs-keyword">return</span> entity ;<br>            &#125;<br>        &#125; <span class="hljs-keyword">catch</span> (SQLException e) &#123;<br>            e.printStackTrace();<br>        &#125; <span class="hljs-keyword">catch</span> (IllegalAccessException e) &#123;<br>            e.printStackTrace();<br>        &#125; <span class="hljs-keyword">catch</span> (InstantiationException e) &#123;<br>            e.printStackTrace();<br>        &#125; <span class="hljs-keyword">finally</span> &#123;<br>            close(rs,psmt,conn);<br>        &#125;<br>        <span class="hljs-keyword">return</span> <span class="hljs-literal">null</span> ;<br>    &#125;<br><br><br>    <span class="hljs-comment">//执行查询，返回List</span><br>    <span class="hljs-keyword">protected</span> List&lt;T&gt; <span class="hljs-title function_">executeQuery</span><span class="hljs-params">(String sql , Object... params)</span>&#123;<br>        List&lt;T&gt; list = <span class="hljs-keyword">new</span> <span class="hljs-title class_">ArrayList</span>&lt;&gt;();<br>        <span class="hljs-keyword">try</span> &#123;<br>            conn = getConn() ;<br>            psmt = conn.prepareStatement(sql);<br>            setParams(psmt,params);<br>            rs = psmt.executeQuery();<br><br>            <span class="hljs-comment">//通过rs可以获取结果集的元数据</span><br>            <span class="hljs-comment">//元数据：描述结果集数据的数据 , 简单讲，就是这个结果集有哪些列，什么类型等等</span><br><br>            <span class="hljs-type">ResultSetMetaData</span> <span class="hljs-variable">rsmd</span> <span class="hljs-operator">=</span> rs.getMetaData();<br>            <span class="hljs-comment">//获取结果集的列数</span><br>            <span class="hljs-type">int</span> <span class="hljs-variable">columnCount</span> <span class="hljs-operator">=</span> rsmd.getColumnCount();<br>            <span class="hljs-comment">//6.解析rs</span><br>            <span class="hljs-keyword">while</span>(rs.next())&#123;<br>                <span class="hljs-type">T</span> <span class="hljs-variable">entity</span> <span class="hljs-operator">=</span> (T)entityClass.newInstance();<br><br>                <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> <span class="hljs-variable">i</span> <span class="hljs-operator">=</span> <span class="hljs-number">0</span> ; i&lt;columnCount;i++)&#123;<br>                    <span class="hljs-type">String</span> <span class="hljs-variable">columnName</span> <span class="hljs-operator">=</span> rsmd.getColumnName(i+<span class="hljs-number">1</span>);            <span class="hljs-comment">//fid   fname   price</span><br>                    <span class="hljs-type">Object</span> <span class="hljs-variable">columnValue</span> <span class="hljs-operator">=</span> rs.getObject(i+<span class="hljs-number">1</span>);     <span class="hljs-comment">//33    苹果      5</span><br>                    setValue(entity,columnName,columnValue);<br>                &#125;<br>                list.add(entity);<br>            &#125;<br>        &#125; <span class="hljs-keyword">catch</span> (SQLException e) &#123;<br>            e.printStackTrace();<br>        &#125; <span class="hljs-keyword">catch</span> (IllegalAccessException e) &#123;<br>            e.printStackTrace();<br>        &#125; <span class="hljs-keyword">catch</span> (InstantiationException e) &#123;<br>            e.printStackTrace();<br>        &#125; <span class="hljs-keyword">finally</span> &#123;<br>            close(rs,psmt,conn);<br>        &#125;<br>        <span class="hljs-keyword">return</span> list ;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="FruitDAO"><a href="#FruitDAO" class="headerlink" title="FruitDAO"></a>FruitDAO</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">package</span> com.yuki.demo07javawebbegin.fruit.dao;<span class="hljs-comment">//路径</span><br><br><span class="hljs-keyword">import</span> com.yuki.demo07javawebbegin.fruit.pojo.Fruit;<span class="hljs-comment">//路径</span><br><span class="hljs-keyword">import</span> java.util.List;<br><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">interface</span> <span class="hljs-title class_">FruitDAO</span> &#123;<br>    <span class="hljs-comment">//查询库存列表</span><br>    List&lt;Fruit&gt; <span class="hljs-title function_">getFruitList</span><span class="hljs-params">()</span>;<br><br>    <span class="hljs-comment">//新增库存</span><br>    <span class="hljs-type">boolean</span> <span class="hljs-title function_">addFruit</span><span class="hljs-params">(Fruit fruit)</span>;<br><br>    <span class="hljs-comment">//修改库存</span><br>    <span class="hljs-type">boolean</span> <span class="hljs-title function_">updateFruit</span><span class="hljs-params">(Fruit fruit)</span>;<br><br>    <span class="hljs-comment">//根据名称查询特定库存</span><br>    Fruit <span class="hljs-title function_">getFruitByFname</span><span class="hljs-params">(String fname)</span>;<br><br>    <span class="hljs-comment">//删除特定库存记录</span><br>    <span class="hljs-type">boolean</span> <span class="hljs-title function_">delFruit</span><span class="hljs-params">(String fname)</span>;<br>&#125;<br><br></code></pre></td></tr></table></figure><h3 id="Fruit"><a href="#Fruit" class="headerlink" title="Fruit"></a>Fruit</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">package</span> com.yuki.demo07javawebbegin.fruit.pojo;<span class="hljs-comment">//路径</span><br><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">Fruit</span> &#123;<br>    <span class="hljs-keyword">private</span> Integer fid ;<br>    <span class="hljs-keyword">private</span> String fname ;<br>    <span class="hljs-keyword">private</span> Integer price ;<br>    <span class="hljs-keyword">private</span> Integer fcount ;<br>    <span class="hljs-keyword">private</span> String remark ;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-title function_">Fruit</span><span class="hljs-params">()</span>&#123;&#125;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-title function_">Fruit</span><span class="hljs-params">(Integer fid, String fname, Integer price, Integer fcount, String remark)</span> &#123;<br>        <span class="hljs-built_in">this</span>.fid = fid;<br>        <span class="hljs-built_in">this</span>.fname = fname;<br>        <span class="hljs-built_in">this</span>.price = price;<br>        <span class="hljs-built_in">this</span>.fcount = fcount;<br>        <span class="hljs-built_in">this</span>.remark = remark;<br>    &#125;<br><br>    <span class="hljs-keyword">public</span> Integer <span class="hljs-title function_">getFid</span><span class="hljs-params">()</span> &#123;<br>        <span class="hljs-keyword">return</span> fid;<br>    &#125;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">setFid</span><span class="hljs-params">(Integer fid)</span> &#123;<br>        <span class="hljs-built_in">this</span>.fid = fid;<br>    &#125;<br><br>    <span class="hljs-keyword">public</span> String <span class="hljs-title function_">getFname</span><span class="hljs-params">()</span> &#123;<br>        <span class="hljs-keyword">return</span> fname;<br>    &#125;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">setFname</span><span class="hljs-params">(String fname)</span> &#123;<br>        <span class="hljs-built_in">this</span>.fname = fname;<br>    &#125;<br><br>    <span class="hljs-keyword">public</span> Integer <span class="hljs-title function_">getPrice</span><span class="hljs-params">()</span> &#123;<br>        <span class="hljs-keyword">return</span> price;<br>    &#125;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">setPrice</span><span class="hljs-params">(Integer price)</span> &#123;<br>        <span class="hljs-built_in">this</span>.price = price;<br>    &#125;<br><br>    <span class="hljs-keyword">public</span> Integer <span class="hljs-title function_">getFcount</span><span class="hljs-params">()</span> &#123;<br>        <span class="hljs-keyword">return</span> fcount;<br>    &#125;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">setFcount</span><span class="hljs-params">(Integer fcount)</span> &#123;<br>        <span class="hljs-built_in">this</span>.fcount = fcount;<br>    &#125;<br><br>    <span class="hljs-keyword">public</span> String <span class="hljs-title function_">getRemark</span><span class="hljs-params">()</span> &#123;<br>        <span class="hljs-keyword">return</span> remark;<br>    &#125;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">setRemark</span><span class="hljs-params">(String remark)</span> &#123;<br>        <span class="hljs-built_in">this</span>.remark = remark;<br>    &#125;<br><br>    <span class="hljs-meta">@Override</span><br>    <span class="hljs-keyword">public</span> String <span class="hljs-title function_">toString</span><span class="hljs-params">()</span> &#123;<br>        <span class="hljs-keyword">return</span> fid + <span class="hljs-string">&quot;\t\t&quot;</span> + fname + <span class="hljs-string">&quot;\t\t&quot;</span> + price +<span class="hljs-string">&quot;\t\t&quot;</span> + fcount +<span class="hljs-string">&quot;\t\t&quot;</span> + remark ;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="AddServlet"><a href="#AddServlet" class="headerlink" title="AddServlet"></a>AddServlet</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">package</span> com.yuki.demo07javawebbegin.servlets;<span class="hljs-comment">//路径</span><br><br><span class="hljs-keyword">import</span> com.yuki.demo07javawebbegin.fruit.dao.FruitDAO;/路径<br><span class="hljs-keyword">import</span> com.yuki.demo07javawebbegin.fruit.dao.impl.FruitDAOImpl;<span class="hljs-comment">//路径</span><br><span class="hljs-keyword">import</span> com.yuki.demo07javawebbegin.fruit.pojo.Fruit;<span class="hljs-comment">//路径</span><br><br><span class="hljs-keyword">import</span> javax.servlet.ServletException;<br><span class="hljs-keyword">import</span> javax.servlet.http.HttpServlet;<br><span class="hljs-keyword">import</span> javax.servlet.http.HttpServletRequest;<br><span class="hljs-keyword">import</span> javax.servlet.http.HttpServletResponse;<br><span class="hljs-keyword">import</span> java.io.IOException;<br><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">AddServlet</span> <span class="hljs-keyword">extends</span> <span class="hljs-title class_">HttpServlet</span> <span class="hljs-comment">//获取表单中数据</span><br>&#123;<br>    <span class="hljs-meta">@Override</span><br>    <span class="hljs-keyword">protected</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">doPost</span><span class="hljs-params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="hljs-keyword">throws</span> ServletException, IOException &#123;<br><br>        req.setCharacterEncoding(<span class="hljs-string">&quot;UTF-8&quot;</span>);<span class="hljs-comment">//解决中文乱码</span><br>        <span class="hljs-comment">//idea中写dopost自动生成dopost方法</span><br>        <span class="hljs-comment">//super.doPost(req, resp);</span><br>        <span class="hljs-type">String</span> <span class="hljs-variable">fname</span> <span class="hljs-operator">=</span>  req.getParameter(<span class="hljs-string">&quot;fname&quot;</span>);<br>        <span class="hljs-type">String</span> <span class="hljs-variable">priceStr</span> <span class="hljs-operator">=</span> req.getParameter(<span class="hljs-string">&quot;price&quot;</span>);<br>        <span class="hljs-type">Integer</span> <span class="hljs-variable">price</span> <span class="hljs-operator">=</span> Integer.parseInt(priceStr); <span class="hljs-comment">//发来只能是字符串，强转成数字</span><br>        <span class="hljs-type">String</span> <span class="hljs-variable">fcountStr</span> <span class="hljs-operator">=</span> req.getParameter(<span class="hljs-string">&quot;fcount&quot;</span>);<br>        <span class="hljs-type">Integer</span> <span class="hljs-variable">fcount</span> <span class="hljs-operator">=</span> Integer.parseInt(fcountStr);<br>        <span class="hljs-type">String</span> <span class="hljs-variable">remark</span> <span class="hljs-operator">=</span> req.getParameter(<span class="hljs-string">&quot;remark&quot;</span>);<br>        <span class="hljs-comment">//快捷键soutv</span><br><span class="hljs-comment">/*      System.out.println(&quot;remark = &quot; + remark);</span><br><span class="hljs-comment">        System.out.println(&quot;fcount = &quot; + fcount);</span><br><span class="hljs-comment">        System.out.println(&quot;price = &quot; + price);</span><br><span class="hljs-comment">        System.out.println(&quot;fname = &quot; + fname);*/</span><br>        <span class="hljs-type">FruitDAO</span> <span class="hljs-variable">fruitDAO</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">FruitDAOImpl</span>();<br>       <span class="hljs-type">boolean</span> <span class="hljs-variable">flag</span> <span class="hljs-operator">=</span> fruitDAO.addFruit(<span class="hljs-keyword">new</span> <span class="hljs-title class_">Fruit</span>(<span class="hljs-number">0</span>,fname,price,fcount,remark));<span class="hljs-comment">//判断是否添加成功</span><br>        System.out.println(flag ?<span class="hljs-string">&quot;添加成功！&quot;</span> : <span class="hljs-string">&quot;添加失败！&quot;</span>);<span class="hljs-comment">//控制台打印结果</span><br>    &#125;<br>&#125;<br><br></code></pre></td></tr></table></figure><h2 id="接收表单数据"><a href="#接收表单数据" class="headerlink" title="接收表单数据"></a>接收表单数据</h2><p>创建AddServlet</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">AddServlet</span> <span class="hljs-keyword">extends</span> <span class="hljs-title class_">HttpServlet</span> <span class="hljs-comment">//获取表单中数据</span><br>&#123;<br>    <span class="hljs-meta">@Override</span><br>    <span class="hljs-keyword">protected</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">doPost</span><span class="hljs-params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="hljs-keyword">throws</span> ServletException, IOException &#123;<br>        <span class="hljs-comment">//idea中写dopost自动生成dopost方法</span><br>        <span class="hljs-comment">//super.doPost(req, resp);</span><br>        <span class="hljs-type">String</span> <span class="hljs-variable">fname</span> <span class="hljs-operator">=</span>  req.getParameter(<span class="hljs-string">&quot;fname&quot;</span>);<br>        <span class="hljs-type">String</span> <span class="hljs-variable">priceStr</span> <span class="hljs-operator">=</span> req.getParameter(<span class="hljs-string">&quot;price&quot;</span>);<br>        <span class="hljs-type">Integer</span> <span class="hljs-variable">price</span> <span class="hljs-operator">=</span> Integer.parseInt(priceStr); <span class="hljs-comment">//发来只能是字符串，强转成数字</span><br>        <span class="hljs-type">String</span> <span class="hljs-variable">fcountStr</span> <span class="hljs-operator">=</span> req.getParameter(<span class="hljs-string">&quot;fcount&quot;</span>);<br>        <span class="hljs-type">Integer</span> <span class="hljs-variable">fcount</span> <span class="hljs-operator">=</span> Integer.parseInt(fcountStr);<br>        <span class="hljs-type">String</span> <span class="hljs-variable">remark</span> <span class="hljs-operator">=</span> req.getParameter(<span class="hljs-string">&quot;remark&quot;</span>);<br>        <span class="hljs-comment">//快捷键soutv</span><br>        System.out.println(<span class="hljs-string">&quot;remark = &quot;</span> + remark);<br>        System.out.println(<span class="hljs-string">&quot;fcount = &quot;</span> + fcount);<br>        System.out.println(<span class="hljs-string">&quot;price = &quot;</span> + price);<br>        System.out.println(<span class="hljs-string">&quot;fname = &quot;</span> + fname);<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>然后编写web.xml</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">servlet</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">servlet-name</span>&gt;</span>AddServlet<span class="hljs-tag">&lt;/<span class="hljs-name">servlet-name</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">servlet-class</span>&gt;</span><br>        com.yuki.demo07javawebbegin.servlets.AddServlet<br>    <span class="hljs-tag">&lt;/<span class="hljs-name">servlet-class</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">servlet</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">servlet-mapping</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">servlet-name</span>&gt;</span>AddServlet<span class="hljs-tag">&lt;/<span class="hljs-name">servlet-name</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">url-pattern</span>&gt;</span>/add<span class="hljs-tag">&lt;/<span class="hljs-name">url-pattern</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">servlet-mapping</span>&gt;</span><br></code></pre></td></tr></table></figure><p><img src="https://yuki-picgo-img.oss-cn-beijing.aliyuncs.com/vscode-img/20220406182511.png" alt="20220406182511"><br><img src="https://yuki-picgo-img.oss-cn-beijing.aliyuncs.com/vscode-img/20220406182708.png" alt="20220406182708"></p><ol><li>用户发请求，action&#x3D;add</li><li>项目中，web.xml中找到url-pattern &#x3D; &#x2F;add   -&gt; 第14行</li><li>找第13行的servlet-name &#x3D; AddServlet</li><li>找和servlet-mapping中servlet-name一致的servlet ， 找到第7行</li><li>找第8行的servlet-class -&gt;  com.yuki.demo07javawebbegin.servlets.AddServlet</li><li>用户发送的是post请求（method&#x3D;post） ， 因此 tomcat会执行AddServlet中的doPost方法</li></ol><p><img src="https://yuki-picgo-img.oss-cn-beijing.aliyuncs.com/vscode-img/20220406183542.png" alt="20220406183542"><br><img src="https://yuki-picgo-img.oss-cn-beijing.aliyuncs.com/vscode-img/20220406183553.png" alt="20220406183553"><br><img src="https://yuki-picgo-img.oss-cn-beijing.aliyuncs.com/vscode-img/20220406183617.png" alt="20220406183617"></p><h2 id="idea中空文件夹自动合并"><a href="#idea中空文件夹自动合并" class="headerlink" title="idea中空文件夹自动合并"></a>idea中空文件夹自动合并</h2><p><img src="https://yuki-picgo-img.oss-cn-beijing.aliyuncs.com/vscode-img/20220406202338.png" alt="20220406202338"></p><h3 id="错误"><a href="#错误" class="headerlink" title="错误"></a>错误</h3><p><img src="https://yuki-picgo-img.oss-cn-beijing.aliyuncs.com/vscode-img/20220406205148.png" alt="20220406205148"><br>解决方法<br><img src="https://yuki-picgo-img.oss-cn-beijing.aliyuncs.com/vscode-img/20220406205752.png" alt="20220406205752"><br>添加MySQL依赖，数据库连接账号密码记得改成自己的<br><img src="https://yuki-picgo-img.oss-cn-beijing.aliyuncs.com/vscode-img/20220406205820.png" alt="20220406205820"></p><h2 id="表单内容中文乱码"><a href="#表单内容中文乱码" class="headerlink" title="表单内容中文乱码"></a>表单内容中文乱码</h2><p><img src="https://yuki-picgo-img.oss-cn-beijing.aliyuncs.com/vscode-img/20220406210029.png" alt="20220406210029"><br><img src="https://yuki-picgo-img.oss-cn-beijing.aliyuncs.com/vscode-img/20220406210037.png" alt="20220406210037"><br><img src="https://yuki-picgo-img.oss-cn-beijing.aliyuncs.com/vscode-img/20220406210049.png" alt="20220406210049"><br>解决方法<br>     &#x2F;&#x2F;get方式目前不需要设置编码（基于tomcat8）<br>        &#x2F;&#x2F;如果是get请求发送的中文数据，转码稍微有点麻烦（tomcat8之前）<br>        String fname &#x3D; request.getParameter(“fname”);<br>        &#x2F;&#x2F;1.将字符串打散成字节数组<br>        byte[] bytes &#x3D; fname.getBytes(“ISO-8859-1”);<br>        &#x2F;&#x2F;2.将字节数组按照设定的编码重新组装成字符串<br>        fname &#x3D; new String(bytes,”UTF-8”);</p><p><img src="https://yuki-picgo-img.oss-cn-beijing.aliyuncs.com/vscode-img/20220406210316.png" alt="20220406210316"></p><h2 id="review"><a href="#review" class="headerlink" title="review"></a>review</h2><ol><li>新建项目 - 新建模块</li><li>在模块中添加web</li><li>创建artifact - 部署包</li><li>lib - artifact<br>先有artifact，后来才添加的mysql.jar。此时，这个jar包并没有添加到部署包中<br>那么在projectSettings中有一个Problems中会有提示的,我们点击fix选择add to…<br>另外，我们也可以直接把lib文件夹直接新建在WEB-INF下。<br>这样不好的地方是这个lib只能是当前这个moudle独享。如果有第二个moudle我们需要再次重复的新建lib。</li><li>在部署的时候，修改application Context。然后再回到server选项卡，检查URL的值。<br><img src="https://yuki-picgo-img.oss-cn-beijing.aliyuncs.com/vscode-img/20220406212420.png" alt="20220406212420"><br>URL的值指的是tomcat启动完成后自动打开你指定的浏览器，然后默认访问的网址。<br>启动后，报错404.404意味着找不到指定的资源。<br>如果我们的网址是：<a href="http://localhost:8080/pro01/">http://localhost:8080/pro01/</a> , 那么表明我们访问的是index.html.<br>我们可以通过<welcome-file-list>标签进行设置欢迎页(在tomcat的web.xml中设置，或者在自己项目的web.xml中设置)</li><li>405问题。当前请求的方法不支持。比如，我们表单method&#x3D;post , 那么Servlet必须对应doPost。否则报405错误。</li><li>空指针或者是<code>NumberFormatException</code> 。因为有价格和库存。如果价格取不到，结果你想对null进行<code>Integer.parseInt()</code>就会报错。错误的原因大部分是因为 <code>name=&quot;price&quot;</code>此处写错了，结果在Servlet端还是使用<code>request.getParameter(&quot;price&quot;)</code>去获取。</li><li><url-pattern>中以斜杠开头</li></ol><h2 id="500"><a href="#500" class="headerlink" title="500"></a>500</h2><p><img src="https://yuki-picgo-img.oss-cn-beijing.aliyuncs.com/vscode-img/20220406212908.png" alt="20220406212908"></p><p><img src="https://yuki-picgo-img.oss-cn-beijing.aliyuncs.com/vscode-img/20220406212929.png" alt="20220406212929"> </p><h2 id="p23-Day4"><a href="#p23-Day4" class="headerlink" title="p23 Day4"></a>p23 Day4</h2><ol><li><p>设置编码<br> tomcat8之前，设置编码：<br>   1)get请求方式：<br> &#x2F;&#x2F;get方式目前不需要设置编码（基于tomcat8）<br> &#x2F;&#x2F;如果是get请求发送的中文数据，转码稍微有点麻烦（tomcat8之前）<br> String fname &#x3D; request.getParameter(“fname”);<br> &#x2F;&#x2F;1.将字符串打散成字节数组<br> byte[] bytes &#x3D; fname.getBytes(“ISO-8859-1”);<br> &#x2F;&#x2F;2.将字节数组按照设定的编码重新组装成字符串<br> fname &#x3D; new String(bytes,”UTF-8”);<br>   2)post请求方式：<br> request.setCharacterEncoding(“UTF-8”);<br> tomcat8开始，设置编码，只需要针对post方式<br> request.setCharacterEncoding(“UTF-8”);<br> 注意：<br> 需要注意的是，设置编码(post)这一句代码必须在所有的获取参数动作之前</p></li><li><p>Servlet的继承关系 - 重点查看的是服务方法（service()）</p><ol><li><p>继承关系<br>   javax.servlet.Servlet接口<br>   javax.servlet.GenericServlet抽象类<br>   javax.servlet.http.HttpServlet抽象子类</p></li><li><p>相关方法<br>   javax.servlet.Servlet接口:<br> void init(config) - 初始化方法<br> void service(request,response) - 服务方法<br> void destory() - 销毁方法</p></li></ol><p>   javax.servlet.GenericServlet抽象类：<br>     void service(request,response) - 仍然是抽象的</p><p>   javax.servlet.http.HttpServlet 抽象子类：<br>     void service(request,response) - 不是抽象的<br>     1. String method &#x3D; req.getMethod(); 获取请求的方式<br>     2. 各种if判断，根据请求方式不同，决定去调用不同的do方法<br>         if (method.equals(“GET”)) {<br>             this.doGet(req,resp);<br>         } else if (method.equals(“HEAD”)) {<br>             this.doHead(req, resp);<br>         } else if (method.equals(“POST”)) {<br>             this.doPost(req, resp);<br>         } else if (method.equals(“PUT”)) {<br>     3. 在HttpServlet这个抽象类中，do方法都差不多:<br>     protected void doGet(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException {<br>         String protocol &#x3D; req.getProtocol();<br>         String msg &#x3D; lStrings.getString(“http.method_get_not_supported”);<br>         if (protocol.endsWith(“1.1”)) {<br>             resp.sendError(405, msg);<br>         } else {<br>             resp.sendError(400, msg);<br>         }<br>     }<br> 3.小结：</p><ol><li>继承关系： HttpServlet -&gt; GenericServlet -&gt; Servlet</li><li>Servlet中的核心方法： init() , service() , destroy()</li><li>服务方法： 当有请求过来时，service方法会自动响应（其实是tomcat容器调用的）<br> 在HttpServlet中我们会去分析请求的方式：到底是get、post、head还是delete等等<br> 然后再决定调用的是哪个do开头的方法<br> 那么在HttpServlet中这些do方法默认都是405的实现风格-要我们子类去实现对应的方法，否则默认会报405错误</li><li>因此，我们在新建Servlet时，我们才会去考虑请求方法，从而决定重写哪个do方法</li></ol></li><li><p>Servlet的生命周期<br> 1） 生命周期：从出生到死亡的过程就是生命周期。对应Servlet中的三个方法：init(),service(),destroy()<br> 2） 默认情况下：<br> 第一次接收请求时，这个Servlet会进行实例化(调用构造方法)、初始化(调用init())、然后服务(调用service())<br> 从第二次请求开始，每一次都是服务<br> 当容器关闭时，其中的所有的servlet实例会被销毁，调用销毁方法<br> 3） 通过案例我们发现：<br> - Servlet实例tomcat只会创建一个，所有的请求都是这个实例去响应。<br> - 默认情况下，第一次请求时，tomcat才会去实例化，初始化，然后再服务.这样的好处是什么？ 提高系统的启动速度 。 这样的缺点是什么？ 第一次请求时，耗时较长。<br> - 因此得出结论： 如果需要提高系统的启动速度，当前默认情况就是这样。如果需要提高响应速度，我们应该设置Servlet的初始化时机。<br> 4） Servlet的初始化时机：<br> - 默认是第一次接收请求时，实例化，初始化<br> - 我们可以通过<load-on-startup>来设置servlet启动的先后顺序,数字越小，启动越靠前，最小值0<br> 5） Servlet在容器中是：单例的、线程不安全的<img src="https://yuki-picgo-img.oss-cn-beijing.aliyuncs.com/vscode-img/20220406230015.png" alt="20220406230015"><br> - 单例：所有的请求都是同一个实例去响应<br> - 线程不安全：一个线程需要根据这个实例中的某个成员变量值去做逻辑判断。但是在中间某个时机，另一个线程改变了这个成员变量的值，从而导致第一个线程的执行路径发生了变化<br> - 我们已经知道了servlet是线程不安全的，给我们的启发是： 尽量的不要在servlet中定义成员变量。如果不得不定义成员变量，那么不要去：①不要去修改成员变量的值 ②不要去根据成员变量的值做一些逻辑判断</p></li><li><p>Http协议<br> 1） Http 称之为 超文本传输协议<br> 2） Http是无状态的<br> 3） Http请求响应包含两个部分：请求和响应</p><ul><li>请求：<br>请求包含三个部分： 1.请求行 ； 2.请求消息头 ； 3.请求主体<br>1)请求行包含是三个信息： 1. 请求的方式 ； 2.请求的URL ； 3.请求的协议（一般都是HTTP1.1）<br>2)请求消息头中包含了很多客户端需要告诉服务器的信息，比如：我的浏览器型号、版本、我能接收的内容的类型、我给你发的内容的类型、内容的长度等等<br>3)请求体，三种情况<br>  get方式，没有请求体，但是有一个queryString<br>  post方式，有请求体，form data<br>  json格式，有请求体，request payload</li><li>响应：<br>响应也包含三本： 1. 响应行 ； 2.响应头 ； 3.响应体<br>1)响应行包含三个信息：1.协议 2.响应状态码(200) 3.响应状态(ok)<br>2)响应头：包含了服务器的信息；服务器发送给浏览器的信息（内容的媒体类型、编码、内容长度等）<br>3)响应体：响应的实际内容（比如请求add.html页面时，响应的内容就是<html><head><body>&lt;form….）</li></ul></li><li><p>会话<br> 1） Http是无状态的<br> - HTTP 无状态 ：服务器无法判断这两次请求是同一个客户端发过来的，还是不同的客户端发过来的<br> - 无状态带来的现实问题：第一次请求是添加商品到购物车，第二次请求是结账；如果这两次请求服务器无法区分是同一个用户的，那么就会导致混乱<br> - 通过会话跟踪技术来解决无状态的问题。<br> 2） 会话跟踪技术<br> - 客户端第一次发请求给服务器，服务器获取session，获取不到，则创建新的，然后响应给客户端<br> - 下次客户端给服务器发请求时，会把sessionID带给服务器，那么服务器就能获取到了，那么服务器就判断这一次请求和上次某次请求是同一个客户端，从而能够区分开客户端<br> - 常用的API：<br>   request.getSession() -&gt; 获取当前的会话，没有则创建一个新的会话<br>   request.getSession(true) -&gt; 效果和不带参数相同<br>   request.getSession(false) -&gt; 获取当前会话，没有则返回null，不会创建新的<br><br>   session.getId() -&gt; 获取sessionID<br>   session.isNew() -&gt; 判断当前session是否是新的<br>   session.getMaxInactiveInterval() -&gt; session的非激活间隔时长，默认1800秒<br>   session.setMaxInactiveInterval()<br>   session.invalidate() -&gt; 强制性让会话立即失效<br>   ….<br> 3） session保存作用域</p><ul><li>session保存作用域是和具体的某一个session对应的</li><li>常用的API：<br>void session.setAttribute(k,v)<br>Object session.getAttribute(k)<br>void removeAttribute(k)</li></ul></li><li><p>服务器内部转发以及客户端重定向<br> 1） 服务器内部转发 : request.getRequestDispatcher(“…”).forward(request,response);</p><ul><li>一次请求响应的过程，对于客户端而言，内部经过了多少次转发，客户端是不知道的</li><li>地址栏没有变化<br> 2） 客户端重定向： response.sendRedirect(“….”);</li><li>两次请求响应的过程。客户端肯定知道请求URL有变化</li><li>地址栏有变化</li></ul></li><li><p>Thymeleaf - 视图模板技术<br> 1） 添加thymeleaf的jar包<br> 2） 新建一个Servlet类ViewBaseServlet<br> 3） 在web.xml文件中添加配置<br>- 配置前缀 view-prefix<br>- 配置后缀 view-suffix<br> 4） 使得我们的Servlet继承ViewBaseServlet</p><p> 5） 根据逻辑视图名称 得到 物理视图名称<br> &#x2F;&#x2F;此处的视图名称是 index<br> &#x2F;&#x2F;那么thymeleaf会将这个 逻辑视图名称 对应到 物理视图 名称上去<br> &#x2F;&#x2F;逻辑视图名称 ：   index<br> &#x2F;&#x2F;物理视图名称 ：   view-prefix + 逻辑视图名称 + view-suffix<br> &#x2F;&#x2F;所以真实的视图名称是：      &#x2F;       index       .html<br> super.processTemplate(“index”,request,response);<br> 6） 使用thymeleaf的标签<br>   th:if   ,  th:unless   , th:each   ,   th:text</p></li></ol><p>&#x2F;&#x2F; 200 : 正常响应<br>&#x2F;&#x2F; 404 : 找不到资源<br>&#x2F;&#x2F; 405 : 请求方式不支持<br>&#x2F;&#x2F; 500 : 服务器内部错误</p><h2 id="IDEA断点调试"><a href="#IDEA断点调试" class="headerlink" title="IDEA断点调试"></a>IDEA断点调试</h2><h2 id="thyme-leaf"><a href="#thyme-leaf" class="headerlink" title="thyme leaf"></a>thyme leaf</h2><p><img src="https://yuki-picgo-img.oss-cn-beijing.aliyuncs.com/vscode-img/20220419150228.png" alt="20220419150228"></p><ol start="7"><li>Thymeleaf - 视图模板技术<br> 1） 添加thymeleaf的jar包(maven用pom)<br> 2） 新建一个Servlet类ViewBaseServlet（用了框架会被取代）<br> 3） 在web.xml文件中添加配置<br>- 配置前缀 view-prefix<br>- 配置后缀 view-suffix<br> 4） 使得我们的Servlet继承ViewBaseServlet<br> 5） 根据逻辑视图名称 得到 物理视图名称<br> &#x2F;&#x2F;此处的视图名称是 index<br> &#x2F;&#x2F;那么thymeleaf会将这个 逻辑视图名称 对应到 物理视图 名称上去<br> &#x2F;&#x2F;逻辑视图名称 ：   index<br> &#x2F;&#x2F;物理视图名称 ：   view-prefix + 逻辑视图名称 + view-suffix<br> &#x2F;&#x2F;所以真实的视图名称是：      &#x2F;       index       .html<br> super.processTemplate(“index”,request,response);<br> 6） 使用thymeleaf的标签<br>   th:if   ,  th:unless   , th:each   ,   th:text<br><img src="https://yuki-picgo-img.oss-cn-beijing.aliyuncs.com/vscode-img/20220419161700.png" alt="20220419161700"></li></ol><h2 id="P32-pro10-fruit1-5-thymeleaf"><a href="#P32-pro10-fruit1-5-thymeleaf" class="headerlink" title="P32 pro10-fruit1.5-thymeleaf"></a>P32 pro10-fruit1.5-thymeleaf</h2><p>review:</p><ol><li><p>post提交方式下的设置编码，防止中文乱码<br>request.setCharacterEncoding(“utf-8”);<br>get提交方式，tomcat8开始，编码不需要设置<br>tomcat8之前，get方式设置比较麻烦：<br>String fname &#x3D; request.getParameter(“fname”);<br>byte[] bytes &#x3D; fname.getBytes(“iso-8859-1”);<br>fname &#x3D; new String(bytes,”UTF-8”);</p></li><li><p>Servlet继承关系以及生命周期<br>1） Servlet接口 ： init() , service() , destroy()<br>GenericServlet抽象子类： abstract service();<br>HttpServlet抽象子类：实现了service方法，在service方法内部通过request.getMethod()来判断请求的方式，<br>     然后根据请求的方式去调用内部的do方法。每一个do方法进行了简单实现，主要是如果请求方式不符合，则报405错误。<br>     目的是让我们的Servlet子类去重写对应的方法（如果重写的不对，则使用父类的405错误实现）<br>2） 生命周期：实例化、初始化、服务、销毁<br> - Tomcat负责维护Servlet实例的生命周期<br> - 每个Servlet在Tomcat容器中只有一个实例，它是线程不安全的<br> - Servlet的启动时机：<load-on-startup><br> - Servlet3.0开始支持注解: @WebServlet</p></li><li><p>HTTP协议：<br>1） 由 Request 和 Response 两部分组成<br>2） 请求包含了三部分：请求行、请求消息头、请求主体： 普通的get方式请求-query string；post方式- form data ； json格式 - request payload<br>3） 响应包含了三部分：响应行、响应消息头、响应主体</p></li><li><p>HttpSession<br>1） HttpSession ：表示 会话<br>2） 为什么需要HttpSession ， 原因是因为 Http协议是无状态的<br>3） Session保存作用域 ：一次会话范围都有效 ； void session.setAttribute(k,v) ,Object session.getAttribute(k)<br>4） 其他的API： session.getId() , session.isNew() , session.getCreationTime() , session.invalidate() 等等</p></li><li><p>服务器端转发和客户端重定向</p><ol><li>服务器端转发 ： request.getRequestDispatcher(“index.html”).forward(request,response);</li><li>客户端重定向： response.sendRedirect(“index.html”);</li></ol></li><li><p>thymeleaf的部分标签<br>1） 使用步骤： 添加jar ， 新建ViewBaseServlet(有两个方法） ， 配置两个<context-param> : view-prefix , view-suffix<br>2） 部分标签： <a href="th:if">th:if</a> , <a href="th:unless">th:unless</a> , <a href="th:each">th:each</a> , <a href="th:text">th:text</a></p></li></ol><p>今日内容：</p><ol><li><p>保存作用域<br>原始情况下，保存作用域我们可以认为有四个： page（页面级别，现在几乎不用） , request（一次请求响应范围） , session（一次会话范围） , application（整个应用程序范围）<br>1） request：一次请求响应范围<br><img src="https://yuki-picgo-img.oss-cn-beijing.aliyuncs.com/vscode-img/20220419171758.png" alt="20220419171758"><br>2） session：一次会话范围有效<br>   <img src="https://yuki-picgo-img.oss-cn-beijing.aliyuncs.com/vscode-img/20220419172739.png" alt="20220419172739"><br>3） application： 一次应用程序范围有效<br> <img src="https://yuki-picgo-img.oss-cn-beijing.aliyuncs.com/vscode-img/20220419172925.png" alt="20220419172925"></p></li><li><p>路径问题<br>1） 相对路径<br>2） 绝对路径<br><img src="https://yuki-picgo-img.oss-cn-beijing.aliyuncs.com/vscode-img/20220419173729.png" alt="20220419173729"></p></li><li><p>实现库存系统的功能</p></li></ol>]]></content>
    
    
    
    <tags>
      
      <tag>笔记</tag>
      
      <tag>javawev</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>使用阿里云OSS替换GitHub图床</title>
    <link href="/2022/04/05/%E4%BD%BF%E7%94%A8%E9%98%BF%E9%87%8C%E4%BA%91OSS%E6%9B%BF%E6%8D%A2GitHub%E5%9B%BE%E5%BA%8A/"/>
    <url>/2022/04/05/%E4%BD%BF%E7%94%A8%E9%98%BF%E9%87%8C%E4%BA%91OSS%E6%9B%BF%E6%8D%A2GitHub%E5%9B%BE%E5%BA%8A/</url>
    
    <content type="html"><![CDATA[<p>GitHub图床虽然免费，但国内访问经常图片卡顿</p><span id="more"></span><h2 id="1-购买阿里云oss对象存储服务"><a href="#1-购买阿里云oss对象存储服务" class="headerlink" title="1.购买阿里云oss对象存储服务"></a>1.购买阿里云oss对象存储服务</h2><p><img src="https://yuki-picgo-img.oss-cn-beijing.aliyuncs.com/vscode-img/20220405062349.png" alt="20220405062349"><br>40G一年只要9块钱，四舍五入等于白嫖（流量要钱</p><blockquote><p>注意有两种计费方式，一种按量计费，一种包年包月</p></blockquote><h2 id="2-新建OSS-Bucket"><a href="#2-新建OSS-Bucket" class="headerlink" title="2. 新建OSS Bucket"></a>2. 新建OSS Bucket</h2><p>不同Bucket之间独立，注意Bucket名称全网唯一，不能重复，且创建后就不能修改<br><img src="https://yuki-picgo-img.oss-cn-beijing.aliyuncs.com/vscode-img/20220405063628.png" alt="20220405063628"><br>创建好Bucket之后，点击文件管理，新建目录，随便上传一张图片，测试能不能用<br><img src="https://yuki-picgo-img.oss-cn-beijing.aliyuncs.com/vscode-img/20220405064358.png" alt="20220405064358"></p><blockquote><p>链接输入到浏览器中默认是下载而不是查看，不过写markdown时并不影响</p></blockquote><p>手头刚好有域名的话可以进行如下操作</p><h2 id="3-配置OSS资源访问域名"><a href="#3-配置OSS资源访问域名" class="headerlink" title="3. 配置OSS资源访问域名"></a>3. 配置OSS资源访问域名</h2><p>弄一个子域名作为自己的静态资源访问<br><img src="https://yuki-picgo-img.oss-cn-beijing.aliyuncs.com/vscode-img/20220405065454.png" alt="20220405065454"></p><p>申请一个免费的证书，用来做https访问（不申请也行）<img src="https://yuki-picgo-img.oss-cn-beijing.aliyuncs.com/vscode-img/20220405071023.png" alt="20220405071023"><br>阿里云域名不需要下证书，后面可以自动识别</p><p><strong>OSS控制台</strong></p><ol><li>单击Bucket列表，然后单击目标Bucket名称</li><li>单击传输管理 &gt; 域名管理 </li><li>单击绑定域名</li><li>在绑定域名面板，输入要绑定的域名。</li><li>添加好域名后将刚刚下载的证书添加进去，阿里云证书会自动感应，不用添加，选择一下证书名称就好，如果没有名称的手动添加一下</li></ol><h2 id="4-配置picGO"><a href="#4-配置picGO" class="headerlink" title="4. 配置picGO"></a>4. 配置picGO</h2><p><strong>accesskeyID</strong>和<strong>accesskeySecret</strong>将鼠标悬停在阿里云右上角头像上，点击Accesskey管理进行创建<br><img src="https://yuki-picgo-img.oss-cn-beijing.aliyuncs.com/vscode-img/20220405073925.png" alt="20220405073925"></p><h2 id="5-更换图床"><a href="#5-更换图床" class="headerlink" title="5.更换图床"></a>5.更换图床</h2><p>将GitHub上的图片全下到本地，上传到阿里云oss，然后全部替换图片链接前缀。<br><img src="https://yuki-picgo-img.oss-cn-beijing.aliyuncs.com/vscode-img/20220405080333.png" alt="20220405080333"></p>]]></content>
    
    
    
    <tags>
      
      <tag>hexo</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>将HEXO博客部署到个人域名上</title>
    <link href="/2022/04/04/%E5%B0%86HEXO%E5%8D%9A%E5%AE%A2%E9%83%A8%E7%BD%B2%E5%88%B0%E4%B8%AA%E4%BA%BA%E5%9F%9F%E5%90%8D%E4%B8%8A/"/>
    <url>/2022/04/04/%E5%B0%86HEXO%E5%8D%9A%E5%AE%A2%E9%83%A8%E7%BD%B2%E5%88%B0%E4%B8%AA%E4%BA%BA%E5%9F%9F%E5%90%8D%E4%B8%8A/</url>
    
    <content type="html"><![CDATA[<p>将HEXO博客部署到个人域名上，使用个人域名访问博客</p><span id="more"></span><h4 id="一-购买个人域名"><a href="#一-购买个人域名" class="headerlink" title="一.购买个人域名"></a>一.购买个人域名</h4><h4 id="二-为域名设置DNS解析"><a href="#二-为域名设置DNS解析" class="headerlink" title="二.为域名设置DNS解析"></a>二.为域名设置DNS解析</h4><ul><li>进入<a href="https://www.aliyun.com/">阿里云</a>主页</li><li>进入控制台<br><img src="https://yuki-picgo-img.oss-cn-beijing.aliyuncs.com/vscode-img/20220404220851.png" alt="20220404220851"></li><li>进入域名控制台<img src="https://yuki-picgo-img.oss-cn-beijing.aliyuncs.com/vscode-img/20220404220947.png" alt="20220404220947"></li><li>点击操作处的解析按钮进入解析设置<img src="https://yuki-picgo-img.oss-cn-beijing.aliyuncs.com/vscode-img/20220404221113.png" alt="20220404221113"></li><li>添加如图两条记录<br><img src="https://yuki-picgo-img.oss-cn-beijing.aliyuncs.com/vscode-img/20220404222847.png" alt="20220404222847"></li></ul><ol><li>一条记录值为github项目地址（搭建hexo时的那个项目地址）</li><li>另二条记录值为github项目地址对应的ip地址<blockquote><p>win+R打开cmd，<code>ping 你的github用户名.github.io</code><br><img src="https://yuki-picgo-img.oss-cn-beijing.aliyuncs.com/vscode-img/20220404223237.png" alt="20220404223237"></p></blockquote></li></ol><h4 id="三-创建-CNAME-文件"><a href="#三-创建-CNAME-文件" class="headerlink" title="三.创建 CNAME 文件"></a>三.创建 CNAME 文件</h4><p>在hexo本地目录 source 目录下面新建一个文件，取名为 CNAME (无后缀)，内容就是你购买的域名<br><img src="https://yuki-picgo-img.oss-cn-beijing.aliyuncs.com/vscode-img/20220404223328.png" alt="20220404223328"><br><img src="https://yuki-picgo-img.oss-cn-beijing.aliyuncs.com/vscode-img/20220404223353.png" alt="20220404223353"></p><h4 id="四-测试"><a href="#四-测试" class="headerlink" title="四.测试"></a>四.测试</h4><ol><li>hexo g：生成CNAME文件</li><li>hexo d</li><li>输入域名，看能否成功访问</li></ol><h4 id="五-最后一步"><a href="#五-最后一步" class="headerlink" title="五.最后一步"></a>五.最后一步</h4><p>在GitHub仓库地址，选择settings，一直往下翻找到GitHub Pages<br><img src="https://yuki-picgo-img.oss-cn-beijing.aliyuncs.com/vscode-img/20220404223554.png" alt="20220404223554"><br>CTRL+F搜索GitHub Pages，点击check it out here！<img src="https://yuki-picgo-img.oss-cn-beijing.aliyuncs.com/vscode-img/20220404223708.png" alt="20220404223708"><br><img src="https://yuki-picgo-img.oss-cn-beijing.aliyuncs.com/vscode-img/20220404223846.png" alt="20220404223846"><br>完事~</p><hr><p>参考文献<br><a href="https://blog.csdn.net/weixin_38938338/article/details/103597434">https://blog.csdn.net/weixin_38938338/article/details/103597434</a></p>]]></content>
    
    
    
    <tags>
      
      <tag>hexo</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>JavaWeb(new)</title>
    <link href="/2022/04/02/JavaWeb-new/"/>
    <url>/2022/04/02/JavaWeb-new/</url>
    
    <content type="html"><![CDATA[<p>JavaWeb教程(全新技术栈,全程实战)</p><span id="more"></span><h2 id="Web开发概述"><a href="#Web开发概述" class="headerlink" title="Web开发概述"></a>Web开发概述</h2><h2 id="第一章、HTML-amp-CSS"><a href="#第一章、HTML-amp-CSS" class="headerlink" title="第一章、HTML&amp;CSS"></a>第一章、HTML&amp;CSS</h2><h3 id="第一节、单一架构回顾"><a href="#第一节、单一架构回顾" class="headerlink" title="第一节、单一架构回顾"></a>第一节、单一架构回顾</h3><p>我们从现在的JavaWeb阶段到后面学习SSM框架阶段都是在学习单一架构项目开发的技术。而在JavaWeb阶段由于重点是探讨如何实现Web开发，所以必须学习一部分前端开发的技术。本节就是让大家明确我们现在要学习的内容在整个架构体系中处于什么位置。</p><h4 id="1、单一架构技术体系"><a href="#1、单一架构技术体系" class="headerlink" title="1、单一架构技术体系"></a>1、单一架构技术体系</h4><p><img src="https://yuki-picgo-img.oss-cn-beijing.aliyuncs.com/vscode-img/20220402230955.png" alt="20220402230955"><br><img src="https://yuki-picgo-img.oss-cn-beijing.aliyuncs.com/vscode-img/20220402230659.png" alt="20220402230659"></p><h4 id="2、视图层"><a href="#2、视图层" class="headerlink" title="2、视图层"></a>2、视图层</h4><p>严格来说视图分成两层：</p><ul><li>前端技术：HTML&#x2F;CSS&#x2F;JavaScript</li><li>服务器端页面模板技术：Thymeleaf</li></ul><p>其中HTML、CSS、JavaScript都是工作在浏览器上的，所以它们都属于前端技术。而Thymeleaf是在服务器上把动态内容计算出具体数据，所以严格来说Thymeleaf是后端技术。<br><img src="https://yuki-picgo-img.oss-cn-beijing.aliyuncs.com/vscode-img/20220402231017.png" alt="20220402231017"></p><blockquote><p>这里大家会有个疑问：为什么在『视图』这个地方已经有HTML、CSS、JavaScript这些前端技术了，能够生成用户可以操作的界面，那为什么还需要Thymeleaf这样一个后端技术呢？<br>简单来说原因是Thymeleaf&#x3D;HTML+动态数据，而HTML不支持动态数据，这部分需要借助Thymeleaf来完成。<br>更进一步的细节咱们讲到那再说啦！</p></blockquote><h4 id="3、Web2-0"><a href="#3、Web2-0" class="headerlink" title="3、Web2.0"></a>3、Web2.0</h4><p>Web2.0是相对于更早的网页开发规范而提出的新规范。Web2.0规范之前的网页开发并没有明确的将HTML、CSS、JavaScript代码分开，而是互相之间纠缠在一起，导致代码维护困难，开发效率很低。</p><blockquote><p>在开发中我们把这样彼此纠缠、互相影响的现象称为『耦合』。而把耦合在一起的东西拆解开，让他们彼此独立出来称为『解耦』。各个组成部分独立完成自己负责的功能，和其他模块无关称为『内聚』。<br>将来大家经常会听到一句话：软件开发提倡『 高内聚，低耦合』。<br>一个软件项目只有做到了高内聚、低耦合才能算得上结构严谨，模块化程度高，有利于开发和维护。<br>所以Web2.0规范主张将网页代码分成下面三个部分：</p></blockquote><ul><li>结构：由HTML实现，负责管理网页的内容。将来网页上不管是静态还是动态的数据都是填写到HTML的标签里。</li><li>表现：由CSS实现，负责管理网页内容的表现形式。比如：颜色、尺寸、位置、层级等等。也就是给数据穿上一身漂亮的衣服。</li><li>行为：由JavaScript实现，负责实现网页的动态交互效果。比如：轮播图、表单验证、鼠标滑过显示下拉菜单、鼠标滑过改变背景颜色等等。</li></ul><h3 id="第二节、HTML简介"><a href="#第二节、HTML简介" class="headerlink" title="第二节、HTML简介"></a>第二节、HTML简介</h3><h4 id="1、名词解释"><a href="#1、名词解释" class="headerlink" title="1、名词解释"></a>1、名词解释</h4><p>HTML是<font color = red>H</font>yper <font color = red>T</font>ext <font color = red>M</font>arkup <font color = red>L</font>anguage的缩写。意思是『<font color = red>超文本标记语言</font>』。</p><h4 id="2、超文本"><a href="#2、超文本" class="headerlink" title="2、超文本"></a>2、超文本</h4><p>HTML文件本质上是文本文件，而普通的文本文件只能显示字符。但是HTML技术则通过HTML标签把其他网页、图片、音频、视频等各种多媒体资源引入到当前网页中，让网页有了非常丰富的呈现方式，这就是超文本的含义——本身是文本，但是呈现出来的最终效果超越了文本。<br><img src="https://yuki-picgo-img.oss-cn-beijing.aliyuncs.com/vscode-img/!%5B20220402231406%5D(httpsraw.githubusercontent.comMr-Yuki-sixvs-picgomainimages20220402231406.png).png" alt="![20220402231406](httpsraw.githubusercontent.comMr-Yuki-sixvs-picgomainimages20220402231406.png)"></p><h4 id="3、标记语言"><a href="#3、标记语言" class="headerlink" title="3、标记语言"></a>3、标记语言</h4><p>说HTML是一种『标记语言』是因为它不是向Java这样的『编程语言』，因为它是由一系列『标签』组成的，没有常量、变量、流程控制、异常处理、IO等等这些功能。HTML很简单，每个标签都有它固定的含义和确定的页面显示效果。<br>标签是通过一组尖括号+标签名的方式来定义的：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs HTML"><span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>HTML is a very popular fore-end technology.<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><br></code></pre></td></tr></table></figure><p>这个例子中使用了一个p标签来定义一个段落，<code>&lt;p&gt;</code>叫『开始标签』，<code>&lt;/p&gt;</code>叫『结束标签』。开始标签和结束标签一起构成了一个完整的标签。开始标签和结束标签之间的部分叫『文本标签体』，也简称『标签体』。<br>有的时候标签里还带有『属性』：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs HTML"><span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;http://www.xxx.com&quot;</span>&gt;</span>show detail<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span><br></code></pre></td></tr></table></figure><p><code>href=&quot;http://www.xxx.com&quot;</code>就是属性，href是『属性名』，<code>&quot;http://www.xxx.com&quot;</code>是『属性值』。<br>还有一种标签是『单标签』：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs HTML"><span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text&quot;</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;username&quot;</span> /&gt;</span><br></code></pre></td></tr></table></figure><h4 id="4、HelloWorld"><a href="#4、HelloWorld" class="headerlink" title="4、HelloWorld"></a>4、HelloWorld</h4><p><img src="https://yuki-picgo-img.oss-cn-beijing.aliyuncs.com/vscode-img/20220402232019.png" alt="20220402232019"></p><h4 id="5、HTML文件结构"><a href="#5、HTML文件结构" class="headerlink" title="5、HTML文件结构"></a>5、HTML文件结构</h4><p><strong>①文档类型声明</strong><br>HTML文件中第一行的内容，用来告诉浏览器当前HTML文档的基本信息，其中最重要的就是当前HTML文档遵循的语法标准。这里我们只需要知道HTML有4和5这两个大的版本，HTML4版本的文档类型声明是：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs HTML"><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-keyword">HTML</span> <span class="hljs-keyword">PUBLIC</span> <span class="hljs-string">&quot;-//W3C//DTD HTML 4.01 Transitional//EN&quot;</span></span><br><span class="hljs-meta"><span class="hljs-string">&quot;http://www.w3.org/TR/html4/loose.dtd&quot;</span>&gt;</span><br></code></pre></td></tr></table></figure><p>HTML5版本的文档类型声明是：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs HTML"><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-keyword">html</span>&gt;</span><br></code></pre></td></tr></table></figure><p>现在主流的技术选型都是使用HTML5，之前的版本基本不用了。<br>历史上HTML的各个版本：</p><table><thead><tr><th>版本名称</th><th>年份</th></tr></thead><tbody><tr><td>HTML</td><td>1991</td></tr><tr><td>HTML+</td><td>1993</td></tr><tr><td>HTML2.0</td><td>1995</td></tr><tr><td>HTML3.2</td><td>1997</td></tr><tr><td>HTML4.01</td><td>1999</td></tr><tr><td>XHTML1.0</td><td>2000</td></tr><tr><td>HTML5</td><td>2012</td></tr><tr><td>XHTML5</td><td>2013</td></tr></tbody></table><p><strong>②根标签</strong><br>html标签是整个文档的根标签，所有其他标签都必须放在html标签里面。上面的文档类型不能当做普通标签看待。</p><blockquote><p>所谓『根』其实是『树根』的意思。在一个树形结构中，根节点只能有一个。</p></blockquote><p><strong>③头部</strong><br>head标签用于定义文档的头部，其他头部元素都放在head标签里。头部元素包括title标签、script标签、style标签、link标签、meta标签等等。</p><p><strong>④主体</strong><br>body标签定义网页的主体内容，在浏览器窗口内显示的内容都定义到body标签内。</p><p><strong>⑤注释</strong><br>HTML注释的写法是：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs HTML"><span class="hljs-comment">&lt;!-- 注释内容 --&gt;</span><br></code></pre></td></tr></table></figure><p>注释的内容不会显示到浏览器窗口内，是开发人员用来对代码内容进行解释说明。</p><h4 id="6、HTML语法规则"><a href="#6、HTML语法规则" class="headerlink" title="6、HTML语法规则"></a>6、HTML语法规则</h4><ul><li>根标签有且只能有一个</li><li>无论是双标签还是单标签都必须正确关闭</li><li>标签可以嵌套但不能交叉嵌套</li><li>注释不能嵌套</li><li>属性必须有值，值必须加引号，单引号或双引号均可</li><li>标签名不区分大小写但建议使用小写</li></ul><h3 id="第三节、使用HTML展示文章"><a href="#第三节、使用HTML展示文章" class="headerlink" title="第三节、使用HTML展示文章"></a>第三节、使用HTML展示文章</h3><p>以文章的组织形式展示数据是HTML最基本的功能了，网页上显示的文章在没有做任何CSS样式设定的情况下如下图所示：<br><img src="https://yuki-picgo-img.oss-cn-beijing.aliyuncs.com/vscode-img/20220402233308.png" alt="20220402233308"><br>本节我们要学习的HTML标签如下表：</p><table><thead><tr><th>标签名称</th><th>功能</th></tr></thead><tbody><tr><td>h1~h6</td><td>1级标题~6级标题</td></tr><tr><td>p</td><td>段落</td></tr><tr><td>a</td><td>超链接</td></tr><tr><td>ul&#x2F;li</td><td>无序列表</td></tr><tr><td>img</td><td>图片</td></tr><tr><td>div</td><td>定义一个前后有换行的块</td></tr><tr><td>span</td><td>定义一个前后无换行的块</td></tr></tbody></table><p>为了方便编写代码，我们在IDEA中创建一个静态Web工程来操作：<br><img src="https://yuki-picgo-img.oss-cn-beijing.aliyuncs.com/vscode-img/20220402233611.png" alt="20220402233611"></p><h4 id="1、标题标签"><a href="#1、标题标签" class="headerlink" title="1、标题标签"></a>1、标题标签</h4><p><strong>①代码</strong></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-keyword">html</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">html</span> <span class="hljs-attr">lang</span>=<span class="hljs-string">&quot;en&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">head</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">charset</span>=<span class="hljs-string">&quot;UTF-8&quot;</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">title</span>&gt;</span>Title<span class="hljs-tag">&lt;/<span class="hljs-name">title</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">head</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span><br><br>    <span class="hljs-tag">&lt;<span class="hljs-name">h1</span>&gt;</span>这是一级标题<span class="hljs-tag">&lt;/<span class="hljs-name">h1</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">h2</span>&gt;</span>这是二级标题<span class="hljs-tag">&lt;/<span class="hljs-name">h2</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">h3</span>&gt;</span>这是三级标题<span class="hljs-tag">&lt;/<span class="hljs-name">h3</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">h4</span>&gt;</span>这是四级标题<span class="hljs-tag">&lt;/<span class="hljs-name">h4</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">h5</span>&gt;</span>这是五级标题<span class="hljs-tag">&lt;/<span class="hljs-name">h5</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">h6</span>&gt;</span>这是六级标题<span class="hljs-tag">&lt;/<span class="hljs-name">h6</span>&gt;</span><br><br><span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">html</span>&gt;</span><br></code></pre></td></tr></table></figure><p><strong>②页面显示效果</strong><br><img src="https://yuki-picgo-img.oss-cn-beijing.aliyuncs.com/vscode-img/20220402233811.png" alt="20220402233811"><br><font color = blue>注意：</font>标题标签前后有换行。</p><h4 id="2、段落标签"><a href="#2、段落标签" class="headerlink" title="2、段落标签"></a>2、段落标签</h4><p><strong>①代码</strong></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>There is clearly a need for CSS to be taken seriously by graphic artists. The Zen Garden aims to excite, inspire, and encourage participation. To begin, view some of the existing designs in the list. Clicking on any one will load the style sheet into this very page. The code remains the same, the only thing that has changed is the external .css file. Yes, really.<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><br></code></pre></td></tr></table></figure><p><strong>②页面显示效果</strong><br><img src="https://yuki-picgo-img.oss-cn-beijing.aliyuncs.com/vscode-img/20220402234044.png" alt="20220402234044"><br><font color = blue>注意：</font>段落标签前后有换行。</p><h4 id="3、超链接"><a href="#3、超链接" class="headerlink" title="3、超链接"></a>3、超链接</h4><p><strong>①代码</strong></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;page02-anchor-target.html&quot;</span>&gt;</span>点我跳转到下一个页面<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span><br></code></pre></td></tr></table></figure><p><strong>②页面显示效果</strong><br><img src="https://yuki-picgo-img.oss-cn-beijing.aliyuncs.com/vscode-img/20220402234248.png" alt="20220402234248"></p><h4 id="4、路径"><a href="#4、路径" class="headerlink" title="4、路径"></a>4、路径</h4><p>在我们整个Web开发技术体系中，『路径』是一个贯穿始终的重要概念。凡是需要获取另外一个资源的时候都需要用到路径。要想理解路径这个概念，我们首先要认识一个概念：『文件系统』。<br><strong>①文件系统</strong><br>我们写代码的时候通常都是在Windows系统来操作，而一个项目开发完成后想要让所有人都能够访问到就必须『部署』到服务器上，也叫『发布』。而服务器通常是Linux系统。<br>Windows系统和Linux系统的文件系统有很大差别，为了让我们编写的代码不会因为从Windows系统部署到了Linux系统而出现故障，实际开发时不允许使用<font color = blue>物理路径</font>。</p><blockquote><p>物理路径举例：<br>D:\aaa\pro01-HTML\page01-article-tag.html<br>D:\aaa\pro01-HTML\page02-anchor-target.html</p></blockquote><p>幸运的是不管是Windows系统还是Linux系统环境下，目录结构都是<font color = blue>树形结构</font>，编写路径的规则是一样的。<br><img src="https://yuki-picgo-img.oss-cn-beijing.aliyuncs.com/vscode-img/20220402234458.png" alt="20220402234458"><br>所以我们<font color = blue>以项目的树形目录结构为依据</font>来编写路径就不用担心操作系统平台发生变化之后路径错误的问题了。有了这个大前提，我们具体编写路径时有两种具体写法：</p><ul><li>相对路径</li><li>绝对路径（建议使用）</li></ul><p><strong>②相对路径</strong><br><font color = blue>相对路径都是以<font color = red>『当前位置』</font>为基准</font>来编写的。假设我们现在正在浏览a页面，想在a页面内通过超链接跳转到z页面。<br><img src="https://yuki-picgo-img.oss-cn-beijing.aliyuncs.com/vscode-img/20220402234700.png" alt="20220402234700"><br>那么按照相对路径的规则，我们现在所在的位置是a.html所在的b目录：<br><img src="https://yuki-picgo-img.oss-cn-beijing.aliyuncs.com/vscode-img/20220402234719.png" alt="20220402234719"><br>z.html并不在b目录下，所以我们要从b目录出发，向上走，进入b的父目录——c目录：<br><img src="https://yuki-picgo-img.oss-cn-beijing.aliyuncs.com/vscode-img/20220402234806.png" alt="20220402234806"><br>c目录还是不行，继续向上走，进入c的父目录——d目录：<br><img src="https://yuki-picgo-img.oss-cn-beijing.aliyuncs.com/vscode-img/20220402234822.png" alt="20220402234822"><br>在从d目录向下经过两级子目录——e目录、f目录才能找到z.html：<br><img src="https://yuki-picgo-img.oss-cn-beijing.aliyuncs.com/vscode-img/20220402234850.png" alt="20220402234850"><br>所以整个路径的写法是：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;../../e/f/z.html&quot;</span>&gt;</span>To z.html<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span><br></code></pre></td></tr></table></figure><p>可以看到使用相对路径有可能会很繁琐，而且在后面我们结合了在服务器上运行的Java程序后，相对路径的基准是有可能发生变化的，所以<font color = blue>不建议使用相对路径</font>.</p><p><strong>③绝对路径</strong><br>[1]通过IDEA服务器打开HTML文件<br>测试绝对路径的前提是通过IDEA的内置服务器访问我们编写的HTML页面——这样访问地址的组成结构才能和我们以后在服务器上运行的Java程序一致。<br><img src="https://yuki-picgo-img.oss-cn-beijing.aliyuncs.com/vscode-img/20220402235157.png" alt="20220402235157"></p><p>[2]服务器访问地址的组成<br><img src="https://yuki-picgo-img.oss-cn-beijing.aliyuncs.com/vscode-img/20220402235305.png" alt="20220402235305"></p><p>[3]绝对路径的写法<br>绝对路径要求必须是以<font color = blue>『正斜线』</font>开头。这个开头的正斜线在整个服务器访问地址中对应的位置如下图所示：<br><img src="https://yuki-picgo-img.oss-cn-beijing.aliyuncs.com/vscode-img/20220403223617.png" alt="20220403223617"><br>这里标注出的这个位置代表的是<font color = blue>『服务器根目录』</font>，从这里开始我们就是在服务器的内部查找一个具体的Web应用。<br>所以我们编写绝对路径时就从这个位置开始，<font color = blue>按照目录结构找到目标文件</font>即可。拿前面相对路径中的例子来说，我们想在a.html页面中通过超链接访问z.html。此时路径从正斜线开始，和a.html自身所在位置没有任何关系：<br><img src="https://yuki-picgo-img.oss-cn-beijing.aliyuncs.com/vscode-img/20220403223818.png" alt="20220403223818"></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;/d/e/f/z.html&quot;</span>&gt;</span>To z.html<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span><br></code></pre></td></tr></table></figure><p>[4]具体例子<br>编写超链接访问下面的页面：<br><img src="https://yuki-picgo-img.oss-cn-beijing.aliyuncs.com/vscode-img/20220403223945.png" alt="20220403223945"></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;/stasticweb/.idea/stastic.html&quot;</span>&gt;</span>Page<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span><br></code></pre></td></tr></table></figure><p>[5]小结<br>为了和我们后面学习的内容和正确的编码方式保持一致，建议大家从现在开始就使用绝对路径。</p><h4 id="5、换行"><a href="#5、换行" class="headerlink" title="5、换行"></a>5、换行</h4><p><strong>①代码</strong><br>We would like to see as much CSS1 as possible. CSS2 should be limited to widely-supported elements only. The css Zen Garden is about functional, practical CSS and not the latest bleeding-edge tricks viewable by 2% of the browsing public. <br/>The only real requirement we have is that your CSS validates.<br><strong>②页面显示效果</strong><br><img src="https://yuki-picgo-img.oss-cn-beijing.aliyuncs.com/vscode-img/20220403224359.png" alt="20220403224359"></p><h4 id="6、无序列表"><a href="#6、无序列表" class="headerlink" title="6、无序列表"></a>6、无序列表</h4><p><strong>①代码</strong></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">ul</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span>Apple<span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span>Banana<span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span>Grape<span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">ul</span>&gt;</span><br></code></pre></td></tr></table></figure><p><strong>②页面显示效果</strong><br><img src="https://yuki-picgo-img.oss-cn-beijing.aliyuncs.com/vscode-img/20220403224657.png" alt="20220403224657"></p><h4 id="7、图片"><a href="#7、图片" class="headerlink" title="7、图片"></a>7、图片</h4><p><strong>①准备图片文件</strong><br><img src="https://yuki-picgo-img.oss-cn-beijing.aliyuncs.com/vscode-img/20220403224933.png" alt="20220403224933"><br><strong>②代码</strong><br>src属性用来指定图片文件的路径，这里同样按我们前面说的使用『绝对路径』。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">img</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;/stasticweb/.idea/img/1.jpg&quot;</span>/&gt;</span><br></code></pre></td></tr></table></figure><p><strong>③页面显示效果</strong><br><img src="https://yuki-picgo-img.oss-cn-beijing.aliyuncs.com/vscode-img/20220403225228.png" alt="20220403225228"></p><h4 id="8、块"><a href="#8、块" class="headerlink" title="8、块"></a>8、块</h4><p><font color = blue>『块』</font>并不是为了显示文章内容的，而是为了方便结合CSS对页面进行布局。块有两种，div是前后有换行的块，span是前后没有换行的块。</p><p>把下面代码粘贴到HTML文件中查看他们的区别：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;border: 1px solid black;width: 100px;height: 100px;&quot;</span>&gt;</span>This is a div block<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;border: 1px solid black;width: 100px;height: 100px;&quot;</span>&gt;</span>This is a div block<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><br><span class="hljs-tag">&lt;<span class="hljs-name">span</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;border: 1px solid black;width: 100px;height: 100px;&quot;</span>&gt;</span>This is a span block<span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">span</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;border: 1px solid black;width: 100px;height: 100px;&quot;</span>&gt;</span>This is a span block<span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span><br></code></pre></td></tr></table></figure><p>页面显示效果为：<br><img src="https://yuki-picgo-img.oss-cn-beijing.aliyuncs.com/vscode-img/20220403225420.png" alt="20220403225420"></p><h4 id="9、HTML实体"><a href="#9、HTML实体" class="headerlink" title="9、HTML实体"></a>9、HTML实体</h4><p>在HTML文件中，&lt;、&gt;等等这样的符号已经被赋予了特定含义，不会作为符号本身显示到页面上，此时如果我们想使用符号本身怎么办呢？那就是使用HTML实体来转义。<br><img src="https://yuki-picgo-img.oss-cn-beijing.aliyuncs.com/vscode-img/20220403225533.png" alt="20220403225533"></p><h3 id="第四节、使用HTML表格展示数据-暂停"><a href="#第四节、使用HTML表格展示数据-暂停" class="headerlink" title="第四节、使用HTML表格展示数据 暂停"></a>第四节、使用HTML表格展示数据 暂停</h3><h3 id="第五节、使用HTML表单收集数据"><a href="#第五节、使用HTML表单收集数据" class="headerlink" title="第五节、使用HTML表单收集数据"></a>第五节、使用HTML表单收集数据</h3><h4 id="1、什么是表单"><a href="#1、什么是表单" class="headerlink" title="1、什么是表单"></a>1、什么是表单</h4><p>在项目开发过程中，凡是需要用户填写的信息都需要用到表单。<br><img src="https://yuki-picgo-img.oss-cn-beijing.aliyuncs.com/vscode-img/20220404163511.png" alt="20220404163511"></p><h4 id="2、form标签"><a href="#2、form标签" class="headerlink" title="2、form标签"></a>2、form标签</h4><p>在HTML中我们使用form标签来定义一个表单。而对于form标签来说有两个最重要的属性：action和method。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">form</span> <span class="hljs-attr">action</span>=<span class="hljs-string">&quot;/stasticweb/.idea/static/receive.html&quot;</span> <span class="hljs-attr">method</span>=<span class="hljs-string">&quot;post&quot;</span>&gt;</span>  <br><span class="hljs-tag">&lt;/<span class="hljs-name">form</span>&gt;</span><br></code></pre></td></tr></table></figure><p><strong>①action属性</strong><br>用户在表单里填写的信息需要发送到服务器端，对于Java项目来说就是交给Java代码来处理。那么在页面上我们就必须正确填写服务器端的能够接收表单数据的地址。<br>这个地址要写在form标签的action属性中。但是现在暂时我们还没有服务器端环境，所以先借用一个HTML页面来当作服务器端地址使用。</p><p><strong>②method属性</strong><br>『method』这个单词的意思是『方式、方法』，在form标签中method属性用来定义提交表单的<font color = blue>『请求方式』</font>。method属性只有两个可选值：get或post，没有极特殊情况的话使用post即可。</p><blockquote><p>什么是<font color = blue>『请求方式』</font>？<br>浏览器和服务器之间在互相通信时有大量的<font color = blue>数据</font>需要传输。但是不论是浏览器还是服务器都有很多不同厂商提供的不同产品。<br>常见的浏览器有：</p><ul><li>Chrome</li><li>Firefox </li><li>Safari</li><li>Opera</li><li>Edge<br>常见的Java服务器有：</li><li>Tomcat</li><li>Weblogic</li><li>WebSphere</li><li>Glassfish</li><li>Jetty<br>这么多不同厂商各自开发的应用程序怎么能保证它们彼此之间传输的<font color = blue>『数据』</font>能够被对方正确理解呢？<br>很简单，我们给这些数据设定<font color = blue>『格式』</font>，发送端按照格式发送数据，接收端按照格式解析数据，这样就能够实现数据的<font color = blue>『跨平台传输』</font>了。<br>而这里定义的<font color = blue>『数据格式』</font>了就是应用程序之间的<font color = blue>『通信协议』</font>了。<br>在JavaSE阶段的网络编程章节我们接触过TCP&#x2F;IP、UDP这样的协议，而我们现在使用的<font color = blue>『HTTP协议』</font>的底层就是TCP&#x2F;IP协议。<br>HTTP1.1中共定义了八种请求方式：</li><li>GET</li><li>POST</li><li>PUT</li><li>DELETE</li><li>HEAD</li><li>CONNECT</li><li>OPTIONS</li><li>TRACE<br>但是在HTML标签中，点击超链接是GET方式的请求，提交一个表单可以通过form标签的method属性指定GET或POST请求，其他请求方式无法通过HTML标签实现。除了GET、POST之外的其他请求方式暂时我们不需要涉及（到我们学习SpringMVC时会用到PUT和DELETE）。至于<font color = blue>GET请求和POST请求的区别</font>我们会在讲HTTP协议的时候详细介绍，现在大家可以从表面现象来观察一下。</li></ul></blockquote><h4 id="3、name和value"><a href="#3、name和value" class="headerlink" title="3、name和value"></a>3、name和value</h4><p>在用户使用一个软件系统时，需要一次性提交很多数据是非常正常的现象。我们肯定不能要求用户一个数据一个数据的提交，而肯定是所有数据填好后一起提交。那就带来一个问题，服务器怎么从众多数据中识别出来收货人、所在地区、详细地址、手机号码……？</p><p>很简单，<font color = blue>给每个数据都起一个『名字』</font>，发送数据时用<font color = blue>『名字』</font>携带对应的数据，接收数据时通过<font color = blue>『名字』</font>获取对应的数据。</p><p>在各个具体的表单标签中，我们通过<font color = blue>『name属性』</font>来给数据起<font color = blue>『名字』</font>，通过<font color = blue>『value属性』</font>来保存要发送给服务器的<font color = blue>『值』</font>。</p><p>但是名字和值之间既有可能是<font color = blue>『一个名字对应一个值』</font>，也有可能是<font color = blue>『一个名字对应多个值』</font>。</p><p>这么看来这样的关系很像我们Java中的Map，而事实上在服务器端就是使用Map类型来接收请求参数的。具体的是类型是：<font color = blue>Map&lt;String,String[]&gt;</font>。</p><p>name属性就是Map的键，value属性就是Map的值。</p><p>有了上面介绍的基础知识，下面我们就可以来看具体的表单标签了。</p><h4 id="4、单行文本框"><a href="#4、单行文本框" class="headerlink" title="4、单行文本框"></a>4、单行文本框</h4><p><strong>①代码</strong></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs html">昵称：<span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text&quot;</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;nicheng&quot;</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">br</span>&gt;</span><br></code></pre></td></tr></table></figure><p><strong>②显示效果</strong><br><img src="https://yuki-picgo-img.oss-cn-beijing.aliyuncs.com/vscode-img/20220404172618.png" alt="20220404172618"></p><p><strong>5、密码框</strong><br><strong>①代码</strong></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs html">密码：<span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;password&quot;</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;pwd&quot;</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">br</span>&gt;</span><br></code></pre></td></tr></table></figure><p><strong>②显示效果</strong><br><img src="https://yuki-picgo-img.oss-cn-beijing.aliyuncs.com/vscode-img/20220404172753.png" alt="20220404172753"></p><p><strong>6、单选框</strong><br><strong>①代码</strong></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs html">性别：<span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;radio&quot;</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;gender&quot;</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;male&quot;</span>&gt;</span>男<br>       <span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;radio&quot;</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;gender&quot;</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;both&quot;</span>&gt;</span>both<br>       <span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;radio&quot;</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;gender&quot;</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;female&quot;</span> <span class="hljs-attr">checked</span>&gt;</span>女 <span class="hljs-tag">&lt;<span class="hljs-name">br</span>&gt;</span> <span class="hljs-comment">&lt;!--默认选中，属性名等于属性值，属性值可以省略--&gt;</span><br></code></pre></td></tr></table></figure><p><strong>②效果</strong><br><img src="https://yuki-picgo-img.oss-cn-beijing.aliyuncs.com/vscode-img/20220404172918.png" alt="20220404172918"><br><strong>③说明</strong></p><ul><li>name属性相同的radio为一组，组内互斥</li><li>当用户选择了一个radio并提交表单，这个radio的name属性和value属性组成一个键值对发送给服务器</li><li>设置checked&#x3D;”checked”属性设置默认被选中的radio</li></ul><p><strong>7、多选框</strong><br><strong>①代码</strong></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs html">爱好：<span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;checkbox&quot;</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;hobby&quot;</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;1&quot;</span> <span class="hljs-attr">checked</span>&gt;</span>1<br>     <span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;checkbox&quot;</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;hobby&quot;</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;2&quot;</span> <span class="hljs-attr">checked</span>&gt;</span>2<br>        <span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;checkbox&quot;</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;hobby&quot;</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;3&quot;</span>&gt;</span>3 <span class="hljs-tag">&lt;<span class="hljs-name">br</span>&gt;</span><br></code></pre></td></tr></table></figure><p><strong>②效果</strong><br><img src="https://yuki-picgo-img.oss-cn-beijing.aliyuncs.com/vscode-img/20220404173106.png" alt="20220404173106"></p><p><strong>8、下拉列表</strong><br><strong>①代码</strong></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs html">星座：<span class="hljs-tag">&lt;<span class="hljs-name">select</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;star&quot;</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">option</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;1&quot;</span> &gt;</span>白羊座<span class="hljs-tag">&lt;/<span class="hljs-name">option</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">option</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;2&quot;</span>&gt;</span>双子座<span class="hljs-tag">&lt;/<span class="hljs-name">option</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">option</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;3&quot;</span>&gt;</span>天蝎座<span class="hljs-tag">&lt;/<span class="hljs-name">option</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">option</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;4&quot;</span>&gt;</span>魔羯座<span class="hljs-tag">&lt;/<span class="hljs-name">option</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">option</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;5&quot;</span>&gt;</span>双鱼座<span class="hljs-tag">&lt;/<span class="hljs-name">option</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">option</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;6&quot;</span> <span class="hljs-attr">selected</span>&gt;</span>处女座<span class="hljs-tag">&lt;/<span class="hljs-name">option</span>&gt;</span><br>        <span class="hljs-tag">&lt;/<span class="hljs-name">select</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">br</span>&gt;</span><br></code></pre></td></tr></table></figure><p><strong>②效果</strong><br><img src="https://yuki-picgo-img.oss-cn-beijing.aliyuncs.com/vscode-img/20220404173218.png" alt="20220404173218"><br><strong>③说明</strong></p><ul><li>下拉列表用到了两种标签，其中select标签用来定义下拉列表，而option标签设置列表项。</li><li>name属性在select标签中设置。</li><li>value属性在option标签中设置。</li><li>option标签的标签体是显示出来给用户看的，提交到服务器的是value属性的值。</li><li>通过在option标签中设置selected&#x3D;”selected”属性实现默认选中的效果。(&#x3D;”selected”可以省略)*</li></ul><p><strong>9、按钮</strong><br><strong>①代码</strong></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;submit&quot;</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;注册&quot;</span>&gt;</span> <span class="hljs-tag">&lt;<span class="hljs-name">br</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;reset&quot;</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;重置&quot;</span>&gt;</span> <span class="hljs-tag">&lt;<span class="hljs-name">br</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;button&quot;</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;普通按钮&quot;</span>&gt;</span><br></code></pre></td></tr></table></figure><p><strong>②效果</strong><br><img src="https://yuki-picgo-img.oss-cn-beijing.aliyuncs.com/vscode-img/20220404173501.png" alt="20220404173501"><br><strong>③说明</strong></p><table><thead><tr><th>类型</th><th>功能</th></tr></thead><tbody><tr><td>普通按钮</td><td>点击后无效果，需要通过JavaScript绑定单击响应函数</td></tr><tr><td>重置按钮</td><td>点击后将表单内的所有表单项都恢复为默认值</td></tr><tr><td>提交按钮</td><td>点击后提交表单</td></tr></tbody></table><h4 id="10、表单隐藏域"><a href="#10、表单隐藏域" class="headerlink" title="10、表单隐藏域"></a>10、表单隐藏域</h4><p><strong>①代码</strong></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;hidden&quot;</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;userId&quot;</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;2233&quot;</span>/&gt;</span><br></code></pre></td></tr></table></figure><p><strong>②说明</strong><br>通过表单隐藏域设置的表单项不会显示到页面上，用户看不到。但是提交表单时会一起被提交。用来设置一些需要和表单一起提交但是不希望用户看到的数据，例如：用户id等等。</p><h4 id="11、多行文本框"><a href="#11、多行文本框" class="headerlink" title="11、多行文本框"></a>11、多行文本框</h4><p><strong>①代码</strong></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs html">备注：<span class="hljs-tag">&lt;<span class="hljs-name">textarea</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;remark&quot;</span> <span class="hljs-attr">rows</span>=<span class="hljs-string">&quot;4&quot;</span> <span class="hljs-attr">cols</span>=<span class="hljs-string">&quot;50&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">textarea</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">br</span>&gt;</span><br></code></pre></td></tr></table></figure><p><strong>②效果</strong><br><img src="https://yuki-picgo-img.oss-cn-beijing.aliyuncs.com/vscode-img/20220404173840.png" alt="20220404173840"><br><strong>③说明</strong><br>textarea没有value属性，如果要设置默认值需要写在开始和结束标签之间。</p><p><strong>frameset（页面框架）和iframe（在一个页面嵌入一个子页面）</strong>（被淘汰）<br><img src="https://yuki-picgo-img.oss-cn-beijing.aliyuncs.com/vscode-img/20220404175437.png" alt="20220404175437"><br><img src="https://yuki-picgo-img.oss-cn-beijing.aliyuncs.com/vscode-img/20220404175550.png" alt="20220404175550"></p><h4 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h4><p><img src="https://yuki-picgo-img.oss-cn-beijing.aliyuncs.com/vscode-img/20220404175858.png" alt="20220404175858"></p><h3 id="第六节、CSS的简单应用"><a href="#第六节、CSS的简单应用" class="headerlink" title="第六节、CSS的简单应用"></a>第六节、CSS的简单应用</h3><h4 id="1、CSS效果示例"><a href="#1、CSS效果示例" class="headerlink" title="1、CSS效果示例"></a>1、CSS效果示例</h4><h4 id="2、设置CSS样式的三种方式"><a href="#2、设置CSS样式的三种方式" class="headerlink" title="2、设置CSS样式的三种方式"></a>2、设置CSS样式的三种方式</h4><p><strong>①在HTML标签内设置</strong><br>仅对当前标签有效</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;border: 1px solid black;width: 100px; height: 100px;&quot;</span>&gt;</span><span class="hljs-symbol">&amp;nbsp;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br></code></pre></td></tr></table></figure><p><img src="https://yuki-picgo-img.oss-cn-beijing.aliyuncs.com/vscode-img/20220405162710.png" alt="20220405162710"></p><p><strong>②在head标签内设置</strong><br>对当前页面有效</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">head</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">charset</span>=<span class="hljs-string">&quot;UTF-8&quot;</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">title</span>&gt;</span>Title<span class="hljs-tag">&lt;/<span class="hljs-name">title</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">style</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text/css&quot;</span>&gt;</span><span class="language-css"></span><br><span class="language-css">            &lt;!-- class选择器 --&gt;</span><br><span class="language-css">        <span class="hljs-selector-class">.one</span>&#123;    </span><br><span class="language-css">            <span class="hljs-attribute">border</span>: <span class="hljs-number">1px</span> solid black;</span><br><span class="language-css">            <span class="hljs-attribute">width</span>: <span class="hljs-number">100px</span>;</span><br><span class="language-css">            <span class="hljs-attribute">height</span>: <span class="hljs-number">100px</span>;</span><br><span class="language-css">            <span class="hljs-attribute">background-color</span>: lightgreen;</span><br><span class="language-css">            <span class="hljs-attribute">margin-top</span>: <span class="hljs-number">5px</span>;</span><br><span class="language-css"></span><br><span class="language-css">        &#125;</span><br><span class="language-css"></span><br><span class="language-css">    </span><span class="hljs-tag">&lt;/<span class="hljs-name">style</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">head</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;border: 1px solid black;width: 100px; height: 100px;&quot;</span>&gt;</span><span class="hljs-symbol">&amp;nbsp;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;one&quot;</span>&gt;</span><span class="hljs-symbol">&amp;nbsp;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;one&quot;</span>&gt;</span><span class="hljs-symbol">&amp;nbsp;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;one&quot;</span>&gt;</span><span class="hljs-symbol">&amp;nbsp;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span><br></code></pre></td></tr></table></figure><p><img src="https://yuki-picgo-img.oss-cn-beijing.aliyuncs.com/vscode-img/20220405163022.png" alt="20220405163022"></p><p><strong>③引入外部CSS样式文件</strong><br>[1]创建CSS文件<br><img src="https://yuki-picgo-img.oss-cn-beijing.aliyuncs.com/vscode-img/20220405163529.png" alt="20220405163529"><br>[2]编辑CSS文件</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs html">.two &#123;<br>    border: 1px solid black;<br>    width: 100px;<br>    height: 100px;<br>    background-color: yellow;<br>    margin-top: 5px;<br>&#125;<br></code></pre></td></tr></table></figure><p>[3]引入外部CSS文件<br>在需要使用这个CSS文件的HTML页面的head标签内加入：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">link</span> <span class="hljs-attr">rel</span>=<span class="hljs-string">&quot;stylesheet&quot;</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text/css&quot;</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;/.idea/static/css/example.css&quot;</span>&gt;</span><br></code></pre></td></tr></table></figure><p>于是下面HTML代码的显示效果是：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;two&quot;</span>&gt;</span><span class="hljs-symbol">&amp;nbsp;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;two&quot;</span>&gt;</span><span class="hljs-symbol">&amp;nbsp;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;two&quot;</span>&gt;</span><span class="hljs-symbol">&amp;nbsp;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br></code></pre></td></tr></table></figure><p><img src="https://yuki-picgo-img.oss-cn-beijing.aliyuncs.com/vscode-img/20220405163911.png" alt="20220405163911"></p><h4 id="3、CSS代码语法"><a href="#3、CSS代码语法" class="headerlink" title="3、CSS代码语法"></a>3、CSS代码语法</h4><ul><li>CSS样式由选择器和声明组成，而声明又由属性和值组成。</li><li>属性和值之间用冒号隔开。</li><li>多条声明之间用分号隔开。</li><li>使用&#x2F;* … *&#x2F;声明注释。<br><img src="https://yuki-picgo-img.oss-cn-beijing.aliyuncs.com/vscode-img/20220405164226.png" alt="20220405164226"></li></ul><h4 id="4、CSS选择器"><a href="#4、CSS选择器" class="headerlink" title="4、CSS选择器"></a>4、CSS选择器</h4><p><strong>①标签选择器</strong><br>HTML代码：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>Hello, this is a p tag.<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>Hello, this is a p tag.<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>Hello, this is a p tag.<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>Hello, this is a p tag.<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>Hello, this is a p tag.<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><br></code></pre></td></tr></table></figure><p>CSS代码：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs css"><span class="hljs-selector-tag">p</span> &#123;<br>  <span class="hljs-attribute">color</span>: aqua;<br>    <span class="hljs-attribute">font-weight</span>: bold;<br>&#125;<br></code></pre></td></tr></table></figure><p>显示效果<br><img src="https://yuki-picgo-img.oss-cn-beijing.aliyuncs.com/vscode-img/20220405164441.png" alt="20220405164441"></p><p><strong>②id选择器</strong><br>HTML代码：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>Hello, this is a p tag.<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>Hello, this is a p tag.<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">p</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;IDselect&quot;</span>&gt;</span>Hello, this is a p tag.<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>Hello, this is a p tag.<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>Hello, this is a p tag.<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><br></code></pre></td></tr></table></figure><p>CSS代码：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs css"><span class="hljs-selector-tag">p</span> &#123;<br>  <span class="hljs-attribute">color</span>: aqua;<br>    <span class="hljs-attribute">font-weight</span>: bold;<br>&#125;<br><span class="hljs-selector-id">#IDselect</span>&#123;<br>    <span class="hljs-attribute">color</span>: chocolate;<br>&#125;<br></code></pre></td></tr></table></figure><p>显示效果：<br><img src="https://yuki-picgo-img.oss-cn-beijing.aliyuncs.com/vscode-img/20220405164828.png" alt="20220405164828"></p><p><strong>③类选择器</strong><br>HTML代码：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;one&quot;</span>&gt;</span><span class="hljs-symbol">&amp;nbsp;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;one&quot;</span>&gt;</span><span class="hljs-symbol">&amp;nbsp;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;one&quot;</span>&gt;</span><span class="hljs-symbol">&amp;nbsp;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br></code></pre></td></tr></table></figure><p>CSS代码：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs CSS"><span class="hljs-selector-class">.one</span>&#123;<br>    <span class="hljs-attribute">border</span>: <span class="hljs-number">1px</span> solid black;<br>    <span class="hljs-attribute">width</span>: <span class="hljs-number">100px</span>;<br>    <span class="hljs-attribute">height</span>: <span class="hljs-number">100px</span>;<br>    <span class="hljs-attribute">background-color</span>: lightgreen;<br>    <span class="hljs-attribute">margin-top</span>: <span class="hljs-number">5px</span>;<br><br>&#125;<br></code></pre></td></tr></table></figure><p>显示效果：<br><img src="https://yuki-picgo-img.oss-cn-beijing.aliyuncs.com/vscode-img/20220405165134.png" alt="20220405165134"></p><p>CSS盒子模型（套娃）<br><img src="https://yuki-picgo-img.oss-cn-beijing.aliyuncs.com/vscode-img/20220405171505.png" alt="20220405171505"><br> <img src="https://yuki-picgo-img.oss-cn-beijing.aliyuncs.com/vscode-img/20220405171702.png" alt="20220405171702"></p><ul><li>绝对定位：position:absolute;</li><li>绝对定位：position:relative;<br><img src="https://yuki-picgo-img.oss-cn-beijing.aliyuncs.com/vscode-img/20220405173405.png" alt="20220405173405"></li></ul><p><strong>水果库存静态页面</strong></p><h2 id="第二章、JavaScript"><a href="#第二章、JavaScript" class="headerlink" title="第二章、JavaScript"></a>第二章、JavaScript</h2><h3 id="第一节、JavaScript简介"><a href="#第一节、JavaScript简介" class="headerlink" title="第一节、JavaScript简介"></a>第一节、JavaScript简介</h3><h5 id="1、起源"><a href="#1、起源" class="headerlink" title="1、起源"></a>1、起源</h5><p>在<font color = blue>1995</font>年时，由Netscape公司的Brendan Eich，在网景导航者浏览器上首次设计实现而成。Netscape在最初将其脚本语言命名为LiveScript，因为Netscape与Sun合作，网景公司管理层希望它外观看起来像Java，因此取名为JavaScript。</p><h5 id="2、特性"><a href="#2、特性" class="headerlink" title="2、特性"></a>2、特性</h5><p><strong>①脚本语言</strong><br>JavaScript是一种解释型的脚本语言。不同于C、C++、Java等语言先编译后执行, JavaScript不会产生编译出来的字节码文件，而是在程序的运行过程中对源文件逐行进行解释。</p><p><strong>②基于对象</strong><br>JavaScript是一种基于对象的脚本语言，它不仅可以创建对象，也能使用现有的对象。但是面向对象的三大特性：『封装』、『继承』、『多态』中，JavaScript能够实现封装，可以模拟继承，不支持多态，所以它不是一门面向对象的编程语言。</p><p><strong>③弱类型</strong><br>JavaScript中也有明确的数据类型，但是声明一个变量后它可以接收任何类型的数据，并且会在程序执行过程中根据上下文自动转换类型。</p><p><strong>④事件驱动</strong><br>JavaScript是一种采用事件驱动的脚本语言，它不需要经过Web服务器就可以对用户的输入做出响应。</p><p><strong>⑤跨平台性</strong><br>JavaScript脚本语言不依赖于操作系统，仅需要浏览器的支持。因此一个JavaScript脚本在编写后可以带到任意机器上使用，前提是机器上的浏览器支持JavaScript脚本语言。目前JavaScript已被大多数的浏览器所支持。</p><h3 id="第二节、HelloWorld"><a href="#第二节、HelloWorld" class="headerlink" title="第二节、HelloWorld"></a>第二节、HelloWorld</h3><p><strong>1、功能效果图</strong><br><img src="https://yuki-picgo-img.oss-cn-beijing.aliyuncs.com/vscode-img/20220405172546.png" alt="20220405172546"></p><p><strong>2、代码实现</strong></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-keyword">html</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">html</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">head</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">charset</span>=<span class="hljs-string">&quot;utf-8&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">title</span>&gt;</span>HelloWorld<span class="hljs-tag">&lt;/<span class="hljs-name">title</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">head</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span><br><span class="hljs-comment">&lt;!-- 在HTML代码中定义一个按钮 --&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">button</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;button&quot;</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;helloBtn&quot;</span>&gt;</span>SayHello<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span><br><br><span class="hljs-comment">&lt;!-- 在script标签中编写JavaScript代码 --&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text/javascript&quot;</span>&gt;</span><span class="language-javascript"></span><br><span class="language-javascript"></span><br><span class="language-javascript"><span class="hljs-comment">// document对象代表整个HTML文档</span></span><br><span class="language-javascript"><span class="hljs-comment">// document对象调用getElementById()方法表示根据id查找对应的元素对象</span></span><br><span class="language-javascript"><span class="hljs-keyword">var</span> btnElement = <span class="hljs-variable language_">document</span>.<span class="hljs-title function_">getElementById</span>(<span class="hljs-string">&quot;helloBtn&quot;</span>);</span><br><span class="language-javascript"></span><br><span class="language-javascript"><span class="hljs-comment">// 给按钮元素对象绑定单击响应函数</span></span><br><span class="language-javascript">btnElement.<span class="hljs-property">onclick</span> = <span class="hljs-keyword">function</span>(<span class="hljs-params"></span>)&#123;</span><br><span class="language-javascript"></span><br><span class="language-javascript"><span class="hljs-comment">// 弹出警告框</span></span><br><span class="language-javascript"><span class="hljs-title function_">alert</span>(<span class="hljs-string">&quot;hello&quot;</span>);</span><br><span class="language-javascript">&#125;;</span><br><span class="language-javascript"></span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">html</span>&gt;</span><br></code></pre></td></tr></table></figure><h3 id="第三节、JavaScript基本语法"><a href="#第三节、JavaScript基本语法" class="headerlink" title="第三节、JavaScript基本语法"></a>第三节、JavaScript基本语法</h3><h4 id="1、JavaScript代码嵌入方式"><a href="#1、JavaScript代码嵌入方式" class="headerlink" title="1、JavaScript代码嵌入方式"></a>1、JavaScript代码嵌入方式</h4><p><strong>①HTML文档内</strong></p><ul><li>JavaScript代码要写在script标签内</li><li>script标签可以写在文档内的任意位置</li><li>为了能够方便查询或操作HTML标签（元素）script标签可以写在body标签后面</li></ul><p>可以参考简化版的HelloWorld</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-comment">&lt;!-- 在HBuilderX中，script标签通过打字“sc”两个字母就可以直接完整生成 --&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text/javascript&quot;</span>&gt;</span><span class="language-javascript"></span><br><span class="language-javascript"></span><br><span class="language-javascript"><span class="hljs-comment">// 下面是同样实现HelloWorld功能的简化版代码</span></span><br><span class="language-javascript"><span class="hljs-variable language_">document</span>.<span class="hljs-title function_">getElementById</span>(<span class="hljs-string">&quot;helloBtn&quot;</span>).<span class="hljs-property">onclick</span> = <span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) &#123;</span><br><span class="language-javascript"><span class="hljs-title function_">alert</span>(<span class="hljs-string">&quot;Hello simple&quot;</span>);</span><br><span class="language-javascript">&#125;;</span><br><span class="language-javascript"></span><br><span class="language-javascript"></span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br></code></pre></td></tr></table></figure><p><strong>②引入外部JavaScript文档</strong><br>在script标签内通过src属性指定外部xxx.js文件的路径即可。但是要注意以下三点：</p><ul><li>引用外部JavaScript文件的script标签里面不能写JavaScript代码</li><li>先引入，再使用</li><li>script标签不能写成单标签<br><img src="https://yuki-picgo-img.oss-cn-beijing.aliyuncs.com/vscode-img/20220405210934.png" alt="20220405210934"><br>引入方式如下：<figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span><br><br><span class="hljs-comment">&lt;!-- 使用script标签的src属性引用外部JavaScript文件，和Java中的import语句类似 --&gt;</span><br><span class="hljs-comment">&lt;!-- 引用外部JavaScript文件的script标签里面不能写JavaScript代码 --&gt;</span><br><span class="hljs-comment">&lt;!-- 引用外部JavaScript文件的script标签不能改成单标签 --&gt;</span><br><span class="hljs-comment">&lt;!-- 外部JavaScript文件一定要先引入再使用 --&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;/.idea/static/scripts/out.js&quot;</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text/javascript&quot;</span> <span class="hljs-attr">charset</span>=<span class="hljs-string">&quot;utf-8&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br><br><span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text/javascript&quot;</span>&gt;</span><span class="language-javascript"></span><br><span class="language-javascript"></span><br><span class="language-javascript"><span class="hljs-comment">// 调用外部JavaScript文件中声明的方法</span></span><br><span class="language-javascript"><span class="hljs-title function_">showMessage</span>();</span><br><span class="language-javascript"></span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br></code></pre></td></tr></table></figure></li></ul><h4 id="2、声明和使用变量"><a href="#2、声明和使用变量" class="headerlink" title="2、声明和使用变量"></a>2、声明和使用变量</h4><p><strong>①JavaScript数据类型</strong></p><ul><li>基本数据类型<ul><li>数值型：JavaScript不区分整数、小数</li><li>字符串：JavaScript不区分字符、字符串；单引号、双引号意思一样。</li><li>布尔型：true、false</li></ul></li></ul><p>在JavaScript中，其他类型和布尔类型的自动转换。</p><p>true：非零的数值，非空字符串，非空对象</p><p>false：零，空字符串，null，undefined</p><p>例如：”false”放在if判断中</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-comment">// &quot;false&quot;是一个非空字符串，直接放在if判断中会被当作『真』处理</span><br><span class="hljs-keyword">if</span>(<span class="hljs-string">&quot;false&quot;</span>)&#123;<br><span class="hljs-title function_">alert</span>(<span class="hljs-string">&quot;true&quot;</span>);<br>&#125;<span class="hljs-keyword">else</span>&#123;<br><span class="hljs-title function_">alert</span>(<span class="hljs-string">&quot;false&quot;</span>);<br>&#125;<br></code></pre></td></tr></table></figure><ul><li>引用类型<ul><li>所有new出来的对象</li><li>用[]声明的数组</li><li>用{}声明的对象</li></ul></li></ul><p><strong>②变量</strong></p><ul><li><p>关键字：var</p></li><li><p>数据类型：JavaScript变量可以接收任意类型的数据</p></li><li><p>标识符：严格区分大小写</p></li><li><p>变量使用规则</p><ul><li>如果使用了一个没有声明的变量，那么会在运行时报错<br>Uncaught ReferenceError: b is not defined</li><li>如果声明一个变量没有初始化，那么这个变量的值就是undefined</li></ul></li></ul><h4 id="3、函数"><a href="#3、函数" class="headerlink" title="3、函数"></a>3、函数</h4><p><strong>①内置函数</strong><br>内置函数：系统已经声明好了可以直接使用的函数。</p><p>[1]弹出警告框</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-title function_">alert</span>(<span class="hljs-string">&quot;警告框内容&quot;</span>);<br></code></pre></td></tr></table></figure><p>[2]弹出确认框<br>用户点击『确定』返回true，点击『取消』返回false</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">var</span> result = <span class="hljs-title function_">confirm</span>(<span class="hljs-string">&quot;老板，你真的不加个钟吗？&quot;</span>);<br><span class="hljs-keyword">if</span>(result) &#123;<br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;老板点了确定，表示要加钟&quot;</span>);<br>&#125;<span class="hljs-keyword">else</span>&#123;<br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;老板点了确定，表示不加钟&quot;</span>);<br>&#125;<br></code></pre></td></tr></table></figure><p>[3]在控制台打印日志</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;日志内容&quot;</span>);<br></code></pre></td></tr></table></figure><p><img src="https://yuki-picgo-img.oss-cn-beijing.aliyuncs.com/vscode-img/20220405212430.png" alt="20220405212430"></p><p><strong>②声明函数</strong><br>写法1：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">function</span> <span class="hljs-title function_">sum</span>(<span class="hljs-params">a, b</span>) &#123;<br><span class="hljs-keyword">return</span> a+b;<br>&#125;<br></code></pre></td></tr></table></figure><p>写法2：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">var</span> total = <span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) &#123;<br><span class="hljs-keyword">return</span> a+b;<br>&#125;;<br></code></pre></td></tr></table></figure><p>写法2可以这样解读：声明一个函数，相当于创建了一个『函数对象』，将这个对象的『引用』赋值给变量total。最后加的分号不是给函数声明加的，而是给整体的赋值语句加的分号。</p><p><strong>③调用函数</strong><br>JavaScript中函数本身就是一种对象，函数名就是这个<font color = blue>『对象』</font>的<font color = blue>『引用』</font>。而调用函数的格式是：<font color = blue>函数引用()</font>。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">function</span> <span class="hljs-title function_">sum</span>(<span class="hljs-params">a, b</span>) &#123;<br><span class="hljs-keyword">return</span> a+b;<br>&#125;<br><br><span class="hljs-keyword">var</span> result = <span class="hljs-title function_">sum</span>(<span class="hljs-number">2</span>, <span class="hljs-number">3</span>);<br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;result=&quot;</span>+result);<br></code></pre></td></tr></table></figure><p>或</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">var</span> total = <span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) &#123;<br><span class="hljs-keyword">return</span> a+b;<br>&#125;<br><br><span class="hljs-keyword">var</span> totalResult = <span class="hljs-title function_">total</span>(<span class="hljs-number">3</span>,<span class="hljs-number">6</span>);<br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;totalResult=&quot;</span>+totalResult);<br></code></pre></td></tr></table></figure><h4 id="4、对象"><a href="#4、对象" class="headerlink" title="4、对象"></a>4、对象</h4><p>JavaScript中没有『类』的概念，对于系统内置的对象可以直接创建使用。</p><p><strong>①使用new关键字创建对象</strong></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-comment">// 创建对象</span><br><span class="hljs-keyword">var</span> obj01 = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Object</span>();<br><br><span class="hljs-comment">// 给对象设置属性和属性值</span><br>obj01.<span class="hljs-property">stuName</span> = <span class="hljs-string">&quot;tom&quot;</span>;<br>obj01.<span class="hljs-property">stuAge</span> = <span class="hljs-number">20</span>;<br>obj01.<span class="hljs-property">stuSubject</span> = <span class="hljs-string">&quot;java&quot;</span>;<br><br><span class="hljs-comment">// 在控制台输出对象</span><br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(obj01);<br></code></pre></td></tr></table></figure><p><strong>②使用{}创建对象</strong></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-comment">// 创建对象</span><br><span class="hljs-keyword">var</span> obj02 = &#123;<br><span class="hljs-string">&quot;soldierName&quot;</span>:<span class="hljs-string">&quot;john&quot;</span>,<br><span class="hljs-string">&quot;soldierAge&quot;</span>:<span class="hljs-number">35</span>,<br><span class="hljs-string">&quot;soldierWeapon&quot;</span>:<span class="hljs-string">&quot;gun&quot;</span><br>&#125;;<br><br><span class="hljs-comment">// 在控制台输出对象</span><br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(obj02);<br></code></pre></td></tr></table></figure><p><strong>③给对象设置函数属性</strong></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-comment">// 创建对象</span><br><span class="hljs-keyword">var</span> obj01 = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Object</span>();<br><br><span class="hljs-comment">// 给对象设置属性和属性值</span><br>obj01.<span class="hljs-property">stuName</span> = <span class="hljs-string">&quot;tom&quot;</span>;<br>obj01.<span class="hljs-property">stuAge</span> = <span class="hljs-number">20</span>;<br>obj01.<span class="hljs-property">stuSubject</span> = <span class="hljs-string">&quot;java&quot;</span>;<br><br>obj01.<span class="hljs-property">study</span> = <span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) &#123;<br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-variable language_">this</span>.<span class="hljs-property">stuName</span> + <span class="hljs-string">&quot; is studying&quot;</span>);<br>&#125;;<br><br><span class="hljs-comment">// 在控制台输出对象</span><br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(obj01);<br><span class="hljs-comment">// 调用函数</span><br>obj01.<span class="hljs-title function_">study</span>();<br><br></code></pre></td></tr></table></figure><p>或</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-comment">// 创建对象</span><br><span class="hljs-keyword">var</span> obj02 = &#123;<br><span class="hljs-string">&quot;soldierName&quot;</span>:<span class="hljs-string">&quot;john&quot;</span>,<br><span class="hljs-string">&quot;soldierAge&quot;</span>:<span class="hljs-number">35</span>,<br><span class="hljs-string">&quot;soldierWeapon&quot;</span>:<span class="hljs-string">&quot;gun&quot;</span>,<br><span class="hljs-string">&quot;soldierShoot&quot;</span>:<span class="hljs-keyword">function</span>(<span class="hljs-params"></span>)&#123;<br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-variable language_">this</span>.<span class="hljs-property">soldierName</span> + <span class="hljs-string">&quot; is using &quot;</span> + <span class="hljs-variable language_">this</span>.<span class="hljs-property">soldierWeapon</span>);<br>&#125;<br>&#125;;<br><br><span class="hljs-comment">// 在控制台输出对象</span><br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(obj02);<br><span class="hljs-comment">// 调用函数</span><br>obj02.<span class="hljs-title function_">soldierShoot</span>();<br></code></pre></td></tr></table></figure><p><strong>④this关键字</strong><br>this关键字只有两种情况：</p><ul><li>在函数外面：this关键字指向window对象（代表当前浏览器窗口）</li><li>在函数里面：this关键字指向调用函数的对象<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><code class="hljs JS"><span class="hljs-comment">// 直接打印this</span><br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-variable language_">this</span>);<br><br><span class="hljs-comment">// 函数中的this</span><br><span class="hljs-comment">// 1.声明函数</span><br><span class="hljs-keyword">function</span> <span class="hljs-title function_">getName</span>(<span class="hljs-params"></span>) &#123;<br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-variable language_">this</span>.<span class="hljs-property">name</span>);<br>&#125;<br><br><span class="hljs-comment">// 2.创建对象</span><br><span class="hljs-keyword">var</span> obj01 = &#123;<br><span class="hljs-string">&quot;name&quot;</span>:<span class="hljs-string">&quot;tom&quot;</span>,<br><span class="hljs-string">&quot;getName&quot;</span>:getName<br>&#125;;<br><span class="hljs-keyword">var</span> obj02 = &#123;<br><span class="hljs-string">&quot;name&quot;</span>:<span class="hljs-string">&quot;jerry&quot;</span>,<br><span class="hljs-string">&quot;getName&quot;</span>:getName<br>&#125;;<br><br><span class="hljs-comment">// 3.调用函数</span><br>obj01.<span class="hljs-title function_">getName</span>();<br>obj02.<span class="hljs-title function_">getName</span>();<br></code></pre></td></tr></table></figure></li></ul><h4 id="5、数组"><a href="#5、数组" class="headerlink" title="5、数组"></a>5、数组</h4><p><strong>①使用new关键字创建数组</strong></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-comment">// 1.创建数组对象</span><br><span class="hljs-keyword">var</span> arr01 = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Array</span>();<br><br><span class="hljs-comment">// 2.压入数据</span><br>arr01.<span class="hljs-title function_">push</span>(<span class="hljs-string">&quot;apple&quot;</span>);<br>arr01.<span class="hljs-title function_">push</span>(<span class="hljs-string">&quot;orange&quot;</span>);<br>arr01.<span class="hljs-title function_">push</span>(<span class="hljs-string">&quot;banana&quot;</span>);<br>arr01.<span class="hljs-title function_">push</span>(<span class="hljs-string">&quot;grape&quot;</span>);<br><br><span class="hljs-comment">// 3.遍历数组</span><br><span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> i = <span class="hljs-number">0</span>; i &lt; arr01.<span class="hljs-property">length</span>; i++) &#123;<br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(arr01[i]);<br>&#125;<br><br><span class="hljs-comment">// 4.数组元素反序</span><br>arr01.<span class="hljs-title function_">reverse</span>();<br><span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> i = <span class="hljs-number">0</span>; i &lt; arr01.<span class="hljs-property">length</span>; i++) &#123;<br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(arr01[i]);<br>&#125;<br><br><span class="hljs-comment">// 5.数组元素拼接成字符串</span><br><span class="hljs-keyword">var</span> arrStr = arr01.<span class="hljs-title function_">join</span>(<span class="hljs-string">&quot;,&quot;</span>);<br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(arrStr);<br><br><span class="hljs-comment">// 6.字符串拆分成数组</span><br><span class="hljs-keyword">var</span> arr02 = arrStr.<span class="hljs-title function_">split</span>(<span class="hljs-string">&quot;,&quot;</span>);<br><span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> i = <span class="hljs-number">0</span>; i &lt; arr02.<span class="hljs-property">length</span>; i++) &#123;<br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(arr02[i]);<br>&#125;<br><br><span class="hljs-comment">// 7.弹出数组中最后一个元素</span><br><span class="hljs-keyword">var</span> ele = arr01.<span class="hljs-title function_">pop</span>();<br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(ele);<br></code></pre></td></tr></table></figure><p><strong>②使用[]创建数组</strong></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-comment">// 8.使用[]创建数组</span><br><span class="hljs-keyword">var</span> arr03 = [<span class="hljs-string">&quot;cat&quot;</span>,<span class="hljs-string">&quot;dog&quot;</span>,<span class="hljs-string">&quot;tiger&quot;</span>];<br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(arr03);<br></code></pre></td></tr></table></figure><h4 id="6、JSON"><a href="#6、JSON" class="headerlink" title="6、JSON"></a>6、JSON</h4><p><strong>①JSON格式的用途</strong><br>在开发中凡是涉及到<font color = blue>『跨平台数据传输』</font>，JSON格式一定是首选。</p><p><strong>②JSON格式的说明</strong></p><ul><li>JSON数据两端要么是<font color = blue>{}</font>，要么是<font color = blue>[]</font></li><li><font color = blue>{}</font>定义JSON对象</li><li><font color = blue>[]</font>定义JSON数组</li><li>JSON对象的格式是：<figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs json"><span class="hljs-punctuation">&#123;</span>key<span class="hljs-punctuation">:</span>value<span class="hljs-punctuation">,</span>key<span class="hljs-punctuation">:</span>value<span class="hljs-punctuation">,</span>...<span class="hljs-punctuation">,</span>key<span class="hljs-punctuation">:</span>value<span class="hljs-punctuation">&#125;</span><br></code></pre></td></tr></table></figure></li><li>JOSN数组的格式是：<figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs json"><span class="hljs-punctuation">[</span>value<span class="hljs-punctuation">,</span>value<span class="hljs-punctuation">,</span>...<span class="hljs-punctuation">,</span>value<span class="hljs-punctuation">]</span><br></code></pre></td></tr></table></figure></li><li>key的类型固定是字符串</li><li>value的类型可以是：<ul><li>基本数据类型</li><li>引用类型：JSON对象或JSON数组</li></ul></li></ul><p>正因为JSON格式中value部分还可以继续使用JSON对象或JSON数组，所以JSON格式是可以<font color = blue>『多层嵌套』</font>的，所以JSON格式不论多么复杂的数据类型都可以表达。</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><code class="hljs json"><span class="hljs-punctuation">&#123;</span><br><span class="hljs-attr">&quot;stuId&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-number">556</span><span class="hljs-punctuation">,</span><br><span class="hljs-attr">&quot;stuName&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-string">&quot;carl&quot;</span><span class="hljs-punctuation">,</span><br><span class="hljs-attr">&quot;school&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-punctuation">&#123;</span><br><span class="hljs-attr">&quot;schoolId&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-number">339</span><span class="hljs-punctuation">,</span><br><span class="hljs-attr">&quot;schoolName&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-string">&quot;atguigu&quot;</span><br><span class="hljs-punctuation">&#125;</span><span class="hljs-punctuation">,</span><br><span class="hljs-attr">&quot;subjectList&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-punctuation">[</span><br><span class="hljs-punctuation">&#123;</span><br><span class="hljs-attr">&quot;subjectName&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-string">&quot;java&quot;</span><span class="hljs-punctuation">,</span><br><span class="hljs-attr">&quot;subjectScore&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-number">50</span><br><span class="hljs-punctuation">&#125;</span><span class="hljs-punctuation">,</span><br><span class="hljs-punctuation">&#123;</span><br><span class="hljs-attr">&quot;subjectName&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-string">&quot;PHP&quot;</span><span class="hljs-punctuation">,</span><br><span class="hljs-attr">&quot;subjectScore&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-number">35</span><br><span class="hljs-punctuation">&#125;</span><span class="hljs-punctuation">,</span><br><span class="hljs-punctuation">&#123;</span><br><span class="hljs-attr">&quot;subjectName&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-string">&quot;python&quot;</span><span class="hljs-punctuation">,</span><br><span class="hljs-attr">&quot;subjectScore&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-number">24</span><br><span class="hljs-punctuation">&#125;</span><br><span class="hljs-punctuation">]</span><span class="hljs-punctuation">,</span><br><span class="hljs-attr">&quot;teacherMap&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-punctuation">&#123;</span><br><span class="hljs-attr">&quot;aaa&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-punctuation">&#123;</span><br><span class="hljs-attr">&quot;teacherName&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-string">&quot;zhangsan&quot;</span><span class="hljs-punctuation">,</span><br><span class="hljs-attr">&quot;teacherAge&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-number">20</span><br><span class="hljs-punctuation">&#125;</span><span class="hljs-punctuation">,</span><br><span class="hljs-attr">&quot;bbb&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-punctuation">&#123;</span><br><span class="hljs-attr">&quot;teacherName&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-string">&quot;zhangsanfeng&quot;</span><span class="hljs-punctuation">,</span><br><span class="hljs-attr">&quot;teacherAge&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-number">108</span><br><span class="hljs-punctuation">&#125;</span><span class="hljs-punctuation">,</span><br><span class="hljs-attr">&quot;ccc&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-punctuation">&#123;</span><br><span class="hljs-attr">&quot;teacherName&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-string">&quot;zhangwuji&quot;</span><span class="hljs-punctuation">,</span><br><span class="hljs-attr">&quot;teacherAge&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-number">25</span><br><span class="hljs-punctuation">&#125;</span><br><span class="hljs-punctuation">&#125;</span><br><span class="hljs-punctuation">&#125;</span><br></code></pre></td></tr></table></figure><p><strong>③JSON对象和JSON字符串互转</strong><br>[1]JSON对象转JSON字符串</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">var</span> jsonObj = &#123;<span class="hljs-string">&quot;stuName&quot;</span>:<span class="hljs-string">&quot;tom&quot;</span>,<span class="hljs-string">&quot;stuAge&quot;</span>:<span class="hljs-number">20</span>&#125;;<br><span class="hljs-keyword">var</span> jsonStr = <span class="hljs-title class_">JSON</span>.<span class="hljs-title function_">stringify</span>(jsonObj);<br><br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-keyword">typeof</span> jsonObj); <span class="hljs-comment">// object</span><br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-keyword">typeof</span> jsonStr); <span class="hljs-comment">// string</span><br></code></pre></td></tr></table></figure><p>[2]JSON字符串转JSON对象</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs js">jsonObj = <span class="hljs-title class_">JSON</span>.<span class="hljs-title function_">parse</span>(jsonStr);<br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(jsonObj); <span class="hljs-comment">// &#123;stuName: &quot;tom&quot;, stuAge: 20&#125;</span><br></code></pre></td></tr></table></figure><h4 id="第四节、DOM"><a href="#第四节、DOM" class="headerlink" title="第四节、DOM"></a>第四节、DOM</h4><h5 id="1、概念"><a href="#1、概念" class="headerlink" title="1、概念"></a>1、概念</h5><p><strong>①名词解释</strong><br>DOM是<font color = blue>D</font>ocument <font color = blue>O</font>bject <font color = blue>M</font>odel的缩写，意思是『文档对象模型』——将HTML文档抽象成模型，再封装成对象方便用程序操作。<br>这是一种非常常用的编程思想：将现实世界的事物抽象成模型，这样就非常容易使用对象来量化的描述现实事物，从而把生活中的问题转化成一个程序问题，最终实现用应用软件协助解决现实问题。而在这其中<font color = blue>『模型』</font>就是那个连通现实世界和代码世界的桥梁。</p><p><strong>②DOM树</strong><br>浏览器把HTML文档从服务器上下载下来之后就开始按照<font color = blue>『从上到下』</font>的顺序<font color = blue>『读取HTML标签』</font>。每一个标签都会被封装成一个<font color = blue>『对象』</font>。<br>而第一个读取到的肯定是根标签html，然后是它的子标签head，再然后是head标签里的子标签……所以从html标签开始，整个文档中的所有标签都会根据它们之间的<font color = blue>『父子关系』</font>被放到一个<font color = blue>『树形结构』</font>的对象中。<br><img src="https://yuki-picgo-img.oss-cn-beijing.aliyuncs.com/vscode-img/20220405214058.png" alt="20220405214058"><br>这个包含了所有标签对象的整个树形结构对象就是JavaScript中的一个<font color = blue>可以直接使用的内置对象：document</font>。<br>例如，下面的标签结构：<br><img src="https://yuki-picgo-img.oss-cn-beijing.aliyuncs.com/vscode-img/20220405214149.png" alt="20220405214149"><br>会被解析为：<br><img src="https://yuki-picgo-img.oss-cn-beijing.aliyuncs.com/vscode-img/20220405214202.png" alt="20220405214202"></p><h5 id="2、具体概念"><a href="#2、具体概念" class="headerlink" title="2、具体概念"></a>2、具体概念</h5><p><strong>①各个组成部分的类型</strong><br>整个文档中的一切都可以看做Node。各个具体组成部分的具体类型可以看做Node类型的子类。</p><blockquote><p>其实严格来说，JavaScript并不支持真正意义上的『继承』，这里我们借用Java中的『继承』概念，从逻辑上来帮助我们理解各个类型之间的关系。</p></blockquote><table><thead><tr><th>组成部分</th><th>节点类型</th><th>具体类型</th></tr></thead><tbody><tr><td>整个文档</td><td>文档节点</td><td>Document</td></tr><tr><td>HTML标签</td><td>元素节点</td><td>Element</td></tr><tr><td>HTML标签内的文本</td><td>文本节点</td><td>Text</td></tr><tr><td>HTML标签内的属性</td><td>属性节点</td><td>Attr</td></tr><tr><td>注释</td><td>注释节点</td><td>Comment</td></tr></tbody></table><p><strong>②父子关系</strong><br><img src="https://yuki-picgo-img.oss-cn-beijing.aliyuncs.com/vscode-img/20220405214452.png" alt="20220405214452"></p><p><strong>③先辈后代关系</strong><br><img src="https://yuki-picgo-img.oss-cn-beijing.aliyuncs.com/vscode-img/20220405214509.png" alt="20220405214509"></p><h5 id="3、DOM操作"><a href="#3、DOM操作" class="headerlink" title="3、DOM操作"></a>3、DOM操作</h5><p>由于实际开发时基本上都是使用JavaScript的各种框架来操作，而框架中的操作方式和我们现在看到的原生操作完全不同，所以下面罗列的API仅供参考，不做要求。</p><p><strong>①在整个文档范围内查询元素节点</strong></p><table><thead><tr><th>功能</th><th>API</th><th>返回值</th></tr></thead><tbody><tr><td>根据id值查询</td><td>document.getElementById(“id值”)</td><td>一个具体的元素节</td></tr><tr><td>根据标签名查询</td><td>document.getElementsByTagName(“标签名”)</td><td>元素节点数组</td></tr><tr><td>根据name属性值查询</td><td>document.getElementsByName(“name值”)</td><td>元素节点数组</td></tr></tbody></table><p><strong>②在具体元素节点范围内查找子节点</strong></p><table><thead><tr><th>功能</th><th>API</th><th>返回值</th></tr></thead><tbody><tr><td>查找全部子节点</td><td>element.childNodes【W3C考虑换行，IE≤8不考虑】</td><td>节点数组</td></tr><tr><td>查找第一个子节点</td><td>element.firstChild【W3C考虑换行，IE≤8不考虑】</td><td>节点对象</td></tr><tr><td>查找最后一个子节点</td><td>element.lastChild【W3C考虑换行，IE≤8不考虑】</td><td>节点对象</td></tr></tbody></table><p><strong>③查找指定元素节点的父节点</strong></p><table><thead><tr><th>功能</th><th>API</th><th>返回值</th></tr></thead><tbody><tr><td>查找指定元素节点的父节点</td><td>element.parentNode</td><td>节点对象</td></tr></tbody></table><p><strong>④查找指定元素节点的兄弟节点</strong></p><table><thead><tr><th>功能</th><th>API</th><th>返回值</th></tr></thead><tbody><tr><td>查找前一个兄弟节点</td><td>node.previousSibling【W3C考虑换行，IE≤8不考虑】</td><td>节点对象</td></tr><tr><td>查找后一个兄弟节点</td><td>node.nextSibling【W3C考虑换行，IE≤8不考虑】</td><td>节点对象</td></tr></tbody></table><p><strong>⑤属性操作</strong></p><table><thead><tr><th>需求</th><th>操作方式</th></tr></thead><tbody><tr><td>读取属性值</td><td>元素对象.属性名</td></tr><tr><td>修改属性值</td><td>元素对象.属性名&#x3D;新的属性值</td></tr></tbody></table><p><strong>⑥文本操作</strong></p><table><thead><tr><th>需求</th><th>操作方式</th></tr></thead><tbody><tr><td>读取文本值</td><td>element.firstChild.nodeValue</td></tr><tr><td>修改文本值</td><td>element.firstChild.nodeValue&#x3D;新文本值</td></tr></tbody></table><p><strong>⑦DOM增删改操作</strong></p><table><thead><tr><th>API</th><th>功能</th></tr></thead><tbody><tr><td>document.createElement(“标签名”)</td><td>创建元素节点并返回，但不会自动添加到文档中</td></tr><tr><td>document.createTextNode(“文本值”)</td><td>创建文本节点并返回，但不会自动添加到文档中</td></tr><tr><td>element.appendChild(ele)</td><td>将ele添加到element所有子节点后面</td></tr><tr><td>parentEle.insertBefore(newEle,targetEle)</td><td>将newEle插入到targetEle前面</td></tr><tr><td>parentEle.replaceChild(newEle, oldEle)</td><td>用新节点替换原有的旧子节点</td></tr><tr><td>parentEle.removeChild(childNode)</td><td>删除指定的子节点</td></tr><tr><td>element.innerHTML</td><td>读写HTML代码</td></tr></tbody></table><h4 id="第五节、JavaScript事件驱动"><a href="#第五节、JavaScript事件驱动" class="headerlink" title="第五节、JavaScript事件驱动"></a>第五节、JavaScript事件驱动</h4><p><img src="https://yuki-picgo-img.oss-cn-beijing.aliyuncs.com/vscode-img/20220405215420.png" alt="20220405215420"></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-keyword">html</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">html</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">head</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">charset</span>=<span class="hljs-string">&quot;utf-8&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">title</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">title</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">style</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text/css&quot;</span>&gt;</span><span class="language-css"></span><br><span class="language-css"><span class="hljs-selector-id">#eventArea</span> &#123;</span><br><span class="language-css"><span class="hljs-attribute">border</span>: <span class="hljs-number">1px</span> solid black;</span><br><span class="language-css"><span class="hljs-attribute">width</span>: <span class="hljs-number">100px</span>;</span><br><span class="language-css"><span class="hljs-attribute">height</span>: <span class="hljs-number">100px</span>;</span><br><span class="language-css">&#125;</span><br><span class="language-css"></span><span class="hljs-tag">&lt;/<span class="hljs-name">style</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">head</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span><br><span class="hljs-comment">&lt;!-- 用div作为鼠标移动区域 --&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;eventArea&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><br><span class="hljs-comment">&lt;!-- 在p标签内显示鼠标坐标 --&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">p</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;showData&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text/javascript&quot;</span>&gt;</span><span class="language-javascript"></span><br><span class="language-javascript"></span><br><span class="language-javascript"><span class="hljs-comment">// 根据id找到div标签对应的元素对象</span></span><br><span class="language-javascript"><span class="hljs-keyword">var</span> divEle = <span class="hljs-variable language_">document</span>.<span class="hljs-title function_">getElementById</span>(<span class="hljs-string">&quot;eventArea&quot;</span>);</span><br><span class="language-javascript"></span><br><span class="language-javascript"><span class="hljs-comment">// 根据id找到p标签对应的元素对象</span></span><br><span class="language-javascript"><span class="hljs-keyword">var</span> pEle = <span class="hljs-variable language_">document</span>.<span class="hljs-title function_">getElementById</span>(<span class="hljs-string">&quot;showData&quot;</span>);</span><br><span class="language-javascript"></span><br><span class="language-javascript"><span class="hljs-comment">// 声明事件响应函数</span></span><br><span class="language-javascript"><span class="hljs-keyword">function</span> <span class="hljs-title function_">whenMouseMove</span>(<span class="hljs-params">event</span>)&#123;</span><br><span class="language-javascript">pEle.<span class="hljs-property">innerText</span> = event.<span class="hljs-property">clientX</span> + <span class="hljs-string">&quot; &quot;</span> + event.<span class="hljs-property">clientY</span>;</span><br><span class="language-javascript">&#125;</span><br><span class="language-javascript"></span><br><span class="language-javascript"><span class="hljs-comment">// 将事件响应函数赋值给对应的事件属性</span></span><br><span class="language-javascript"><span class="hljs-comment">// onmousemove表示在鼠标移动的时候</span></span><br><span class="language-javascript">divEle.<span class="hljs-property">onmousemove</span> = whenMouseMove;</span><br><span class="language-javascript"></span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">html</span>&gt;</span><br></code></pre></td></tr></table></figure><p>下面是简化的代码：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-variable language_">document</span>.<span class="hljs-title function_">getElementById</span>(<span class="hljs-string">&quot;eventArea&quot;</span>).<span class="hljs-property">onmousemove</span> = <span class="hljs-keyword">function</span> (<span class="hljs-params">event</span>)&#123;<br><span class="hljs-variable language_">document</span>.<span class="hljs-title function_">getElementById</span>(<span class="hljs-string">&quot;showData&quot;</span>).<span class="hljs-property">innerText</span> = event.<span class="hljs-property">clientX</span> + <span class="hljs-string">&quot; &quot;</span> + event.<span class="hljs-property">clientY</span>;<br>&#125;;<br></code></pre></td></tr></table></figure>]]></content>
    
    
    
    <tags>
      
      <tag>javaweb</tag>
      
      <tag>thyme leaf</tag>
      
      <tag>vue</tag>
      
      <tag>mvc</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Java</title>
    <link href="/2022/04/01/Java/"/>
    <url>/2022/04/01/Java/</url>
    
    <content type="html"><![CDATA[<p>尚硅谷Java入门</p><span id="more"></span><h1 id="编程入门"><a href="#编程入门" class="headerlink" title="编程入门"></a>编程入门</h1><h2 id="1、概述"><a href="#1、概述" class="headerlink" title="1、概述"></a>1、概述</h2><p>计算机包括<font color =red>硬件(hardware)</font>和<font color = red>软件(software)</font>两部分。硬件包括计算机中可以看得见的物理部分。而软件提供看不见的指令。这些指令控制硬件并且使得硬件完成特定的任务。</p><h3 id="程序设计"><a href="#程序设计" class="headerlink" title="程序设计"></a>程序设计</h3><p><strong>定义：</strong>创建（或开发）软件。软件包含了指令，告诉计算机做什么。<br><strong>应用场景：</strong>软件遍布我们周围。除了个人计算机，飞机、汽车、手机甚至烤面包机中，同样运行着软件。</p><h3 id="程序设计语言"><a href="#程序设计语言" class="headerlink" title="程序设计语言"></a>程序设计语言</h3><p>软件开发人员在称为程序设计语言的强大工具的帮助下创建软件。</p><h3 id="如何选择该学习哪种程序设计语言？"><a href="#如何选择该学习哪种程序设计语言？" class="headerlink" title="如何选择该学习哪种程序设计语言？"></a>如何选择该学习哪种程序设计语言？</h3><ul><li>程序设计语言有很多种，每种语言都是为了实现某个特定的目的而发明的。</li><li>你会困惑哪种语言是最好的。事实上，<font color = red>没有“最好”的语言。</font>每种语言都有它的长处和短处。</li><li>经验丰富的程序员知道各种语言擅长的应用场景，因此，会尽可能的掌握各种不同的程序设计语言。</li><li>如果你掌握了一种编程语言，应该会更容易上手其它的编程语言。关键是学习<font color = blue> 如何使用程序设计方法来解决问题。这也是本套课程的主旨。</font></li></ul><h2 id="2、计算机硬件介绍"><a href="#2、计算机硬件介绍" class="headerlink" title="2、计算机硬件介绍"></a>2、计算机硬件介绍</h2><h3 id="中央处理器"><a href="#中央处理器" class="headerlink" title="中央处理器"></a>中央处理器</h3><p><img src="https://yuki-picgo-img.oss-cn-beijing.aliyuncs.com/vscode-img/20220401224900.png" alt="20220401224900"><br><img src="https://yuki-picgo-img.oss-cn-beijing.aliyuncs.com/vscode-img/20220401224939.png" alt="20220401224939"><br><font color =red>冯·诺依曼体系结构</font>是现代计算机的基础，现在大多计算机仍是冯·诺依曼计算机的组织结构，只是作了一些改进而已，并没有从根本上突破冯体系结构的束缚。冯·诺依曼也因此被人们称为“计算机之父”。</p><ul><li><font color = blue>中央处理器(Central Processing Unit,CPU)</font>是计算机的大脑。它从内存中获取指令，然后执行这些指令。</li><li>包括：控制单元(control unit)和算术&#x2F;逻辑单元(arithmetic&#x2F;login unit)。<ul><li><font color =blue>控制单元：</font>用于控制和协调其他组件的动作。</li><li><font color =blue>算术&#x2F;逻辑单元：</font>用于完成数值运算(+、-、*、&#x2F;)和逻辑运算(比较)。</li></ul></li><li>每台计算机都有一个内部时钟，该时钟以固定速度发射电子脉冲。时钟速度越快，在给定的时间段内执行的指令就越多。速度的计量单位是<font color = blue>赫兹(Hz)，1Hz相当于每秒1个脉冲。</font>随着CPU速度不断提高，目前以<font color = blue >千兆赫(GHz)</font>来表述。</li><li>最初一个CPU只有一个核(core)。核是处理器中实现指令读取和执行的部分。一个多核CPU是一个具有两个或者更多独立核的组件。可提高CPU的处理能力。<br><img src="https://yuki-picgo-img.oss-cn-beijing.aliyuncs.com/vscode-img/20220401225456.png" alt="20220401225456"></li></ul><h3 id="存储设备"><a href="#存储设备" class="headerlink" title="存储设备"></a>存储设备</h3><ul><li>内存中的信息在断电时会丢失。那我们可以考虑将程序和数据永久的保存在存储设备上。当计算机确实需要这些数据时，再移入内存，因为从内存中读取比从存储设备读取要快得多。</li><li>存储设备主要有以下三种：<ul><li><font color = blue>磁盘驱动器</font><br>  每台计算机至少有一个硬盘驱动器。硬盘(hard disk)用于永久的保存数据和程序。</li><li><font color = blue>光盘驱动器(CD和DVD)</font><br>  CD的容量可达700MB。<br>  DVD的容量可达4.7GB。</li><li><font color = blue>USB闪存驱动器</font><br>  USB: Universal Serial Bus，通用串行总线。可以使用USB将打印机、数码相机、鼠标、外部硬盘驱动器连接到计算机上。<br>  USB闪存驱动器很小，可用于存储和传输数据的设备。<br>  hexop</li></ul></li></ul><h3 id="内存"><a href="#内存" class="headerlink" title="内存"></a>内存</h3><p><strong>比特(bit)和字节(byte)</strong></p><ul><li><p>在讨论内存前，先清楚数据是如何存储在计算机中的。</p></li><li><p>计算机就是一系列的电路开关。每个开关存在两种状态：关(off)和开(on)。如果电路是开的，它的值是1。如果电路是关的，它的值是0。</p></li><li><p><font color = blue>一个0或者一个1存储为一个比特(bit)，是计算机中最小的存储单位。</font></p></li><li><p><font color = blue>计算机中是最基本的存储单元是字节(byte) 。</font>每个字节由8个比特构成。</p></li><li><p>计算机的存储能力是以字节和多字节来衡量的。如下：</p><ul><li>千字节(kilobyte,KB) &#x3D; 1024B</li><li>兆字节(megabyte,MB) &#x3D; 1024KB</li><li>千兆字节(gigabyte,GB) &#x3D; 1024MB</li><li>万亿字节(terabyte,TB) &#x3D; 1024GB</li></ul></li><li><p>内存(也叫 Random-Access Memory,RAM)：由一个有序的字节序列组成，用于存储程序及程序需要的数据。<br><img src="https://yuki-picgo-img.oss-cn-beijing.aliyuncs.com/vscode-img/20220401230835.png" alt="20220401230835"></p></li><li><p><font color = red>一个程序和它的数据在被CPU行前必须移到计算机的内存中。</font></p></li><li><p>每个字节都有一个唯一的地址。见上图。使用这个地址确定字节的位置，以便于存储和获取数据。</p></li><li><p>一个计算机具有的RAM越多，它的运行速度越快，但是此规律是有限制的。</p></li><li><p>内存与CPU一样，也构建在表面嵌有数百万晶体管的硅半导体芯片上。但内存芯片更简单、更低速、更便宜。<br><img src="https://yuki-picgo-img.oss-cn-beijing.aliyuncs.com/vscode-img/20220401231004.png" alt="20220401231004"><br><img src="https://yuki-picgo-img.oss-cn-beijing.aliyuncs.com/vscode-img/20220401231118.png" alt="20220401231118"></p></li><li><p>实测发现：<font color = red>内存存取数据的速度比硬盘的存取速度快10倍</font>，在某些环境里，硬盘和内存之间的速度差距可能会更大。<font color = red>而CPU的速度比内存不知还要快多少倍。</font>当我们把程序从硬盘放到内存以后，CPU就直接在内存运行程序，这样比CPU直接在硬盘运行程序就要快很多。</p></li><li><p>内存解决了一部分CPU运行过快，而硬盘数据存取太慢的问题。 提高了我们的电脑的运行速度。内存就如同一条“高速车道”一般，数据由传输速度较慢的硬盘通过这条高速车道传送至CPU进行处理！</p></li><li><p><font color = red>但内存是带电存储的(一旦断电数据就会消失)，而且容量有限，所以要长时间储存程序或数据就需要使用硬盘。</font> </p></li><li><p>内存在这里起了两个作用：</p><ol><li>保存从硬盘读取的数据，提供给CPU使用</li><li>保存CPU的一些临时执行结果，以便CPU下次使用或保存到硬盘</li></ol></li></ul><h3 id="输入和输出设备"><a href="#输入和输出设备" class="headerlink" title="输入和输出设备"></a>输入和输出设备</h3><ul><li>常见的输入设备：键盘（keyboard）和鼠标（mouse）</li><li>常见的输出设备：显示器（monitor）和打印机（printer）</li><li>显示器屏幕分辨率：是指显示设备水平和垂直方向上显示的像素(px)数。<ul><li>分辨率可以手工设置。</li><li><font color =red>分辨率越高，图像越锐化、越清晰。</font></li></ul></li></ul><h3 id="通讯设备"><a href="#通讯设备" class="headerlink" title="通讯设备"></a>通讯设备</h3><ul><li>计算机可以通过通信设备进行联网。</li><li>常见的设备有：<blockquote><p><font color = blue>拨号调制解调器：</font>使用的是电话线，传输速度可达56 000bps(bps:每秒比特)<br><font color = blue>DSL（数字用户线）：</font>使用的也是电话线，但传输速度叫上面的快20倍<br><font color = blue>电缆调制解调器：</font>利用有线电视电缆进行数据传输，通常速度比DSL快。<br><font color = blue>网络接口卡（NIC）：</font>将计算机接入局域网（LAN）的设备。局域网通常用于大学、商业组织和政府组织。速度甚至可达1000Mbps<br><font color = blue>无线网络：</font>在家庭、商业和学校中极其常见。计算机可通过无线适配器连接到局域网或internet上。</p></blockquote></li></ul><h2 id="3、计算机发展史上的鼻祖"><a href="#3、计算机发展史上的鼻祖" class="headerlink" title="3、计算机发展史上的鼻祖"></a>3、计算机发展史上的鼻祖</h2><p>最近半个世纪以来，世界计算机科学界的重大进步，离不开图灵等人的理论奠基作用和多方面的开创性研究成果。图灵是当之无愧的计算机科学和人工智能之父。甚至认为，他在技术上的贡献及对未来世界的影响几乎可与牛顿、爱因斯坦等巨人比肩。<br>图灵论文中的“用有限的指令和有限的存储空间可算尽一切可算之物”理论让当时所有的科学家震惊。<br>美国计算机学会（ACM）的年度“图灵奖”，自从1966年设立以来，一直是世界计算机科学领域的最高荣誉，相当于计算机科学界的诺贝尔奖。至今，中国人只有姚期智院士获该奖项。<br><img src="https://yuki-picgo-img.oss-cn-beijing.aliyuncs.com/vscode-img/20220401232331.png" alt="20220401232331"><br>20世纪最重要的数学家之一，在现代计算机、博弈论、核武器和生化武器等诸多领域内有杰出建树的最伟大的科学全才之一，被后人称为“计算机之父”和“博弈论之父”。<br>计算机基本工作原理是存储程序和程序控制，它是由世界著名数学家冯·诺依曼提出的。<font color = blue>最简单的来说，冯诺依曼理论的要点是：数字计算机的数制采用二进制；计算机应该按照程序顺序执行。</font><br>同样有着“计算机之父”称号的冯·诺依曼的助手弗兰克尔在一封信中写到：“……计算机的基本概念属于图灵。按照我的看法，冯·诺依曼的基本作用是使世界认识了由图灵引入的计算机基本概念……”<br><img src="https://yuki-picgo-img.oss-cn-beijing.aliyuncs.com/vscode-img/20220401232451.png" alt="20220401232451"></p><p><strong>根据冯诺依曼体系结构构成的计算机，必须具有如下功能：</strong></p><ul><li>把需要的程序和数据送至计算机中。</li><li>必须具有长期记忆程序、数据、中间结果及最终运算结果的能力。</li><li>能够完成各种算术、逻辑运算和数据传送等数据加工处理的能力。</li><li>能够根据需要控制程序走向，并能根据指令控制机器的各部件协调操作。</li><li>能够按照要求将处理结果输出给用户。</li></ul><h2 id="4、操作系统"><a href="#4、操作系统" class="headerlink" title="4、操作系统"></a>4、操作系统</h2><ul><li>操作系统(Operating System)是运行在计算机上的最重要的程序，它可以管理和控制计算机的活动。</li><li>硬件、操作系统、应用程序和用户之间的关系如下图。</li><li>操作系统的主要任务：<blockquote><ul><li>控制和监视系统的活动</li><li>分配和调配系统资源</li><li>调度操作</li></ul></blockquote></li></ul><p><img src="https://yuki-picgo-img.oss-cn-beijing.aliyuncs.com/vscode-img/20220401232808.png" alt="20220401232808"></p><h2 id="5、万维网"><a href="#5、万维网" class="headerlink" title="5、万维网"></a>5、万维网</h2><p>万维网（World Wide Web,www,环球信息网）常简称为Web,发明者蒂姆·伯纳斯·李。分为Web客户端和Web服务器程序。 WWW可以让Web客户端（常用浏览器）访问浏览Web服务器上的页面。 是一个由许多互相链接的超文本组成的系统，通过互联网访问。在这个系统中，每个有用的事物，称为一样“资源”；并且由一个全局“统一资源标识符”（URI）标识；这些资源通过超文本传输协议（Hypertext Transfer Protocol）传送给用户，而后者通过点击链接来获得资源。<br><img src="https://yuki-picgo-img.oss-cn-beijing.aliyuncs.com/vscode-img/20220401232947.png" alt="20220401232947"><br>万维网是无数个网络站点和网页的集合，它们在一起构成了因特网Internet最主要的部分（因特网也包括电子邮件、Usenet以及新闻组）。它实际上是多媒体的集合，是由超级链接连接而成的。我们通常通过网络浏览器上网观看的，就是万维网的内容。</p><h1 id="第一章、Java语言概述"><a href="#第一章、Java语言概述" class="headerlink" title="第一章、Java语言概述"></a>第一章、Java语言概述</h1><p><strong><font color = red>Java基础是学习JavaEE、大数据、Android开发的基石！</font></strong><br><img src="https://yuki-picgo-img.oss-cn-beijing.aliyuncs.com/vscode-img/20220401235354.png" alt="20220401235354"><br><img src="https://yuki-picgo-img.oss-cn-beijing.aliyuncs.com/vscode-img/20220401235709.png" alt="20220401235709"><br><img src="https://yuki-picgo-img.oss-cn-beijing.aliyuncs.com/vscode-img/20220401235733.png" alt="20220401235733"><br><strong><font color =red>Java基础知识图解</font></strong><br><img src="https://yuki-picgo-img.oss-cn-beijing.aliyuncs.com/vscode-img/20220401235434.png" alt="20220401235434"></p><h2 id="Java基础课程概述"><a href="#Java基础课程概述" class="headerlink" title="Java基础课程概述"></a>Java基础课程概述</h2><p>第一部分：编程语言核心结构</p><h2 id="1、软件开发介绍"><a href="#1、软件开发介绍" class="headerlink" title="1、软件开发介绍"></a>1、软件开发介绍</h2><ul><li><p><strong>软件开发</strong><br>软件，即一系列按照特定顺序组织的计算机数据和指令的集合。有<strong>系统软件</strong>和<strong>应用软件</strong>之分。</p><p><font color = red > <strong>应用程序&#x3D;算法+数据结构</strong></font></p></li><li><p>人机交互方式</p><ul><li><strong>图形化界面(Graphical User Interface GUI)</strong></li><li><strong>命令行方式(Command Line Interface CLI)</strong> ：需要有一个控制台，输入特定的指令，让计算机完成一些操作。较为麻烦，需要记录住一些命令。</li></ul></li><li><p><strong>常用的DOS命令</strong></p><ul><li><strong>dir :</strong> 列出当前目录下的文件以及文件夹</li><li><strong>md :</strong> 创建目录</li><li><strong>rd :</strong> 删除目录</li><li><strong>cd :</strong> 进入指定目录</li><li><strong>cd.. :</strong> 退回到上一级目录</li><li><strong>cd:</strong> 退回到根目录</li><li><strong>del :</strong> 删除文件</li><li><strong>exit :</strong> 退出 dos 命令行</li><li><strong>补充：</strong> echo javase&gt;1.doc</li></ul></li><li><p><strong>常用快捷键</strong></p><ul><li>← →：移动光标</li><li>↑ ↓：调阅历史操作命令</li><li>Delete和Backspace：删除字符</li></ul><h2 id="2、计算机编程语言介绍"><a href="#2、计算机编程语言介绍" class="headerlink" title="2、计算机编程语言介绍"></a>2、计算机编程语言介绍</h2><ul><li>什么是计算机语言<ul><li>语言：是人与人之间用于沟通的一种方式。例如：中国人与中国人用普通话沟通。而中国人要和英国人交流，就要学习英语。</li><li><font color = red >计算机语言：人与计算机交流的方式。</font></br>如果人要与计算机交流，那么就要学习计算机语言。<br>计算机语言有很多种。如：C ,C++ ,Java ,PHP , Kotlin，Python，Scala等。</li></ul></li></ul></li><li><p><strong>第一代语言</strong></p><ul><li>机器语言。指令以二进制代码形式存在。</li></ul></li><li><p><strong>第二代语言</strong></p><ul><li>汇编语言。使用助记符表示一条机器指令。<br><img src="https://yuki-picgo-img.oss-cn-beijing.aliyuncs.com/vscode-img/20220402220658.png" alt="20220402220658"></li></ul></li><li><p><strong>第三代语言：高级语言</strong></p><ul><li>C、Pascal、Fortran面向过程的语言 </li><li>C++面向过程&#x2F;面向对象</li><li><strong>Java跨平台的纯面向对象的语言</strong></li><li>.NET跨语言的平台</li><li>Python、Scala…</li></ul></li></ul><h2 id="3、Java语言概述"><a href="#3、Java语言概述" class="headerlink" title="3、Java语言概述"></a>3、Java语言概述</h2><ul><li>是SUN(Stanford University Network，斯坦福大学网络公司 ) 1995年推出的一门高级编程语言。</li><li>是一种面向Internet的编程语言。Java一开始富有吸引力是因为Java程序可以在Web浏览器中运行。这些Java程序被称为Java小程序（applet）。applet使用现代的图形用户界面与Web用户进行交互。 applet内嵌在HTML代码中。</li><li>随着Java技术在web方面的不断成熟，已经成为Web应用程序的首选开发语言。</li><li>后台开发：Java、PHP、Python、Go、Node.js</li></ul><h3 id="Java简史"><a href="#Java简史" class="headerlink" title="Java简史"></a>Java简史</h3><ul><li>1991年 Green项目，开发语言最初命名为Oak (橡树)</li><li>1994年，开发组意识到Oak 非常适合于互联网</li><li>1996年，发布JDK 1.0，约8.3万个网页应用Java技术来制作</li><li>1997年，发布JDK 1.1，JavaOne会议召开，创当时全球同类会议规模之最</li><li>1998年，发布JDK 1.2，同年发布企业平台J2EE</li><li>1999年，Java分成J2SE、J2EE和J2ME，JSP&#x2F;Servlet技术诞生</li><li>2004年，<font color =red>发布里程碑式版本：JDK 1.5，为突出此版本的重要性，更名为JDK 5.0</font></li><li>J2SE -&gt; JavaSE，J2EE -&gt; JavaEE，J2ME -&gt; JavaME</li><li>2009年，Oracle公司收购SUN，交易价格74亿美元</li><li>2011年，发布JDK 7.0</li><li><font color =red>2014年，发布JDK 8.0，是继JDK 5.0以来变化最大的版本</font></li><li>2017年，发布JDK 9.0，最大限度实现模块化</li><li>2018年3月，发布JDK 10.0，版本号也称为18.3</li><li>2018年9月，发布JDK 11.0，版本号也称为18.9<br><img src="https://yuki-picgo-img.oss-cn-beijing.aliyuncs.com/vscode-img/20220402221543.png" alt="20220402221543"><br><strong><font color = red> Java技术体系平台 </font></strong><blockquote><p><strong><font color=red>Java SE(Java Standard Edition)标准版</font></strong><br>支持面向桌面级应用（如Windows下的应用程序）的Java平台，提供了完整的Java核心API，此版本以前称为J2SE<br><strong><font color=red>Java EE(Java Enterprise Edition)企业版</font></strong><br>是为开发企业环境下的应用程序提供的一套解决方案。该技术体系中包含的技术如<br>:Servlet 、Jsp等，主要针对于Web应用程序开发。版本以前称为J2EE<br><strong>Java ME(Java Micro Edition)小型版</strong><br>支持Java程序运行在移动终端（手机、PDA）上的平台，对Java API有所精简，并加入了针对移动终端的支持，此版本以前称为J2ME<br><strong>Java Card</strong><br>支持一些Java小程序（Applets）运行在小内存设备（如智能卡）上的平台</p></blockquote></li></ul><h3 id="Java在各领域的应用"><a href="#Java在各领域的应用" class="headerlink" title="Java在各领域的应用"></a>Java在各领域的应用</h3><ul><li>从Java的应用领域来分，Java语言的应用方向主要表现在以下几个方面：<ul><li><font color = red>企业级应用</font>：主要指复杂的大企业的软件系统、各种类型的网站。Java的安全机制以及它的跨平台的优势，使它在分布式系统领域开发中有广泛应用。应用领域包括金融、电信、交通、电子商务等。</li><li><font color = red>Android平台应用</font>：Android应用程序使用Java语言编写。Android开发水平的高低很大程度上取决于Java语言核心能力是否扎实。</li><li><font color = red>大数据平台开发</font>:各类框架有Hadoop，spark，storm，flink等，就这类技术生态圈来讲，还有各种中间件如flume，kafka，sqoop等等 ，这些框架以及工具大多数是用Java编写而成，但提供诸如Java，scala，Python，R等各种语言API供编程。</li><li>移动领域应用：主要表现在消费和嵌入式领域，是指在各种小型设备上的应用，包括手机、PDA、机顶盒、汽车通信设备等。</li></ul></li></ul><h3 id="Java语言的诞生"><a href="#Java语言的诞生" class="headerlink" title="Java语言的诞生"></a>Java语言的诞生</h3><p>java之父James Gosling团队在开发”Green”项目时，发现C缺少垃圾回收系统，还有可移植的安全性、分布程序设计和多线程功能。最后，他们想要一种易于移植到各种设备上的平台。<br>Java确实是从C语言和C++语言继承了许多成份，甚至可以将Java看成是类C语言发展和衍生的产物。比如Java语言的变量声明，操作符形式，参数传递，流程控制等方面和C语言、C++语言完全相同。但同时，Java是一个纯粹的面向对象的程序设计语言，它继承了C++语言面向对象技术的核心。Java舍弃了C语言中容易引起错误的指针（以引用取代）、运算符重载（operator overloading）、多重继承（以接口取代）等特性，增加了垃圾回收器功能用于回收不再被引用的对象所占据的内存空间。JDK1.5又引入了泛型编程（GenericProgramming）、类型安全的枚举、不定长参数和自动装&#x2F;拆箱<br><img src="https://yuki-picgo-img.oss-cn-beijing.aliyuncs.com/vscode-img/20220402222333.png" alt="20220402222333"></p><h3 id="主要特性"><a href="#主要特性" class="headerlink" title="主要特性"></a>主要特性</h3><ul><li><strong>Java语言是易学的。</strong> Java语言的语法与C语言和C++语言很接近，使得大多数程序员很容易学习和使用Java。</li><li><strong>Java语言是强制面向对象的。</strong> Java语言提供类、接口和继承等原语，为了简单起见，只支持类之间的单继承，但支持接口之间的多继承，并支持类与接口之间的实现机制（关键字为implements）。</li><li><strong>Java语言是分布式的。</strong> Java语言支持Internet应用的开发，在基本的Java应用编程接口中有一个网络应用编程接口（java net），它提供了用于网络应用编程的类库，包括URL、URLConnection、Socket、ServerSocket等。Java的RMI（远程方法激活）机制也是开发分布式应用的重要手段。</li><li><strong>Java语言是健壮的。</strong> Java的强类型机制、异常处理、垃圾的自动收集等是Java程序健壮性的重要保证。对指针的丢弃是Java的明智选择。</li><li><strong>Java语言是安全的。</strong> Java通常被用在网络环境中，为此，Java提供了一个安全机制以防恶意代码的攻击。如：安全防范机制（类ClassLoader），如分配不同的名字空间以防替代本地的同名类、字节代码检查。</li><li><strong>Java语言是体系结构中立的。</strong> Java程序（后缀为java的文件）在Java平台上被编译为体系结构中立的字节码格式（后缀为class的文件），然后可以在实现这个Java平台的任何系统中运行。</li><li><strong>Java语言是解释型的。</strong> 如前所述，Java程序在Java平台上被编译为字节码格式，然后可以在实现这个Java平台的任何系统的解释器中运行。</li><li><strong>Java是性能略高的。</strong> 与那些解释型的高级脚本语言相比，Java的性能还是较优的。</li><li><strong>Java语言是原生支持多线程的。</strong> 在Java语言中，线程是一种特殊的对象，它必须由Thread类或其子（孙）类来创建。</li></ul><h3 id="Java程序运行机制及运行过程"><a href="#Java程序运行机制及运行过程" class="headerlink" title="Java程序运行机制及运行过程"></a>Java程序运行机制及运行过程</h3><ul><li><strong><font color = red>Java语言的特点</font></strong><ul><li>特点一：面向对象 <ul><li>两个基本概念：类、对象</li><li>三大特性：封装、继承、多态</li></ul></li><li>特点二：健壮性<ul><li>吸收了C&#x2F;C++语言的优点，但去掉了其影响程序健壮性的部分（如指针、内存的申请与释放等），提供了一个相对安全的内存管理和访问机制</li></ul></li><li>特点三：跨平台性<ul><li>跨平台性：通过Java语言编写的应用程序在不同的系统平台上都可以运行。“Writeonce , Run Anywhere”</li><li>原理：只要在需要运行 java 应用程序的操作系统上，先安装一个Java虚拟机 (JVM <strong>J</strong>ava <strong>V</strong>irtual <strong>M</strong>achine) 即可。由JVM来负责Java程序在该系统中的运行。</li></ul></li></ul></li><li><strong><font color = red>Java语言的特点：跨平台性</font></strong><br><img src="https://yuki-picgo-img.oss-cn-beijing.aliyuncs.com/vscode-img/20220402223216.png" alt="20220402223216"><br>因为有了JVM，同一个Java 程序在三个不同的操作系统中都可以执行。这样就实现了Java 程序的跨平台性</li><li><strong><font color = red>Java两种核心机制</font></strong><ul><li>Java虚拟机 (Java Virtal Machine)</li><li>垃圾收集机制 (Garbage Collection)</li></ul></li></ul><p><strong><font color = red>核心机制—Java虚拟机</font></strong></p><ul><li><font color =blue>JVM是一个虚拟的计算机，具有指令集并使用不同的存储区域。负责执行指令，管理数据、内存、寄存器。</font></li><li>对于不同的平台，有不同的虚拟机。</li><li>只有某平台提供了对应的java虚拟机，java程序才可在此平台运行</li><li>Java虚拟机机制屏蔽了底层运行平台的差别，实现了“<font color = red>一次编译，到处运行</font>“<br><img src="https://yuki-picgo-img.oss-cn-beijing.aliyuncs.com/vscode-img/20220402223534.png" alt="20220402223534"><br><img src="https://yuki-picgo-img.oss-cn-beijing.aliyuncs.com/vscode-img/20220402223550.png" alt="20220402223550"></li></ul><p><strong><font color = red>核心机制—垃圾回收</font></strong></p><ul><li>不再使用的内存空间应回收—— 垃圾回收。<ul><li>在C&#x2F;C++等语言中，由程序员负责回收无用内存。</li><li>Java 语言消除了程序员回收无用内存空间的责任：它提供一种系统级线程跟踪存储空间的分配情况。并在JVM空闲时，检查并释放那些可被释放的存储空间。</li></ul></li><li>垃圾回收在Java程序运行过程中自动进行，程序员无法精确控制和干预。</li><li><font color = red>Java程序还会出现内存泄漏和内存溢出问题吗？Yes!</font></li></ul><h3 id="Java语言的环境搭建"><a href="#Java语言的环境搭建" class="headerlink" title="Java语言的环境搭建"></a>Java语言的环境搭建</h3><p><img src="https://yuki-picgo-img.oss-cn-beijing.aliyuncs.com/vscode-img/20220402223918.png" alt="20220402223918"></p><ul><li>明确什么是JDK, JRE</li><li>下载 JDK</li><li>安装 JDK</li><li>配置环境变量<ul><li>path：windows系统执行命令时要搜寻的路径。</li></ul></li><li>验证是否成功：javac java</li><li>选择合适的文本编辑器或 IDE 开发</li></ul><p><strong><font color =red>什么是JDK，JRE</font></strong><br><strong>JDK(<font color = red>J</font>ava <font color = red>d</font>evelopment <font color = red>K</font>it Java开发工具包)</strong><br>JDK是提供给Java开发人员使用的，其中包含了java的开发工具，也包括了JRE。所以安装了JDK，就不用在单独安装JRE了。<br>其中的开发工具：编译工具(javac.exe) 打包工具(jar.exe)等<br><strong>JRE(<font color = red>J</font>ava <font color = red>R</font>untime <font color = red>E</font>nvironment Java运行环境)</strong><br>包括Java虚拟机(JVM Java Virtual Machine)和Java程序所需的核心类库等，如果想要运行一个开发好的Java程序，计算机中只需要安装JRE即可。<br><font color =blue>简单而言，使用JDK的开发工具完成的java程序，交给JRE去运行。</font></p><h3 id="JDK、JRE、JVM关系"><a href="#JDK、JRE、JVM关系" class="headerlink" title="JDK、JRE、JVM关系"></a>JDK、JRE、JVM关系</h3><p><img src="https://yuki-picgo-img.oss-cn-beijing.aliyuncs.com/vscode-img/20220402224525.png" alt="20220402224525"><br><img src="https://yuki-picgo-img.oss-cn-beijing.aliyuncs.com/vscode-img/20220402224557.png" alt="20220402224557"></p><h4 id="1、下载并安装JDK"><a href="#1、下载并安装JDK" class="headerlink" title="1、下载并安装JDK"></a>1、下载并安装JDK</h4><ul><li>官方网址：<ul><li><a href="http://www.oracle.com/">www.oracle.com</a></li><li>java.sun.com</li></ul></li><li>安装JDK<ul><li>傻瓜式安装，下一步即可。</li><li><font color = red>建议：安装路径不要有中文或者空格等特殊符号。</font></li><li>如果操作系统是64位的，软件尽量选择支持64位的（除非软件本身不区分）。</li><li>当提示安装 JRE 时，正常在JDK安装时已经装过了，但是为了后续使用Eclipse等开发工具不报错，建议也根据提示安装JRE。</li></ul></li></ul><h4 id="2、配置环境变量-path"><a href="#2、配置环境变量-path" class="headerlink" title="2、配置环境变量 path"></a>2、配置环境变量 path</h4><ul><li>在dos命令行中敲入javac，出现错误提示：<br><img src="https://yuki-picgo-img.oss-cn-beijing.aliyuncs.com/vscode-img/20220402224850.png" alt="20220402224850"></li><li>错误原因：当前执行的程序在当前目录下如果不存在，windows系统会在系统中已有的一个名为path的环境变量指定的目录中查找。如果仍未找到，会出现以上的错误提示。所以进入到 jdk安装路径\bin目录下，执行javac，会看到javac参数提示信息。<br><img src="https://yuki-picgo-img.oss-cn-beijing.aliyuncs.com/vscode-img/20220402224931.png" alt="20220402224931"><br>每次执行 java 的工具都要进入到bin目录下，是非常麻烦的。可不可以在任何目录下都可以执行java的工具呢？</li><li>根据windows系统在查找可执行程序的原理，可以将java工具所在路径定义到path 环境变量中，让系统帮我们去找运行执行的程序。</li><li>配置方法：<ul><li>我的电脑–属性–高级系统设置–环境变量</li><li>编辑 path 环境变量，在变量值开始处加上java工具所在目录，后面用 “ ; ”和其他值分隔开即可。</li><li>打开DOS命令行，任意目录下敲入javac。如果出现javac 的参数信息，配置成功。<br> <img src="https://yuki-picgo-img.oss-cn-beijing.aliyuncs.com/vscode-img/20220402225055.png" alt="20220402225055"><br>配置完path环境变量以后的验证<br><img src="https://yuki-picgo-img.oss-cn-beijing.aliyuncs.com/vscode-img/20220402225123.png" alt="20220402225123"><br><img src="https://yuki-picgo-img.oss-cn-beijing.aliyuncs.com/vscode-img/20220402225132.png" alt="20220402225132"><br><img src="https://yuki-picgo-img.oss-cn-beijing.aliyuncs.com/vscode-img/20220402225140.png" alt="20220402225140"></li></ul></li></ul><h3 id="开发体验—-HelloWorld"><a href="#开发体验—-HelloWorld" class="headerlink" title="开发体验— HelloWorld"></a>开发体验— HelloWorld</h3><ul><li>步骤：<ol><li>将 Java 代码<strong>编写</strong>到扩展名为 .java 的文件中。</li><li>通过 javac 命令对该 java 文件进行<strong>编译</strong>。</li><li>通过 java 命令对生成的 class 文件进行<strong>运行</strong>。<br> <img src="https://yuki-picgo-img.oss-cn-beijing.aliyuncs.com/vscode-img/20220402225407.png" alt="20220402225407"><br> <img src="https://yuki-picgo-img.oss-cn-beijing.aliyuncs.com/vscode-img/20220403171644.png" alt="20220403171644"><br> <img src="https://yuki-picgo-img.oss-cn-beijing.aliyuncs.com/vscode-img/20220403171651.png" alt="20220403171651"><br> <img src="https://yuki-picgo-img.oss-cn-beijing.aliyuncs.com/vscode-img/20220403171700.png" alt="20220403171700"><br> <img src="https://yuki-picgo-img.oss-cn-beijing.aliyuncs.com/vscode-img/20220403171714.png" alt="20220403171714"></li></ol></li></ul><h3 id="常见问题及解决方法"><a href="#常见问题及解决方法" class="headerlink" title="常见问题及解决方法"></a>常见问题及解决方法</h3><p><img src="https://yuki-picgo-img.oss-cn-beijing.aliyuncs.com/vscode-img/20220403171747.png" alt="20220403171747"><br><img src="https://yuki-picgo-img.oss-cn-beijing.aliyuncs.com/vscode-img/20220403171756.png" alt="20220403171756"><br><img src="https://yuki-picgo-img.oss-cn-beijing.aliyuncs.com/vscode-img/20220403171811.png" alt="20220403171811"></p><h3 id="注释-Comment"><a href="#注释-Comment" class="headerlink" title="注释(Comment)"></a>注释(Comment)</h3><p><img src="https://yuki-picgo-img.oss-cn-beijing.aliyuncs.com/vscode-img/20220403171837.png" alt="20220403171837"><br><img src="https://yuki-picgo-img.oss-cn-beijing.aliyuncs.com/vscode-img/20220403171859.png" alt="20220403171859"><br><img src="https://yuki-picgo-img.oss-cn-beijing.aliyuncs.com/vscode-img/20220403171950.png" alt="20220403171950"></p><h3 id="小结第一个程序"><a href="#小结第一个程序" class="headerlink" title="小结第一个程序"></a>小结第一个程序</h3><p><img src="https://yuki-picgo-img.oss-cn-beijing.aliyuncs.com/vscode-img/20220403172033.png" alt="20220403172033"></p><h3 id="Java-API文档"><a href="#Java-API文档" class="headerlink" title="Java API文档"></a>Java API文档</h3><p><img src="https://yuki-picgo-img.oss-cn-beijing.aliyuncs.com/vscode-img/20220403172139.png" alt="20220403172139"></p><h3 id="良好的编程风格"><a href="#良好的编程风格" class="headerlink" title="良好的编程风格"></a>良好的编程风格</h3><p><img src="https://yuki-picgo-img.oss-cn-beijing.aliyuncs.com/vscode-img/20220403172715.png" alt="20220403172715"></p><h3 id="常用的Java开发工具（-Integrated-Development-Environment-）"><a href="#常用的Java开发工具（-Integrated-Development-Environment-）" class="headerlink" title="常用的Java开发工具（(Integrated Development Environment)）"></a>常用的Java开发工具（(Integrated Development Environment)）</h3><ul><li><p>文本编辑工具： </p><ul><li>记事本</li><li>UltraEdit</li><li>EditPlus</li><li>TextPad</li><li>NotePad</li></ul></li><li><p>Java集成开发环境（IDE)：</p><ul><li>JBuilder</li><li>NetBeans</li><li>Eclipse</li><li>MyEclipse</li><li>IntelliJ IDEA</li></ul></li></ul><p><img src="https://yuki-picgo-img.oss-cn-beijing.aliyuncs.com/vscode-img/20220403173110.png" alt="20220403173110"><br><img src="https://yuki-picgo-img.oss-cn-beijing.aliyuncs.com/vscode-img/20220403173134.png" alt="20220403173134"><br><img src="https://yuki-picgo-img.oss-cn-beijing.aliyuncs.com/vscode-img/20220403173148.png" alt="20220403173148"><br><img src="https://yuki-picgo-img.oss-cn-beijing.aliyuncs.com/vscode-img/20220403173159.png" alt="20220403173159"><br><img src="https://yuki-picgo-img.oss-cn-beijing.aliyuncs.com/vscode-img/20220403173208.png" alt="20220403173208"></p><p><img src="https://yuki-picgo-img.oss-cn-beijing.aliyuncs.com/vscode-img/20220403173313.png" alt="20220403173313"></p><h3 id="每日一测"><a href="#每日一测" class="headerlink" title="每日一测"></a>每日一测</h3><ol><li><p>JDK,JRE,JVM三者之间的关系，以及JDK、JRE包含的主要结构有哪些<img src="https://yuki-picgo-img.oss-cn-beijing.aliyuncs.com/yuque-img/20220617154713.png"><br> JDK &#x3D; JRE + Java的开发工具（javac.exe,java.exe,javadoc.exe)<br> JRE &#x3D; JVM + Java核心类库</p></li><li><p>为什么要配置path环境变量？如何配置？<br> 在任意的路径下都可以执行java开发工具</p><p> JAVA_HOME &#x3D; bin的上一层目录<br> path &#x3D; %JAVA_HOME%\bin</p></li><li><p>常用的几个命令行操作都有哪些？(至少4个)<br> cd<br> md<br> rd<br> del<br> cd..<br> cd&#x2F;</p></li><li></li></ol><p><img src="https://yuki-picgo-img.oss-cn-beijing.aliyuncs.com/vscode-img/20220403173649.png" alt="20220403173649"></p><p>1. </p><h1 id="第二章、基本语法"><a href="#第二章、基本语法" class="headerlink" title="第二章、基本语法"></a>第二章、基本语法</h1><h2 id="1、关键字和保留字"><a href="#1、关键字和保留字" class="headerlink" title="1、关键字和保留字"></a>1、关键字和保留字</h2><ul><li><h3 id="关键字（keyword）的定义和特点"><a href="#关键字（keyword）的定义和特点" class="headerlink" title="关键字（keyword）的定义和特点"></a>关键字（keyword）的定义和特点</h3><ul><li>定义：被Java语言赋予了特殊含义，用做专门用途的字符串（单词）</li><li>特点：关键字中所有字母都为小写</li><li>官方地址： <a href="https://docs.oracle.com/javase/tutorial/java/nutsandbolts/_keywords.html">https://docs.oracle.com/javase/tutorial/java/nutsandbolts/_keywords.html</a></li></ul></li></ul><p><img src="https://yuki-picgo-img.oss-cn-beijing.aliyuncs.com/yuque-img/20220701234756.png"></p><p><img src="https://yuki-picgo-img.oss-cn-beijing.aliyuncs.com/yuque-img/20220701234831.png"></p><ul><li><h3 id="保留字（reserved-word）"><a href="#保留字（reserved-word）" class="headerlink" title="保留字（reserved word）"></a>保留字（reserved word）</h3><ul><li>Java保留字：现有Java版本尚未使用，但以后版本可能会作为关键字使用。自己命名标识符时要避免使用这些保留字goto 、const</li></ul></li></ul><h2 id="2、标识符（Identifier）"><a href="#2、标识符（Identifier）" class="headerlink" title="2、标识符（Identifier）"></a>2、标识符（Identifier）</h2><ul><li><h3 id="标识符："><a href="#标识符：" class="headerlink" title="标识符："></a>标识符：</h3><ul><li>Java 对各种变量、方法和类等要素命名时使用的字符序列称为标识符</li><li><font color = red>技巧：凡是自己可以起名字的地方都叫标识符。</font></li></ul></li><li><h3 id="定义合法标识符规则："><a href="#定义合法标识符规则：" class="headerlink" title="定义合法标识符规则："></a>定义合法标识符规则：</h3><ul><li>由26个英文字母大小写，0-9 ，_或 $ 组成</li><li>不可以以数字开头</li><li>不可以使用关键字和保留字，但能包含关键字和保留字。</li><li>Java中严格区分大小写，长度无限制。</li><li>标识符不能包含空格。</li></ul></li><li><h3 id="Java中的名称命名规范："><a href="#Java中的名称命名规范：" class="headerlink" title="Java中的名称命名规范："></a>Java中的名称命名规范：</h3><ul><li><strong>包名：</strong>多单词组成时所有字母都小写：xxxyyyzzz</li><li><strong>类名、接口名：</strong>多单词组成时，所有单词的首字母大写：XxxYyyZzz（大驼峰）</li><li><strong>变量名、方法名：</strong>多单词组成时，第一个单词首字母小写，第二个单词开始每个单词首字母大写：xxxYyyZzz（小驼峰）</li><li><strong>常量名：</strong>所有字母都大写。多单词时每个单词用下划线连接：XXX_YYY_ZZZ</li><li>注意1：在起名字时，为了提高阅读性，要尽量有意义，“见名知意”。</li><li>注意2：java采用unicode字符集，因此标识符也可以使用汉字声明，但是不建议使用。</li></ul></li></ul><h2 id="3、变量"><a href="#3、变量" class="headerlink" title="3、变量"></a>3、变量</h2><ul><li><h3 id="变量的概念："><a href="#变量的概念：" class="headerlink" title="变量的概念："></a>变量的概念：</h3><ul><li>内存中的一个存储区域</li><li>该区域的数据可以在同一类型范围内不断变化</li><li>变量是程序中最基本的存储单元。包含变量类型、变量名和存储的值<font color =  red>变量类型、变量名和存储的值</font></li></ul></li><li><h3 id="变量的作用："><a href="#变量的作用：" class="headerlink" title="变量的作用："></a>变量的作用：</h3><ul><li>用于在内存中保存数据</li></ul></li><li><h3 id="使用变量注意："><a href="#使用变量注意：" class="headerlink" title="使用变量注意："></a>使用变量注意：</h3><ul><li><font color = red>Java中每个变量必须先声明，后使用</font></li><li>使用变量名来访问这块区域的数据</li><li>变量的作用域：其定义所在的一对{ }内</li><li>变量只有在其作用域内才有效</li><li>同一个作用域内，不能定义重名的变量</li></ul><p><img src="https://yuki-picgo-img.oss-cn-beijing.aliyuncs.com/yuque-img/20220702004153.png"></p><h4 id="1-变量的分类"><a href="#1-变量的分类" class="headerlink" title="1. 变量的分类"></a>1. 变量的分类</h4><p><img src="https://yuki-picgo-img.oss-cn-beijing.aliyuncs.com/yuque-img/20220702005128.png"></p><p><img src="https://yuki-picgo-img.oss-cn-beijing.aliyuncs.com/yuque-img/20220702005101.png"></p><p><img src="https://yuki-picgo-img.oss-cn-beijing.aliyuncs.com/yuque-img/20220702011014.png"></p><p><img src="https://yuki-picgo-img.oss-cn-beijing.aliyuncs.com/yuque-img/20220702011741.png"></p><p><font color = red >floar表示数值的范围比long还大</font></p><p><img src="https://yuki-picgo-img.oss-cn-beijing.aliyuncs.com/yuque-img/20220702012439.png"></p><p><img src="https://yuki-picgo-img.oss-cn-beijing.aliyuncs.com/yuque-img/20220702012711.png"></p><p><img src="https://yuki-picgo-img.oss-cn-beijing.aliyuncs.com/yuque-img/20220707173712.png"></p><p><img src="https://yuki-picgo-img.oss-cn-beijing.aliyuncs.com/yuque-img/20220707173946.png"></p><p><img src="https://yuki-picgo-img.oss-cn-beijing.aliyuncs.com/yuque-img/20220707174131.png"></p><p><img src="https://yuki-picgo-img.oss-cn-beijing.aliyuncs.com/yuque-img/20220707174703.png"></p><h4 id="2-基本数据类型转换"><a href="#2-基本数据类型转换" class="headerlink" title="2. 基本数据类型转换"></a>2. 基本数据类型转换</h4><p><img src="https://yuki-picgo-img.oss-cn-beijing.aliyuncs.com/yuque-img/20220707181737.png"></p><p><img src="https://yuki-picgo-img.oss-cn-beijing.aliyuncs.com/yuque-img/20220707181848.png"></p><p><strong>string可以和八种基本数据类型变量做运算，且运算只能是连接运算。</strong></p><h4 id="3-强制类型转换"><a href="#3-强制类型转换" class="headerlink" title="3. 强制类型转换"></a>3. 强制类型转换</h4><p><img src="https://yuki-picgo-img.oss-cn-beijing.aliyuncs.com/yuque-img/20220707182049.png"></p><p>整型变量，默认类型为int型。浮点型常量，默认类型为double型。</p><h4 id="4-进制"><a href="#4-进制" class="headerlink" title="4. 进制"></a>4. 进制</h4><p><img src="https://yuki-picgo-img.oss-cn-beijing.aliyuncs.com/yuque-img/20220708222045.png"></p><p><img src="https://yuki-picgo-img.oss-cn-beijing.aliyuncs.com/yuque-img/20220708222500.png"></p><p><img src="C:\Users\10937\AppData\Roaming\Typora\typora-user-images\image-20220708222517512.png" alt="image-20220708222517512"></p><p><img src="https://yuki-picgo-img.oss-cn-beijing.aliyuncs.com/yuque-img/20220708223748.png"></p><p><img src="https://yuki-picgo-img.oss-cn-beijing.aliyuncs.com/yuque-img/20220708230214.png"></p><p><img src="https://yuki-picgo-img.oss-cn-beijing.aliyuncs.com/yuque-img/20220708230334.png"></p><p><img src="https://yuki-picgo-img.oss-cn-beijing.aliyuncs.com/yuque-img/20220708230450.png"></p><p><img src="https://yuki-picgo-img.oss-cn-beijing.aliyuncs.com/yuque-img/20220708230513.png"></p></li></ul><h2 id="4、运算符"><a href="#4、运算符" class="headerlink" title="4、运算符"></a>4、运算符</h2><p><img src="https://yuki-picgo-img.oss-cn-beijing.aliyuncs.com/yuque-img/20220708231106.png"></p><h4 id="1-算术运算符"><a href="#1-算术运算符" class="headerlink" title="1.算术运算符"></a>1.算术运算符</h4><p><img src="https://yuki-picgo-img.oss-cn-beijing.aliyuncs.com/yuque-img/20220708231123.png"></p><p><img src="https://yuki-picgo-img.oss-cn-beijing.aliyuncs.com/yuque-img/20220708231135.png"></p><p>取余运算时，结果的符号与被模数的符号相同</p><h4 id="2-赋值运算符"><a href="#2-赋值运算符" class="headerlink" title="2.赋值运算符"></a>2.赋值运算符</h4><ul><li>符号：&#x3D;<ul><li>当“&#x3D;”两侧数据类型不一致时，可以使用自动类型转换或使用强制<br>类型转换原则进行处理。</li><li><font color =red>支持连续赋值。</font></li></ul></li><li>扩展赋值运算符： +&#x3D;, -&#x3D;, *&#x3D;, &#x2F;&#x3D;, %&#x3D;<font color =red>（不会改变数据类型）</font><ul><li>num1 +&#x3D; 2;等于num1 &#x3D; num1+2；</li></ul></li></ul><p><img src="https://yuki-picgo-img.oss-cn-beijing.aliyuncs.com/yuque-img/20220805225612.png"></p><h4 id="3-比较运算符"><a href="#3-比较运算符" class="headerlink" title="3.比较运算符"></a>3.比较运算符</h4><p><img src="https://yuki-picgo-img.oss-cn-beijing.aliyuncs.com/yuque-img/20220805225900.png"></p><ul><li>比较运算符的结果都是boolean型，也就是要么是true，要么是false</li><li><font color = red>比较运算符“&#x3D;&#x3D;”不能误写成“&#x3D;” </font></li></ul><h4 id="4-逻辑运算符"><a href="#4-逻辑运算符" class="headerlink" title="4.逻辑运算符"></a>4.逻辑运算符</h4><p>逻辑运算符操作的都是布尔类型的变量</p><p><img src="https://yuki-picgo-img.oss-cn-beijing.aliyuncs.com/yuque-img/20220805230546.png"></p><p><img src="https://yuki-picgo-img.oss-cn-beijing.aliyuncs.com/yuque-img/20220805230704.png"></p><ul><li>逻辑运算符用于连接布尔型表达式，在Java中不可以写成3&lt;x&lt;6，应该写<br>成x&gt;3 &amp; x&lt;6 。</li><li><font color =red>&amp;与&amp;&amp;区别</font>（|与||同理）<ul><li>&amp;左边无论真假，右边都参与运算</li><li>&amp;&amp;左边为真，则右边参与运算，如果左边为假，则右边不参与运算</li></ul></li><li>开发中优先选用短路</li></ul><h4 id="5-位运算符"><a href="#5-位运算符" class="headerlink" title="5.位运算符"></a>5.位运算符</h4><p><img src="https://yuki-picgo-img.oss-cn-beijing.aliyuncs.com/yuque-img/20220805235340.png"></p><ul><li><font color =red>位运算是直接对整数的二进制进行的运算</font></li><li>每项左移一位，相当于在原来的基础上乘以2</li></ul><p><img src="https://yuki-picgo-img.oss-cn-beijing.aliyuncs.com/yuque-img/20220805235656.png"></p><p><img src="https://yuki-picgo-img.oss-cn-beijing.aliyuncs.com/yuque-img/20220805235719.png"></p><p><img src="https://yuki-picgo-img.oss-cn-beijing.aliyuncs.com/yuque-img/20220806003710.png"></p><h4 id="6-三元运算符"><a href="#6-三元运算符" class="headerlink" title="6.三元运算符"></a>6.三元运算符</h4><p>格式：</p><ul><li><img src="https://yuki-picgo-img.oss-cn-beijing.aliyuncs.com/yuque-img/20220806165716.png"></li><li>表达式1和表达式2为<font color =red>同种类型</font></li><li>三元运算符与if-else的联系与区别：<ol><li>三元运算符可简化if-else语句</li><li>三元运算符要求必须返回一个结果。</li><li>if后的代码块可有多个语句</li></ol></li></ul><p>运算符的优先级</p><ul><li>运算符有不同的优先级，所谓优先级就是表达式运算中的运算顺序。如右表，上一行运算符总优先于下一行。</li><li>只有单目运算符、三元运算符、赋值运算符是从右向左运算的。</li><li><img src="https://yuki-picgo-img.oss-cn-beijing.aliyuncs.com/yuque-img/20220807174455.png"></li></ul><h2 id="5、程序流程控制"><a href="#5、程序流程控制" class="headerlink" title="5、程序流程控制"></a>5、程序流程控制</h2><ul><li>流程控制语句是用来控制程序中各语句执行顺序的语句，可以把语句组<br>合成能完成一定功能的小逻辑模块。</li><li>其流程控制方式采用结构化程序设计中规定的三种基本流程结构，即：<ul><li>顺序结构<ul><li>程序从上到下逐行地执行，中间没有任何判断和跳转。</li></ul></li><li>分支结构<ul><li>根据条件，选择性地执行某段代码。</li><li>有if…else和switch-case两种分支语句。</li></ul></li><li>循环结构<ul><li>根据循环条件，重复性的执行某段代码。</li><li>有while、do…while、for三种循环语句。</li><li>注：JDK1.5提供了foreach循环，方便的遍历集合、数组元素。</li></ul></li></ul></li></ul><h4 id="1-顺序结构"><a href="#1-顺序结构" class="headerlink" title="1. 顺序结构"></a>1. 顺序结构</h4><p><img src="https://yuki-picgo-img.oss-cn-beijing.aliyuncs.com/PicGo/20220905220748.png"></p><h4 id="2-if-else结构"><a href="#2-if-else结构" class="headerlink" title="2. if-else结构"></a>2. if-else结构</h4><p><strong>if语句的三种格式：</strong></p><ol><li><p><img src="https://yuki-picgo-img.oss-cn-beijing.aliyuncs.com/PicGo/20220905221016.png"></p></li><li><p>二选一<img src="https://yuki-picgo-img.oss-cn-beijing.aliyuncs.com/PicGo/20220905221048.png"></p></li><li><p>多选一<img src="https://yuki-picgo-img.oss-cn-beijing.aliyuncs.com/PicGo/20220905221140.png"></p></li></ol><p><strong>分支结构：if-else使用说明</strong></p><ul><li>条件表达式必须是布尔表达式（关系表达式或逻辑表达式）、布尔变量</li><li>语句块只有一条执行语句时，一对{}可以省略，但建议保留</li><li>if-else语句结构，根据需要可以嵌套使用</li><li>当if-else结构是“多选一”时，最后的else是可选的，根据需要可以省略</li><li>当多个条件是“互斥”关系时，条件判断语句及执行语句间顺序无所谓。当多个条件是“包含”关系时，“小上大下 &#x2F; 子上父下”</li></ul><p><img src="https://yuki-picgo-img.oss-cn-beijing.aliyuncs.com/PicGo/20220905222752.png"></p><p><img src="https://yuki-picgo-img.oss-cn-beijing.aliyuncs.com/PicGo/20220905234255.png"></p><p><img src="https://yuki-picgo-img.oss-cn-beijing.aliyuncs.com/PicGo/20220906003122.png"></p><p><img src="https://yuki-picgo-img.oss-cn-beijing.aliyuncs.com/PicGo/20220906003806.png"></p><h1 id="第三章、数组"><a href="#第三章、数组" class="headerlink" title="第三章、数组"></a>第三章、数组</h1><h1 id="第四章、面向对象编程（上）"><a href="#第四章、面向对象编程（上）" class="headerlink" title="第四章、面向对象编程（上）"></a>第四章、面向对象编程（上）</h1><h1 id="第五章、面向对象编程（中）"><a href="#第五章、面向对象编程（中）" class="headerlink" title="第五章、面向对象编程（中）"></a>第五章、面向对象编程（中）</h1><h1 id="第六章、面向对象编程（下）"><a href="#第六章、面向对象编程（下）" class="headerlink" title="第六章、面向对象编程（下）"></a>第六章、面向对象编程（下）</h1><h1 id="第七章、异常处理"><a href="#第七章、异常处理" class="headerlink" title="第七章、异常处理"></a>第七章、异常处理</h1><hr><p>文献参考<br><a href="https://www.bilibili.com/video/BV1Kb411W75N?p=1">https://www.bilibili.com/video/BV1Kb411W75N?p=1</a></p>]]></content>
    
    
    
    <tags>
      
      <tag>Java</tag>
      
      <tag>笔记</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>NanoPi-R2S刷机教程</title>
    <link href="/2022/04/01/NanoPi-R2S%E5%88%B7%E6%9C%BA%E6%95%99%E7%A8%8B/"/>
    <url>/2022/04/01/NanoPi-R2S%E5%88%B7%E6%9C%BA%E6%95%99%E7%A8%8B/</url>
    
    <content type="html"><![CDATA[<p>NanoPi-R2S刷机启动教程</p><span id="more"></span><h2 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h2><ul><li>NanoPi R2S主板</li><li>MicroSD卡&#x2F;TF卡: Class10或以上的 8GB SDHC卡</li><li>输出为5V&#x2F;2A的充电器（高于5V可能会烧毁）</li><li>联网的电脑</li></ul><h2 id="下载固件"><a href="#下载固件" class="headerlink" title="下载固件"></a>下载固件</h2><p><a href="https://bigdongdong.gitbook.io/nanopi-r2s/r2srotherfirmware">https://bigdongdong.gitbook.io/nanopi-r2s/r2srotherfirmware</a></p><h2 id="TF卡格式化"><a href="#TF卡格式化" class="headerlink" title="TF卡格式化"></a>TF卡格式化</h2><p>以<a href="https://www.sdcard.org/downloads/formatter/sd-memory-card-formatter-for-windows-download/">sd-memory-card-formatter</a>为例<br><img src="https://yuki-picgo-img.oss-cn-beijing.aliyuncs.com/vscode-img/20220401075913.png" alt="20220401075913"><br>部分无法读取或无法显示的TF卡，可通过低格工具<a href="https://hddguru.com/software/HDD-LLF-Low-Level-Format-Tool/">HDDLLF</a>来格式化恢复。</p><h2 id="烧录刷机"><a href="#烧录刷机" class="headerlink" title="烧录刷机"></a>烧录刷机</h2><p>以<a href="https://www.balena.io/etcher/">balena</a>为例<br><img src="https://yuki-picgo-img.oss-cn-beijing.aliyuncs.com/vscode-img/20220401080738.png" alt="20220401080738"><br>烧录完成<br><img src="https://yuki-picgo-img.oss-cn-beijing.aliyuncs.com/vscode-img/20220401080946.png" alt="20220401080946"></p><h2 id="接线方式"><a href="#接线方式" class="headerlink" title="接线方式"></a>接线方式</h2><p><img src="https://yuki-picgo-img.oss-cn-beijing.aliyuncs.com/vscode-img/20220401081346.png" alt="20220401081346"><br><img src="https://yuki-picgo-img.oss-cn-beijing.aliyuncs.com/vscode-img/20220401081410.png" alt="20220401081410"><br><img src="https://yuki-picgo-img.oss-cn-beijing.aliyuncs.com/vscode-img/20220401081547.png" alt="20220401081547"></p><h2 id="启动"><a href="#启动" class="headerlink" title="启动"></a>启动</h2><p>拔出TF卡插入 NanoPi-R2S 卡槽，上电启动，SYS红灯闪烁，成功启动系统。</p><hr><p>参考教程：<br><a href="https://www.yuque.com/friendlyelec/r2s/mzewz3">https://www.yuque.com/friendlyelec/r2s/mzewz3</a></p>]]></content>
    
    
    
    <tags>
      
      <tag>软路由</tag>
      
      <tag>R2S</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>web</title>
    <link href="/2022/03/26/web/"/>
    <url>/2022/03/26/web/</url>
    
    <content type="html"><![CDATA[<p>Spring Boot + MyBatis Plus + Thymeleaf + MySQL搭建动态网页</p><span id="more"></span><h1 id="1-技术框架"><a href="#1-技术框架" class="headerlink" title="1 技术框架"></a>1 技术框架</h1><p>Spring Boot + MyBatis Plus + Thymeleaf + MySQL</p><h1 id="2-前端原型页面"><a href="#2-前端原型页面" class="headerlink" title="2 前端原型页面"></a>2 前端原型页面</h1><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><code class="hljs JAVA"><span class="hljs-keyword">package</span> com.southwind.controller;<br><span class="hljs-keyword">import</span> org.springframework.stereotype.Controller;<br><span class="hljs-keyword">import</span> org.springframework.web.bind.annotation.GetMapping;<br><span class="hljs-keyword">import</span> org.springframework.web.bind.annotation.Pat<br>hVariable;<br><span class="hljs-keyword">import</span> org.springframework.web.bind.annotation.Res<br>ponseBody;<br><span class="hljs-meta">@Controller</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">RedirectController</span> &#123;<br><span class="hljs-meta">@GetMapping(&quot;/&#123;url&#125;&quot;)</span><br><span class="hljs-keyword">public</span> String<br><span class="hljs-title function_">redirect</span><span class="hljs-params">(<span class="hljs-meta">@PathVariable(&quot;url&quot;)</span> String url)</span>&#123;<br>    <span class="hljs-keyword">return</span> url;<br>&#125;<br><span class="hljs-meta">@GetMapping(&quot;/&quot;)</span><br><span class="hljs-keyword">public</span> String <span class="hljs-title function_">main</span><span class="hljs-params">()</span>&#123;<br><span class="hljs-keyword">return</span> <span class="hljs-string">&quot;redirect:/main&quot;</span>;<br><span class="hljs-comment">// 防后台报错（不影响运行）</span><br><span class="hljs-meta">@GetMapping(&quot;favicon.ico&quot;)</span><br><span class="hljs-meta">@ResponseBody</span><br><span class="hljs-keyword">void</span> <span class="hljs-title function_">returnNoFavicon</span><span class="hljs-params">()</span> &#123;<br>&#125;<br>&#125;<br></code></pre></td></tr></table></figure><h1 id="3-数据库"><a href="#3-数据库" class="headerlink" title="3 数据库"></a>3 数据库</h1><p>cart、orders、order_detail、product、<br>product_category、user、user_address</p><details>  <summary>建表</summary>  <pre><code class="hljs"> <p>DROP TABLE IF EXISTS <code>cart</code>;<br>&#x2F;*!40101 SET @saved_cs_client     &#x3D; @@character_set_client <em>&#x2F;;<br>&#x2F;</em>!50503 SET character_set_client &#x3D; utf8mb4 <em>&#x2F;;<br>CREATE TABLE <code>cart</code> (<br>  <code>id</code> int NOT NULL AUTO_INCREMENT,<br>  <code>product_id</code> int DEFAULT NULL,<br>  <code>quantity</code> int DEFAULT NULL,<br>  <code>cost</code> float DEFAULT NULL,<br>  <code>user_id</code> int DEFAULT NULL,<br>  <code>create_time</code> datetime NOT NULL,<br>  <code>update_time</code> datetime NOT NULL,<br>  PRIMARY KEY (<code>id</code>),<br>  KEY <code>productId</code> (<code>product_id</code>),<br>  KEY <code>userId</code> (<code>user_id</code>),<br>  CONSTRAINT <code>cart_ibfk_1</code> FOREIGN KEY (<code>product_id</code>) REFERENCES <code>product</code> (<code>id</code>),<br>  CONSTRAINT <code>cart_ibfk_2</code> FOREIGN KEY (<code>user_id</code>) REFERENCES <code>user</code> (<code>id</code>)<br>) ENGINE&#x3D;InnoDB AUTO_INCREMENT&#x3D;326 DEFAULT CHARSET&#x3D;utf8;<br>&#x2F;</em>!40101 SET character_set_client &#x3D; @saved_cs_client *&#x2F;;</p><p>–<br>– Dumping data for table <code>cart</code><br>–</p><p>LOCK TABLES <code>cart</code> WRITE;<br>&#x2F;*!40000 ALTER TABLE <code>cart</code> DISABLE KEYS <em>&#x2F;;<br>&#x2F;</em>!40000 ALTER TABLE <code>cart</code> ENABLE KEYS *&#x2F;;<br>UNLOCK TABLES;</p><p>–<br>– Table structure for table <code>order_detail</code><br>–</p><p>DROP TABLE IF EXISTS <code>order_detail</code>;<br>&#x2F;*!40101 SET @saved_cs_client     &#x3D; @@character_set_client <em>&#x2F;;<br>&#x2F;</em>!50503 SET character_set_client &#x3D; utf8mb4 <em>&#x2F;;<br>CREATE TABLE <code>order_detail</code> (<br>  <code>id</code> int NOT NULL AUTO_INCREMENT COMMENT ‘主键’,<br>  <code>order_id</code> int NOT NULL COMMENT ‘订单主键’,<br>  <code>product_id</code> int NOT NULL COMMENT ‘商品主键’,<br>  <code>quantity</code> int NOT NULL COMMENT ‘数量’,<br>  <code>cost</code> float NOT NULL COMMENT ‘消费’,<br>  PRIMARY KEY (<code>id</code>),<br>  UNIQUE KEY <code>PK__EASYBUY___66E1BD8E2F10007B</code> (<code>id</code>)<br>) ENGINE&#x3D;InnoDB AUTO_INCREMENT&#x3D;178 DEFAULT CHARSET&#x3D;utf8;<br>&#x2F;</em>!40101 SET character_set_client &#x3D; @saved_cs_client *&#x2F;;</p><p>–<br>– Dumping data for table <code>order_detail</code><br>–</p><p>LOCK TABLES <code>order_detail</code> WRITE;<br>&#x2F;*!40000 ALTER TABLE <code>order_detail</code> DISABLE KEYS <em>&#x2F;;<br>&#x2F;</em>!40000 ALTER TABLE <code>order_detail</code> ENABLE KEYS *&#x2F;;<br>UNLOCK TABLES;</p><p>–<br>– Table structure for table <code>orders</code><br>–</p><p>DROP TABLE IF EXISTS <code>orders</code>;<br>&#x2F;*!40101 SET @saved_cs_client     &#x3D; @@character_set_client <em>&#x2F;;<br>&#x2F;</em>!50503 SET character_set_client &#x3D; utf8mb4 <em>&#x2F;;<br>CREATE TABLE <code>orders</code> (<br>  <code>id</code> int NOT NULL AUTO_INCREMENT COMMENT ‘主键’,<br>  <code>user_id</code> int DEFAULT NULL COMMENT ‘用户主键’,<br>  <code>login_name</code> varchar(255) DEFAULT NULL COMMENT ‘用户名’,<br>  <code>user_address</code> varchar(255) DEFAULT NULL COMMENT ‘用户地址’,<br>  <code>cost</code> float DEFAULT NULL COMMENT ‘总金额’,<br>  <code>serialnumber</code> varchar(255) DEFAULT NULL COMMENT ‘订单号’,<br>  <code>create_time</code> datetime DEFAULT NULL COMMENT ‘创建时间’,<br>  <code>update_time</code> datetime NOT NULL COMMENT ‘更新时间’,<br>  PRIMARY KEY (<code>id</code>)<br>) ENGINE&#x3D;InnoDB AUTO_INCREMENT&#x3D;178 DEFAULT CHARSET&#x3D;utf8;<br>&#x2F;</em>!40101 SET character_set_client &#x3D; @saved_cs_client *&#x2F;;</p><p>–<br>– Dumping data for table <code>orders</code><br>–</p><p>LOCK TABLES <code>orders</code> WRITE;<br>&#x2F;*!40000 ALTER TABLE <code>orders</code> DISABLE KEYS <em>&#x2F;;<br>&#x2F;</em>!40000 ALTER TABLE <code>orders</code> ENABLE KEYS *&#x2F;;<br>UNLOCK TABLES;</p><p>–<br>– Table structure for table <code>product</code><br>–</p><p>DROP TABLE IF EXISTS <code>product</code>;<br>&#x2F;*!40101 SET @saved_cs_client     &#x3D; @@character_set_client <em>&#x2F;;<br>&#x2F;</em>!50503 SET character_set_client &#x3D; utf8mb4 <em>&#x2F;;<br>CREATE TABLE <code>product</code> (<br>  <code>id</code> int NOT NULL AUTO_INCREMENT COMMENT ‘主键’,<br>  <code>name</code> varchar(200) NOT NULL COMMENT ‘名称’,<br>  <code>description</code> varchar(1024) DEFAULT NULL COMMENT ‘描述’,<br>  <code>price</code> float NOT NULL COMMENT ‘价格’,<br>  <code>stock</code> int NOT NULL COMMENT ‘库存’,<br>  <code>categorylevelone_id</code> int DEFAULT NULL COMMENT ‘分类1’,<br>  <code>categoryleveltwo_id</code> int DEFAULT NULL COMMENT ‘分类2’,<br>  <code>categorylevelthree_id</code> int DEFAULT NULL COMMENT ‘分类3’,<br>  <code>file_name</code> varchar(200) DEFAULT NULL COMMENT ‘文件名称’,<br>  PRIMARY KEY (<code>id</code>),<br>  UNIQUE KEY <code>PK__EASYBUY___94F6E55132E0915F</code> (<code>id</code>)<br>) ENGINE&#x3D;InnoDB AUTO_INCREMENT&#x3D;777 DEFAULT CHARSET&#x3D;utf8;<br>&#x2F;</em>!40101 SET character_set_client &#x3D; @saved_cs_client *&#x2F;;</p><p>–<br>– Dumping data for table <code>product</code><br>–</p><p>LOCK TABLES <code>product</code> WRITE;<br>&#x2F;*!40000 ALTER TABLE <code>product</code> DISABLE KEYS <em>&#x2F;;<br>INSERT INTO <code>product</code> VALUES (733,’香奈儿’,’好闻的香水！！！’,152,1,548,654,655,’baby_1.jpg’),(734,’洗面奶’,’’,153,75,548,654,655,’baby_2.jpg’),(735,’啫喱水’,’’,152,948,548,654,655,’baby_3.jpg’),(736,’香水’,’’,152,984,548,654,655,’baby_4.jpg’),(737,’香水’,’’,152,111,548,654,655,’baby_5.jpg’),(738,’润肤露’,’’,45,99,548,654,655,’baby_6.jpg’),(739,’洁面装’,’’,156,33,548,654,655,’bk_2.jpg’),(740,’电饭锅’,’’,158,87,628,656,659,’bk_1.jpg’),(741,’婴儿喂奶装’,’’,569,100,632,637,653,’bk_3.jpg’),(742,’坚果套餐’,’’,158,1000,660,661,662,’bk_4.jpg’),(743,’超甜蜜崭’,’’,589,995,660,661,663,’bk_5.jpg’),(744,’华为2566’,’’,589,1000,670,671,672,’de1.jpg’),(745,’荣耀3C’,’’,589,92,670,671,672,’de2.jpg’),(746,’小米手环’,’’,963,98,670,674,675,’de3.jpg’),(747,’华为2265’,’’,896,1000,670,671,673,’de4.jpg’),(748,’越南坚果’,’’,520,1,660,661,662,’de5.jpg’),(749,’进口马桶’,’’,5866,93,628,657,NULL,’food_1.jpg’),(750,’联想Y系列’,’’,569,894,670,690,691,’food_2.jpg’),(751,’脑白金1号’,’’,589,998,676,677,680,’food_3.jpg’),(752,’莫里斯按’,’’,589,998,660,661,662,’food_4.jpg’),(753,’三鹿好奶粉’,’’,859,100,660,661,662,’food_5.jpg’),(754,’儿童牛奶’,’’,5896,100,676,679,NULL,’food_6.jpg’),(755,’软沙发’,’’,8596,7,628,696,NULL,’food_b1.jpg’),(756,’收纳盒’,’’,5966,103,628,696,NULL,’food_b2.jpg’),(757,’洗衣液’,’’,58,1000,628,696,NULL,’food_r.jpg’),(758,’红短沙发’,’’,596,113,628,696,NULL,’fre_1.jpg’),(759,’新西兰奶粉’,’’,5896,100,676,679,NULL,’fre_2.jpg’),(760,’婴儿车’,’’,11000,100,681,682,687,’fre_3.jpg’),(761,’夏款婴儿车’,’’,963,99,681,682,688,’fre_4.jpg’),(762,’抗压旅行箱’,’’,569,998,681,683,685,’fre_5.jpg’),(763,’透明手提箱’,’’,8596,1000,681,683,684,’fre_6.jpg’),(764,’婴儿果粉’,’’,5896,999,660,661,662,’milk_1.jpg’),(765,’椰子粉’,’’,5963,1000,660,661,662,’milk_2.jpg’),(766,’坚果蛋糕’,’’,200,94,660,661,663,’milk_3.jpg’),(767,’编制手提箱’,’’,5896,1000,681,682,688,’milk_4.jpg’),(768,’纸箱’,’’,5896,3,681,682,687,’milk_5.jpg’),(769,’健胃液’,’’,152,1000,676,679,NULL,’milk_6.jpg’),(770,’联想NTC’,’’,8596,100,670,671,673,’milk_7.jpg’),(771,’香水1’,NULL,100,100,548,654,655,’milk_8.jpg’),(772,’香水2’,NULL,100,100,548,654,655,’pro1.jpg’),(773,’香水3’,NULL,100,95,548,654,655,’pro2.jpg’),(774,’香水4’,NULL,100,100,548,654,655,’pro3.jpg’),(775,’香水5’,NULL,100,100,548,654,655,’pro4.jpg’),(776,’香水6’,NULL,1,1,548,654,655,’pro5.jpg’);<br>&#x2F;</em>!40000 ALTER TABLE <code>product</code> ENABLE KEYS *&#x2F;;<br>UNLOCK TABLES;</p><p>–<br>– Table structure for table <code>product_category</code><br>–</p><p>DROP TABLE IF EXISTS <code>product_category</code>;<br>&#x2F;*!40101 SET @saved_cs_client     &#x3D; @@character_set_client <em>&#x2F;;<br>&#x2F;</em>!50503 SET character_set_client &#x3D; utf8mb4 <em>&#x2F;;<br>CREATE TABLE <code>product_category</code> (<br>  <code>id</code> int NOT NULL AUTO_INCREMENT COMMENT ‘主键’,<br>  <code>name</code> varchar(20) NOT NULL COMMENT ‘名称’,<br>  <code>parent_id</code> int NOT NULL COMMENT ‘父级目录id’,<br>  <code>type</code> int DEFAULT NULL COMMENT ‘级别(1:一级 2：二级 3：三级)’,<br>  PRIMARY KEY (<code>id</code>),<br>  UNIQUE KEY <code>PK__EASYBUY___9EC2A4E236B12243</code> (<code>id</code>)<br>) ENGINE&#x3D;InnoDB AUTO_INCREMENT&#x3D;697 DEFAULT CHARSET&#x3D;utf8;<br>&#x2F;</em>!40101 SET character_set_client &#x3D; @saved_cs_client *&#x2F;;</p><p>–<br>– Dumping data for table <code>product_category</code><br>–</p><p>LOCK TABLES <code>product_category</code> WRITE;<br>&#x2F;*!40000 ALTER TABLE <code>product_category</code> DISABLE KEYS <em>&#x2F;;<br>INSERT INTO <code>product_category</code> VALUES (548,’化妆品’,0,1),(628,’家用商品’,0,1),(654,’面部护理’,548,2),(655,’少女派’,654,3),(656,’餐具’,628,2),(657,’卫具’,628,2),(658,’叉子’,656,3),(659,’锅’,656,3),(660,’进口食品’,0,1),(661,’零食&#x2F;糖果&#x2F;巧克力’,660,2),(662,’坚果’,661,3),(663,’蜜饯’,661,3),(669,’孕期教育’,546,3),(670,’电子商品’,0,1),(671,’手机’,670,2),(672,’华为手机’,671,3),(673,’联想手机’,671,3),(674,’手环’,670,2),(675,’小米手环’,674,3),(676,’保健食品’,0,1),(677,’老年保健品’,676,2),(678,’中年营养品’,676,2),(679,’儿童保健品’,676,2),(680,’脑白金’,677,3),(681,’箱包’,0,1),(682,’旅行箱’,681,2),(683,’手提箱’,681,2),(684,’大型’,683,3),(685,’小型’,683,3),(686,’中型’,683,3),(687,’大型’,682,3),(688,’中型’,682,3),(689,’小型’,682,3),(690,’电脑’,670,2),(691,’联想电脑’,690,3),(692,’刀叉’,656,3),(693,’碗筷’,656,3),(696,’客厅专用’,628,2);<br>&#x2F;</em>!40000 ALTER TABLE <code>product_category</code> ENABLE KEYS *&#x2F;;<br>UNLOCK TABLES;</p><p>–<br>– Table structure for table <code>user</code><br>–</p><p>DROP TABLE IF EXISTS <code>user</code>;<br>&#x2F;*!40101 SET @saved_cs_client     &#x3D; @@character_set_client <em>&#x2F;;<br>&#x2F;</em>!50503 SET character_set_client &#x3D; utf8mb4 <em>&#x2F;;<br>CREATE TABLE <code>user</code> (<br>  <code>id</code> int NOT NULL AUTO_INCREMENT COMMENT ‘主键’,<br>  <code>login_name</code> varchar(255) NOT NULL COMMENT ‘登录名’,<br>  <code>user_name</code> varchar(255) NOT NULL COMMENT ‘用户名’,<br>  <code>password</code> varchar(255) NOT NULL COMMENT ‘密码’,<br>  <code>gender</code> int NOT NULL DEFAULT ‘1’ COMMENT ‘性别(1:男 0：女)’,<br>  <code>email</code> varchar(80) DEFAULT NULL COMMENT ‘邮箱’,<br>  <code>mobile</code> varchar(11) DEFAULT NULL COMMENT ‘手机’,<br>  <code>file_name</code> varchar(255) DEFAULT NULL,<br>  <code>create_time</code> datetime NOT NULL,<br>  <code>update_time</code> datetime NOT NULL,<br>  PRIMARY KEY (<code>id</code>),<br>  UNIQUE KEY <code>PK__EASYBUY___C96109CC3A81B327</code> (<code>login_name</code>)<br>) ENGINE&#x3D;InnoDB AUTO_INCREMENT&#x3D;60 DEFAULT CHARSET&#x3D;utf8;<br>&#x2F;</em>!40101 SET character_set_client &#x3D; @saved_cs_client *&#x2F;;</p><p>–<br>– Dumping data for table <code>user</code><br>–</p><p>LOCK TABLES <code>user</code> WRITE;<br>&#x2F;*!40000 ALTER TABLE <code>user</code> DISABLE KEYS <em>&#x2F;;<br>INSERT INTO <code>user</code> VALUES (58,’test’,’张三’,’b3472e734711122a5c892c3a93705ed11d1513d59b107d57’,1,‘<a href="mailto:&#x31;&#x32;&#51;&#x40;&#116;&#101;&#x73;&#116;&#x2e;&#99;&#111;&#x6d;">&#x31;&#x32;&#51;&#x40;&#116;&#101;&#x73;&#116;&#x2e;&#99;&#111;&#x6d;</a>‘,’13312345678’,NULL,’2021-11-18 12:55:37’,’2021-11-18 12:55:37’),(59,’test2’,’张三’,’f1bc53d58d67b98a3d41a247a94f5b11de5aa2bc61596723’,1,‘<a href="mailto:&#49;&#x32;&#x33;&#x40;&#x74;&#101;&#115;&#116;&#46;&#x63;&#x6f;&#109;">&#49;&#x32;&#x33;&#x40;&#x74;&#101;&#115;&#116;&#46;&#x63;&#x6f;&#109;</a>‘,’13312345678’,NULL,’2021-11-18 13:00:07’,’2021-11-18 13:00:07’);<br>&#x2F;</em>!40000 ALTER TABLE <code>user</code> ENABLE KEYS *&#x2F;;<br>UNLOCK TABLES;</p><p>–<br>– Table structure for table <code>user_address</code><br>–</p><p>DROP TABLE IF EXISTS <code>user_address</code>;<br>&#x2F;*!40101 SET @saved_cs_client     &#x3D; @@character_set_client <em>&#x2F;;<br>&#x2F;</em>!50503 SET character_set_client &#x3D; utf8mb4 <em>&#x2F;;<br>CREATE TABLE <code>user_address</code> (<br>  <code>id</code> int NOT NULL AUTO_INCREMENT COMMENT ‘主键id’,<br>  <code>user_id</code> int DEFAULT NULL COMMENT ‘用户主键’,<br>  <code>address</code> varchar(255) DEFAULT NULL COMMENT ‘地址’,<br>  <code>remark</code> varchar(255) DEFAULT NULL COMMENT ‘备注’,<br>  <code>isdefault</code> int DEFAULT ‘0’ COMMENT ‘是否是默认地址（1:是 0否）’,<br>  <code>create_time</code> datetime DEFAULT NULL COMMENT ‘创建时间’,<br>  <code>update_time</code> datetime NOT NULL,<br>  PRIMARY KEY (<code>id</code>)<br>) ENGINE&#x3D;InnoDB AUTO_INCREMENT&#x3D;60 DEFAULT CHARSET&#x3D;utf8;<br>&#x2F;</em>!40101 SET character_set_client &#x3D; @saved_cs_client *&#x2F;;</p><p>–<br>– Dumping data for table <code>user_address</code><br>–</p><p>LOCK TABLES <code>user_address</code> WRITE;<br>&#x2F;*!40000 ALTER TABLE <code>user_address</code> DISABLE KEYS <em>&#x2F;;<br>INSERT INTO <code>user_address</code> VALUES (49,56,’IT园’,’公司’,0,’2020-05-21 15:55:24’,’2020-07-29 11:22:13’),(50,56,’软件园’,’公司’,0,’2020-05-22 15:11:07’,’2020-07-25 09:14:19’),(57,56,’测试’,’测试’,0,’2021-11-17 18:04:49’,’2021-11-17 18:04:49’),(59,59,’软件园’,’公司’,1,’2021-11-18 13:01:19’,’2021-11-18 13:01:19’);<br>&#x2F;</em>!40000 ALTER TABLE <code>user_address</code> ENABLE KEYS <em>&#x2F;;<br>UNLOCK TABLES;<br>&#x2F;</em>!40103 SET TIME_ZONE&#x3D;@OLD_TIME_ZONE *&#x2F;;</p><p>&#x2F;*!40101 SET SQL_MODE&#x3D;@OLD_SQL_MODE <em>&#x2F;;<br>&#x2F;</em>!40014 SET FOREIGN_KEY_CHECKS&#x3D;@OLD_FOREIGN_KEY_CHECKS <em>&#x2F;;<br>&#x2F;</em>!40014 SET UNIQUE_CHECKS&#x3D;@OLD_UNIQUE_CHECKS <em>&#x2F;;<br>&#x2F;</em>!40101 SET CHARACTER_SET_CLIENT&#x3D;@OLD_CHARACTER_SET_CLIENT <em>&#x2F;;<br>&#x2F;</em>!40101 SET CHARACTER_SET_RESULTS&#x3D;@OLD_CHARACTER_SET_RESULTS <em>&#x2F;;<br>&#x2F;</em>!40101 SET COLLATION_CONNECTION&#x3D;@OLD_COLLATION_CONNECTION <em>&#x2F;;<br>&#x2F;</em>!40111 SET SQL_NOTES&#x3D;@OLD_SQL_NOTES *&#x2F;;</p><p>– Dump completed on 2021-11-22 17:43:09</p><p>  </code></pre></p></details>IDEA自带数据库<p><img src="https://yuki-picgo-img.oss-cn-beijing.aliyuncs.com/vscode-img/20220327165053.png" alt="20220327165053"></p><h1 id="4-项目开发"><a href="#4-项目开发" class="headerlink" title="4 项目开发"></a>4 项目开发</h1><p>1、创建 Spring Boot 工程，选择对应的依赖。<br><img src="https://yuki-picgo-img.oss-cn-beijing.aliyuncs.com/vscode-img/20220327164238.png" alt="20220327164238"><br>2、拷贝前端静态资源（html页面、js、css等等）html<br>页面放到 templates 下，其他静态资源放到 static 下。<br>3、创建 RedirectController，实现页面的映射。<br>4、MyBatis Plus 连接数据库，自动生成代码（Controller、Service、Entity、Mapper）。<br>添加依赖</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>com.baomidou<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>mybatis-plus-boot-<br>starter<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">version</span>&gt;</span>3.4.3.1<span class="hljs-tag">&lt;/<span class="hljs-name">version</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>com.baomidou<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>mybatis-plus-<br>generator<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">version</span>&gt;</span>3.3.2<span class="hljs-tag">&lt;/<span class="hljs-name">version</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>org.apache.velocity<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>velocity<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">version</span>&gt;</span>1.7<span class="hljs-tag">&lt;/<span class="hljs-name">version</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span><br></code></pre></td></tr></table></figure><p>自动生成代码</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">package</span> com.southwind;<br><br><span class="hljs-keyword">import</span> com.baomidou.mybatisplus.annotation.DbType;<br><span class="hljs-keyword">import</span> com.baomidou.mybatisplus.annotation.FieldFill;<br><span class="hljs-keyword">import</span> com.baomidou.mybatisplus.generator.AutoGenerator;<br><span class="hljs-keyword">import</span> com.baomidou.mybatisplus.generator.config.DataSourceConfig;<br><span class="hljs-keyword">import</span> com.baomidou.mybatisplus.generator.config.GlobalConfig;<br><span class="hljs-keyword">import</span> com.baomidou.mybatisplus.generator.config.PackageConfig;<br><span class="hljs-keyword">import</span> com.baomidou.mybatisplus.generator.config.StrategyConfig;<br><span class="hljs-keyword">import</span> com.baomidou.mybatisplus.generator.config.po.TableFill;<br><span class="hljs-keyword">import</span> com.baomidou.mybatisplus.generator.config.rules.NamingStrategy;<br><br><span class="hljs-keyword">import</span> java.util.ArrayList;<br><span class="hljs-keyword">import</span> java.util.List;<br><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">Main</span> &#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">main</span><span class="hljs-params">(String[] args)</span> &#123;<br>        <span class="hljs-type">AutoGenerator</span> <span class="hljs-variable">autoGenerator</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">AutoGenerator</span>();<br>        <span class="hljs-type">DataSourceConfig</span> <span class="hljs-variable">dataSourceConfig</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">DataSourceConfig</span>();<br>        dataSourceConfig.setDbType(DbType.MYSQL);<br>        dataSourceConfig.setDriverName(<span class="hljs-string">&quot;com.mysql.cj.jdbc.Driver&quot;</span>);<br>        <span class="hljs-comment">// 数据库账号密码</span><br>        dataSourceConfig.setUsername(<span class="hljs-string">&quot;root&quot;</span>);<br>        dataSourceConfig.setPassword(<span class="hljs-string">&quot;109372&quot;</span>);<br>        dataSourceConfig.setUrl(<span class="hljs-string">&quot;jdbc:mysql://localhost:3306/mall?useUnicode=true&amp;characterEncoding=UTF-8&quot;</span>);<br>        autoGenerator.setDataSource(dataSourceConfig);<br>        <span class="hljs-type">GlobalConfig</span> <span class="hljs-variable">globalConfig</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">GlobalConfig</span>();<br>        globalConfig.setOpen(<span class="hljs-literal">false</span>);<br>        globalConfig.setOutputDir(System.getProperty(<span class="hljs-string">&quot;user.dir&quot;</span>)+<span class="hljs-string">&quot;/src/main/java&quot;</span>);<br>        globalConfig.setAuthor(<span class="hljs-string">&quot;jiyinchongzu&quot;</span>);<br>        globalConfig.setServiceName(<span class="hljs-string">&quot;%sService&quot;</span>);<br>        autoGenerator.setGlobalConfig(globalConfig);<br>        <span class="hljs-type">PackageConfig</span> <span class="hljs-variable">packageConfig</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">PackageConfig</span>();<br>        packageConfig.setParent(<span class="hljs-string">&quot;com.southwind&quot;</span>);<br>        packageConfig.setEntity(<span class="hljs-string">&quot;entity&quot;</span>);<br>        packageConfig.setMapper(<span class="hljs-string">&quot;mapper&quot;</span>);<br>        packageConfig.setController(<span class="hljs-string">&quot;controller&quot;</span>);<br>        packageConfig.setService(<span class="hljs-string">&quot;service&quot;</span>);<br>        packageConfig.setServiceImpl(<span class="hljs-string">&quot;service.impl&quot;</span>);<br>        autoGenerator.setPackageInfo(packageConfig);<br>        <span class="hljs-type">StrategyConfig</span> <span class="hljs-variable">strategyConfig</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">StrategyConfig</span>();<br>        strategyConfig.setEntityLombokModel(<span class="hljs-literal">true</span>);<br>        <span class="hljs-comment">// 下划线转驼峰</span><br>        strategyConfig.setNaming(NamingStrategy.underline_to_camel);<br>        strategyConfig.setColumnNaming(NamingStrategy.underline_to_camel);<br><br>        List&lt;TableFill&gt; list = <span class="hljs-keyword">new</span> <span class="hljs-title class_">ArrayList</span>&lt;&gt;();<br>        <span class="hljs-type">TableFill</span> <span class="hljs-variable">tableFill1</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">TableFill</span>(<span class="hljs-string">&quot;create_time&quot;</span>, FieldFill.INSERT);<br>        <span class="hljs-type">TableFill</span> <span class="hljs-variable">tableFill2</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">TableFill</span>(<span class="hljs-string">&quot;update_time&quot;</span>,FieldFill.INSERT_UPDATE);<br>        list.add(tableFill1);<br>        list.add(tableFill2);<br><br>        strategyConfig.setTableFillList(list);<br>        autoGenerator.setStrategy(strategyConfig);<br><br>        autoGenerator.execute();<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>连接数据库</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs yml"><span class="hljs-attr">spring:</span><br>  <span class="hljs-attr">datasource:</span><br>    <span class="hljs-attr">url:</span> <span class="hljs-string">jdbc:mysql://localhost:3306/mall?useUnicode=true&amp;characterEncoding=UTF-8</span><br>    <span class="hljs-attr">username:</span> <span class="hljs-string">root</span><br>    <span class="hljs-attr">password:</span> <span class="hljs-number">109372</span><br>    <span class="hljs-attr">driver-class-name:</span> <span class="hljs-string">com.mysql.cj.jdbc.Driver</span><br><span class="hljs-attr">mybatis-plus:</span><br>  <span class="hljs-attr">configuration:</span><br>    <span class="hljs-attr">log-impl:</span> <span class="hljs-string">org.apache.ibatis.logging.stdout.StdOutImpl</span><br>  <span class="hljs-attr">mapper-locations:</span> <span class="hljs-string">classpath:com/southwind/mapper/xml/*.xml</span><br><br></code></pre></td></tr></table></figure><h1 id="5-注册"><a href="#5-注册" class="headerlink" title="5 注册"></a>5 注册</h1><h2 id="1、进行数据校验"><a href="#1、进行数据校验" class="headerlink" title="1、进行数据校验"></a>1、进行数据校验</h2><p><img src="https://yuki-picgo-img.oss-cn-beijing.aliyuncs.com/vscode-img/20220429074005.png" alt="20220429074005"><br>负责接收，调service层<br><img src="https://yuki-picgo-img.oss-cn-beijing.aliyuncs.com/vscode-img/20220429074138.png" alt="20220429074138"><br><img src="https://yuki-picgo-img.oss-cn-beijing.aliyuncs.com/vscode-img/20220429074218.png" alt="20220429074218"><br><img src="https://yuki-picgo-img.oss-cn-beijing.aliyuncs.com/vscode-img/20220429074320.png" alt="20220429074320"></p><h2 id="2、进行数据存储"><a href="#2、进行数据存储" class="headerlink" title="2、进行数据存储"></a>2、进行数据存储</h2><p><img src="https://yuki-picgo-img.oss-cn-beijing.aliyuncs.com/vscode-img/20220429074454.png" alt="20220429074454"></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">//存储数据</span><br><span class="hljs-type">User</span> <span class="hljs-variable">user</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">User</span>();<br><span class="hljs-comment">//复制属性，userRegisterForm值全部赋给user</span><br>BeanUtils.copyProperties(userRegisterForm, user);<br><span class="hljs-comment">//用MD5工具类进行加密</span><br>user.setPassword(MD5Util.getSaltMD5(user.getPassword()));<br><span class="hljs-type">int</span> <span class="hljs-variable">insert</span> <span class="hljs-operator">=</span> <span class="hljs-built_in">this</span>.userMapper.insert(user);<br><span class="hljs-keyword">if</span>(insert != <span class="hljs-number">1</span>)&#123;<br>    log.info(<span class="hljs-string">&quot;【用户注册】添加用户失败&quot;</span>);<br>    <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">MMallException</span>(ResponseEnum.USER_REGISTER_ERROR);<br>&#125;<br><span class="hljs-keyword">return</span> user;<br></code></pre></td></tr></table></figure><p>自动添加时间<br><img src="https://yuki-picgo-img.oss-cn-beijing.aliyuncs.com/vscode-img/20220429075021.png" alt="20220429075021"><br><img src="https://yuki-picgo-img.oss-cn-beijing.aliyuncs.com/vscode-img/20220429075056.png" alt="20220429075056"></p><h1 id="6-登录"><a href="#6-登录" class="headerlink" title="6 登录"></a>6 登录</h1><p><img src="https://yuki-picgo-img.oss-cn-beijing.aliyuncs.com/vscode-img/20220429075621.png" alt="20220429075621"><br><img src="https://yuki-picgo-img.oss-cn-beijing.aliyuncs.com/vscode-img/20220429075711.png" alt="20220429075711"><br><img src="https://yuki-picgo-img.oss-cn-beijing.aliyuncs.com/vscode-img/20220429075759.png" alt="20220429075759"></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * 用户登录</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@param</span> userLoginForm</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@return</span></span><br><span class="hljs-comment"> */</span><br><span class="hljs-meta">@Override</span><br><span class="hljs-keyword">public</span> User <span class="hljs-title function_">login</span><span class="hljs-params">(UserLoginForm userLoginForm)</span> &#123;<br>    <span class="hljs-comment">//判断用户名是否存在</span><br>    QueryWrapper&lt;User&gt; queryWrapper = <span class="hljs-keyword">new</span> <span class="hljs-title class_">QueryWrapper</span>&lt;&gt;();<br>    <span class="hljs-comment">//查询用户名</span><br>    queryWrapper.eq(<span class="hljs-string">&quot;login_name&quot;</span>, userLoginForm.getLoginName());<br>    <span class="hljs-type">User</span> <span class="hljs-variable">user</span> <span class="hljs-operator">=</span> <span class="hljs-built_in">this</span>.userMapper.selectOne(queryWrapper);<br>    <span class="hljs-keyword">if</span>(user == <span class="hljs-literal">null</span>)&#123;<br>        log.info(<span class="hljs-string">&quot;【用户登录】用户名不存在&quot;</span>);<br>        <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">MMallException</span>(ResponseEnum.USERNAME_NOT_EXISTS);<br>    &#125;<br>    <span class="hljs-comment">//判断密码是否正确(userLoginForm.getPassword() 前台传来的 user数据库中的 )</span><br>    <span class="hljs-type">boolean</span> <span class="hljs-variable">saltverifyMD5</span> <span class="hljs-operator">=</span> MD5Util.getSaltverifyMD5(userLoginForm.getPassword(), user.getPassword());<br>    <span class="hljs-keyword">if</span>(!saltverifyMD5)&#123;<br>        log.info(<span class="hljs-string">&quot;【用户登录】密码错误&quot;</span>);<br>        <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">MMallException</span>(ResponseEnum.PASSWORD_ERROR);<br>    &#125;<br>    <span class="hljs-keyword">return</span> user;<br>&#125;<br></code></pre></td></tr></table></figure><p><img src="https://yuki-picgo-img.oss-cn-beijing.aliyuncs.com/vscode-img/20220429080252.png" alt="20220429080252"></p><h1 id="7-加载首页数据"><a href="#7-加载首页数据" class="headerlink" title="7 加载首页数据"></a>7 加载首页数据</h1><p><img src="https://yuki-picgo-img.oss-cn-beijing.aliyuncs.com/vscode-img/20220429083337.png" alt="20220429083337"><br>重定向到ProductCategoryController中加载首页数据</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">ProductCategoryController</span> &#123;<br><br>    <span class="hljs-meta">@Autowired</span><br>    <span class="hljs-keyword">private</span> ProductCategoryService productCategoryService;<br>    <span class="hljs-meta">@Autowired</span><br>    <span class="hljs-keyword">private</span> CartService cartService;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 首页数据</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@param</span> session</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@return</span></span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-meta">@GetMapping(&quot;/main&quot;)</span><br>    <span class="hljs-keyword">public</span> ModelAndView <span class="hljs-title function_">main</span><span class="hljs-params">(HttpSession session)</span>&#123;<br>        <span class="hljs-type">ModelAndView</span> <span class="hljs-variable">modelAndView</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">ModelAndView</span>();<br>        modelAndView.setViewName(<span class="hljs-string">&quot;main&quot;</span>);<br>        <span class="hljs-comment">//封装商品分类菜单</span><br>        modelAndView.addObject(<span class="hljs-string">&quot;list&quot;</span>, <span class="hljs-built_in">this</span>.productCategoryService.buildProductCategoryMenu());<br>        <span class="hljs-comment">//封装一级分类对应的商品信息</span><br>        modelAndView.addObject(<span class="hljs-string">&quot;levelOneProductList&quot;</span>,<span class="hljs-built_in">this</span>.productCategoryService.findAllProductByCategoryLevelOne());<br>        <span class="hljs-comment">//判断是否为登录用户</span><br>        <span class="hljs-type">User</span> <span class="hljs-variable">user</span> <span class="hljs-operator">=</span> (User) session.getAttribute(<span class="hljs-string">&quot;user&quot;</span>);<br>        <span class="hljs-keyword">if</span>(user == <span class="hljs-literal">null</span>)&#123;<br>            <span class="hljs-comment">//未登录</span><br>            modelAndView.addObject(<span class="hljs-string">&quot;cartList&quot;</span>, <span class="hljs-keyword">new</span> <span class="hljs-title class_">ArrayList</span>&lt;&gt;());<br>        &#125;<span class="hljs-keyword">else</span>&#123;<br>            <span class="hljs-comment">//登录用户</span><br>            <span class="hljs-comment">//查询该用户的购物车记录</span><br>            modelAndView.addObject(<span class="hljs-string">&quot;cartList&quot;</span>, <span class="hljs-built_in">this</span>.cartService.findVOListByUserId(user.getId()));<br>        &#125;<br>        <span class="hljs-keyword">return</span> modelAndView;<br>    &#125;<br><br>&#125;<br></code></pre></td></tr></table></figure><p>构建菜单<br><img src="https://yuki-picgo-img.oss-cn-beijing.aliyuncs.com/vscode-img/20220429084029.png" alt="20220429084029"><br><img src="https://yuki-picgo-img.oss-cn-beijing.aliyuncs.com/vscode-img/20220429084132.png" alt="20220429084132"></p><p>递归查询<br><img src="https://yuki-picgo-img.oss-cn-beijing.aliyuncs.com/vscode-img/20220429084607.png" alt="20220429084607"><br><img src="https://yuki-picgo-img.oss-cn-beijing.aliyuncs.com/vscode-img/20220429084547.png" alt="20220429084547"><br><img src="https://yuki-picgo-img.oss-cn-beijing.aliyuncs.com/vscode-img/20220429085110.png" alt="20220429085110"></p><p>商品分类<br><img src="https://yuki-picgo-img.oss-cn-beijing.aliyuncs.com/vscode-img/20220429090916.png" alt="20220429090916"></p><p><img src="https://yuki-picgo-img.oss-cn-beijing.aliyuncs.com/vscode-img/20220429091928.png" alt="20220429091928"><br><img src="https://yuki-picgo-img.oss-cn-beijing.aliyuncs.com/vscode-img/20220429091953.png" alt="20220429091953"><br>取出长度 没有就是0</p><p>获取图片<br><img src="https://yuki-picgo-img.oss-cn-beijing.aliyuncs.com/vscode-img/20220429092227.png" alt="20220429092227"><br><img src="https://yuki-picgo-img.oss-cn-beijing.aliyuncs.com/vscode-img/20220429092325.png" alt="20220429092325"></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs html">th:src=&quot;&#x27;/images/&#x27;+$&#123;cart.fileName&#125;&quot;<br></code></pre></td></tr></table></figure><p>购物车总价<br><img src="https://yuki-picgo-img.oss-cn-beijing.aliyuncs.com/vscode-img/20220429092522.png" alt="20220429092522"><br>后台把数据传过来，用js脚本计算即可</p><p><img src="https://yuki-picgo-img.oss-cn-beijing.aliyuncs.com/vscode-img/20220429093307.png" alt="20220429093307"></p><p><img src="https://yuki-picgo-img.oss-cn-beijing.aliyuncs.com/vscode-img/20220429093517.png" alt="20220429093517"></p><p><img src="https://yuki-picgo-img.oss-cn-beijing.aliyuncs.com/vscode-img/20220429093958.png" alt="20220429093958"></p><h1 id="8-搜索功能"><a href="#8-搜索功能" class="headerlink" title="8 搜索功能"></a>8 搜索功能</h1><h1 id="9-添加购物车"><a href="#9-添加购物车" class="headerlink" title="9 添加购物车"></a>9 添加购物车</h1><p>先判断是否登录<br><img src="https://yuki-picgo-img.oss-cn-beijing.aliyuncs.com/vscode-img/20220429105236.png" alt="20220429105236"><br>过滤器，然后再添加配置类<br><img src="https://yuki-picgo-img.oss-cn-beijing.aliyuncs.com/vscode-img/20220429105542.png" alt="20220429105542"></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs html">&lt;th:onclick=&quot;&#x27;addCart(&#x27;+$&#123;product.id&#125;+&#x27;,&#x27;+$&#123;product.price&#125;+&#x27;)&#x27;&quot;/&gt;<br></code></pre></td></tr></table></figure><p><img src="https://yuki-picgo-img.oss-cn-beijing.aliyuncs.com/vscode-img/20220429104131.png" alt="20220429104131"><br>进入addcart方法，先判断库存，然后调用add方法，把ID、价格、数量全都存储到数据库<br><img src="https://yuki-picgo-img.oss-cn-beijing.aliyuncs.com/vscode-img/20220429104321.png" alt="20220429104321"><br><img src="https://yuki-picgo-img.oss-cn-beijing.aliyuncs.com/vscode-img/20220429104410.png" alt="20220429104410"></p><p>更新库存（不用mybatis自带的接口，复杂）<br><img src="https://yuki-picgo-img.oss-cn-beijing.aliyuncs.com/vscode-img/20220429111034.png" alt="20220429111034"><br><img src="https://yuki-picgo-img.oss-cn-beijing.aliyuncs.com/vscode-img/20220429111200.png" alt="20220429111200"><br><img src="https://yuki-picgo-img.oss-cn-beijing.aliyuncs.com/vscode-img/20220429111325.png" alt="20220429111325"></p><h1 id="常见错误"><a href="#常见错误" class="headerlink" title="常见错误"></a>常见错误</h1><p>1、Unsatisfied dependency expressed through field ‘baseMapper’; nested exception is org.springframework.beans.fact<br>解决方法：添加<code>@MapperScan(&quot;com.southwind.mapper&quot;)</code><br>2、Failed to configure a Datasource: ‘ur’ attribute is not specified and no embedded datasource could be configured.<br>解决方法：引用Mybatis Plus依赖之后，启动时就会自动添加相关组件，配数据库解决</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs yml"><span class="hljs-attr">spring:</span><br>  <span class="hljs-attr">datasource:</span><br>    <span class="hljs-attr">url:</span> <span class="hljs-string">jdbc:mysql://localhost:3306/mall?useUnicode=true&amp;characterEncoding=UTF-8</span><br>    <span class="hljs-attr">username:</span> <span class="hljs-string">root</span><br>    <span class="hljs-attr">password:</span> <span class="hljs-number">109372</span><br>    <span class="hljs-attr">driver-class-name:</span> <span class="hljs-string">com.mysql.cj.jdbc.Driver</span><br><span class="hljs-attr">mybatis-plus:</span><br>  <span class="hljs-attr">configuration:</span><br>    <span class="hljs-attr">log-impl:</span> <span class="hljs-string">org.apache.ibatis.logging.stdout.StdOutImpl</span><br>  <span class="hljs-attr">mapper-locations:</span> <span class="hljs-string">classpath:com/southwind/mapper/xml/*.xml</span><br><br></code></pre></td></tr></table></figure>]]></content>
    
    
    
    <tags>
      
      <tag>笔记</tag>
      
      <tag>thyme leaf</tag>
      
      <tag>Javaweb</tag>
      
      <tag>spring boot</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>JavaWeb-jsp</title>
    <link href="/2022/03/09/JavaWeb-jsp/"/>
    <url>/2022/03/09/JavaWeb-jsp/</url>
    
    <content type="html"><![CDATA[<p>基于JSP的Javaweb</p><span id="more"></span><h2 id="JavaScript"><a href="#JavaScript" class="headerlink" title="JavaScript"></a>JavaScript</h2><h3 id="1-JavaScript介绍"><a href="#1-JavaScript介绍" class="headerlink" title="1.JavaScript介绍"></a>1.JavaScript介绍</h3><p>JavaScript 是属于 HTML 和 Web 的编程语言。<br>编程令计算机完成您需要它们做的工作。<br>Javascript 语言诞生主要是完成页面的数据验证。国此它运行在客户端，需要运行浏览器来解析执行 Javascript 代码。<br>JS 是Netscape 网景公司的产品，最早取名为 LiveScript;为了吸引更多java 程序员。更名为 Javascript。<br>$\color{red} {Js 是弱类型，Java是强类型。} $</p><h2 id="JQuery"><a href="#JQuery" class="headerlink" title="JQuery"></a>JQuery</h2><h3 id="1-jQuery-介绍"><a href="#1-jQuery-介绍" class="headerlink" title="1.jQuery 介绍"></a>1.jQuery 介绍</h3><h4 id="什么是-jQuery"><a href="#什么是-jQuery" class="headerlink" title="什么是 jQuery ?"></a>什么是 jQuery ?</h4><p>jQuery，顾名思义，也就是 JavaScript 和查询（Query），它就是辅助 JavaScript 开发的 js 类库。</p><h4 id="jQuery-好处"><a href="#jQuery-好处" class="headerlink" title="jQuery 好处"></a>jQuery 好处</h4><p>jQuery 是免费、开源的，jQuery 的语法设计可以使开发更加便捷，例如操作文档对象、选择 DOM 元素、制作动画效果、事件处理、使用 Ajax 以及其他功能</p><h4 id="核心思想"><a href="#核心思想" class="headerlink" title="核心思想"></a>核心思想</h4><p>它的核心思想是 write less,do more(写得更少,做得更多)，所以它实现了很多浏览器的兼容问题。</p><h4 id="jQuery-流行程度"><a href="#jQuery-流行程度" class="headerlink" title="jQuery 流行程度"></a>jQuery 流行程度</h4><p>jQuery 现在已经成为最流行的 JavaScript 库，在世界前 10000 个访问最多的网站中，有超过 55%在使用jQuery。</p><h3 id="2-JQuery初体验"><a href="#2-JQuery初体验" class="headerlink" title="2.JQuery初体验"></a>2.JQuery初体验</h3><p>JQuery的Helloworld</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-keyword">html</span> <span class="hljs-keyword">PUBLIC</span> <span class="hljs-string">&quot;-//W3C//DTD HTML 4.01 Transitional//EN&quot;</span> <span class="hljs-string">&quot;http://www.w3.org/TR/html4/loose.dtd&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">html</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">head</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">http-equiv</span>=<span class="hljs-string">&quot;Content-Type&quot;</span> <span class="hljs-attr">content</span>=<span class="hljs-string">&quot;text/html; charset=UTF-8&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">title</span>&gt;</span>Insert title here<span class="hljs-tag">&lt;/<span class="hljs-name">title</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text/javascript&quot;</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;../script/jquery-1.7.2.js&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text/javascript&quot;</span>&gt;</span><span class="language-javascript"></span><br><span class="language-javascript"><span class="hljs-comment">/*alert($);*/</span></span><br><span class="language-javascript">$(<span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<span class="hljs-comment">//表示页面加载完成之后，相当于onload事件</span></span><br><span class="language-javascript"><span class="hljs-keyword">var</span> $btnobj = $(<span class="hljs-string">&quot;#btnId&quot;</span>);<span class="hljs-comment">//表示按id查询标签对象</span></span><br><span class="language-javascript">$btnobj.<span class="hljs-title function_">click</span>(<span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;</span><br><span class="language-javascript"><span class="hljs-title function_">alert</span>(<span class="hljs-string">&quot;JQuery的单击事件&quot;</span>);</span><br><span class="language-javascript">&#125;)</span><br><span class="language-javascript"><span class="hljs-comment">/*var btnobj = document.getElementById(&quot;btnId&quot;);</span></span><br><span class="hljs-comment"><span class="language-javascript">alert(btnobj);*/</span></span><br><span class="language-javascript">&#125;)</span><br><span class="language-javascript"></span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">head</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span><br><br><span class="hljs-tag">&lt;<span class="hljs-name">button</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;btnId&quot;</span>&gt;</span>SayHello<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span><br><br><span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">html</span>&gt;</span><br></code></pre></td></tr></table></figure><h4 id="常见问题"><a href="#常见问题" class="headerlink" title="常见问题"></a>常见问题</h4><p>1、使用 jQuery 一定要引入 jQuery 库吗？ 答案： 是，必须<br>2、jQuery 中的$到底是什么？             答案： 它是一个函数<br>3、怎么为按钮添加点击响应函数的？        答案：<br>    1、使用 jQuery 查询到标签对象<br>    2、使用标签对象<code>.click( function()&#123;&#125; )</code></p><h3 id="3、jQuery-核心函数"><a href="#3、jQuery-核心函数" class="headerlink" title="3、jQuery 核心函数"></a>3、jQuery 核心函数</h3><p><code>$ </code>是 jQuery 的核心函数，能完成 jQuery 的很多功能。<code>$</code>()就是调用<code>$</code>这个函数<br>1、传入参数为[函数]时：<br>表示页面加载完成之后。相当于 <code>window.onload = function()&#123;&#125;;</code><br>eg：<code>$(function()&#123;&#125;); </code><br>2、传入参数为 [HTML字符串]时：<br>会对我们创建这个html标签对象$\color{red}{???}$<br>3、传入参数为[选择器字符串]时<br><code>$(“#id 属性值”);</code> id 选择器，根据 id 查询标签对象<br><code>$(“标签名”); </code>标签名选择器，根据指定的标签名查询标签对象<br><code>$(“.class 属性值”); </code>类型选择器，可以根据 class 属性查询标签对</p><h3 id="4、jQuery-对象和-dom-对象区分"><a href="#4、jQuery-对象和-dom-对象区分" class="headerlink" title="4、jQuery 对象和 dom 对象区分"></a>4、jQuery 对象和 dom 对象区分</h3><h4 id="1、什么是jQuery对象，什么是Dom对象"><a href="#1、什么是jQuery对象，什么是Dom对象" class="headerlink" title="1、什么是jQuery对象，什么是Dom对象"></a>1、什么是jQuery对象，什么是Dom对象</h4><p><em>Dom对象</em><br>1.通过 getElementById()查询出来的标签对象是 Dom 对象<br>2.通过 getElementsByName()查询出来的标签对象是 Dom 对象<br>3.通过 getElementsByTagName()查询出来的标签对象是 Dom 对象<br>4.通过 createElement() 方法创建的对象，是 Dom 对象<br><em>jQuery 对象</em><br>1.通过 JQuery 提供的 API 创建的对象，是 JQuery 对象<br>2.通过 JQuery 包装的 Dom 对象，也是 JQuery 对象<br>3.通过 JQuery 提供的 API 查询到的对象，是 JQuery 对象<br>jQuery 对象 Alert 出来的效果是：[object]</p><h4 id="2、jQuery-对象的本质是什么"><a href="#2、jQuery-对象的本质是什么" class="headerlink" title="2、jQuery 对象的本质是什么"></a>2、jQuery 对象的本质是什么</h4><p>$\color{red}{jQuery 对象是 dom 对象的数组 + jQuery 提供的一系列功能函数}$</p><h4 id="3、jQuery-对象和-Dom-对象使用区别"><a href="#3、jQuery-对象和-Dom-对象使用区别" class="headerlink" title="3、jQuery 对象和 Dom 对象使用区别"></a>3、jQuery 对象和 Dom 对象使用区别</h4><p>jQuery 对象不能使用 DOM 对象的属性和方法<br>DOM 对象也不能使用 jQuery 对象的属性和方法</p><h4 id="4、Dom-对象和-jQuery-对象互转"><a href="#4、Dom-对象和-jQuery-对象互转" class="headerlink" title="4、Dom 对象和 jQuery 对象互转"></a>4、Dom 对象和 jQuery 对象互转</h4><p>$\color{red}{1、Dom 对象转化为 jQuery 对象}$<br>1、先有 DOM 对象<br>2、<code>$</code>( DOM 对象 ) 就可以转换成为 jQuery 对象<br>$\color{red}{2、jQuery 对象转为 dom 对象}$<br>1、先有 jQuery 对象<br>2、jQuery 对象[下标]取出相应的 DOM 对象<br><img src="https://yuki-picgo-img.oss-cn-beijing.aliyuncs.com/vscode-img/20220311113459.png" alt="20220311113459"></p><h4 id="5、jQuery-选择器"><a href="#5、jQuery-选择器" class="headerlink" title=" 5、jQuery 选择器"></a><font color = red > 5、jQuery 选择器</font></h4><p>1、$\color{red}{基}\color{blue}{本选择器}$<br><code>#ID 选择器</code>：根据 id 查找标签对象<br><code>.class 选择器</code>：根据 class 查找标签对象<br><code>element 选择器</code>：根据标签名查找标签对象<br><code>* 选择器</code>：表示任意的，所有的元素<br><code>selector1，selector2 组合选择器</code>：合并选择器 1，选择器 2</p><h2 id="JavaWeb"><a href="#JavaWeb" class="headerlink" title="JavaWeb"></a>JavaWeb</h2><h3 id="1、JavaWeb的概念"><a href="#1、JavaWeb的概念" class="headerlink" title="1、JavaWeb的概念"></a>1、JavaWeb的概念</h3><p>a)什么是 JavaWe<br>JavaWeb 是指，所有通过 Java 语言编写可以通过浏览器访问的程序的总称，叫 JavaWeb。JavaWeb 是基于请求和响应来开发的。<br>b)什么是请求<br>请求是指客户端给服务器发送数据，叫请求 Request。<br>c)什么是响应<br>响应是指服务器给客户端回传数据，叫响应 Response。<br>d)请求和响应的关系<br>请求和响应是成对出现的，有请求就有响应。<br><img src="https://yuki-picgo-img.oss-cn-beijing.aliyuncs.com/vscode-img/20220311141841.png" alt="20220311141841"></p><h3 id="2、Web-资源的分类"><a href="#2、Web-资源的分类" class="headerlink" title="2、Web 资源的分类"></a>2、Web 资源的分类</h3><p>web 资源按实现的技术和呈现的效果的不同，又分为静态资源和动态资源两种。<br>静态资源： html、css、js、txt、mp4 视频 , jpg 图片<br>动态资源： jsp页面、Servlet 程序</p><h3 id="3、常用的-Web-服务"><a href="#3、常用的-Web-服务" class="headerlink" title="3、常用的 Web 服务"></a>3、常用的 Web 服务</h3><p>Tomcat：由 Apache 组织提供的一种 Web 服务器，提供对 jsp 和 Servlet 的支持。它是一种轻量级的 javaWeb 容器（服务器），也是当前应用最广的 JavaWeb 服务器（免费）。<br>Jboss：是一个遵从 JavaEE 规范的、开放源代码的、纯 Java 的 EJB 服务器，它支持所有的 JavaEE 规范（免费）。<br>GlassFish： 由 Oracle 公司开发的一款 JavaWeb 服务器，是一款强健的商业服务器，达到产品级质量（应用很少）。<br>Resin：是 CAUCHO 公司的产品，是一个非常流行的服务器，对 servlet 和 JSP 提供了良好的支持，性能也比较优良，resin 自身采用 JAVA 语言开发（收费，应用比较多）。<br>WebLogic：是 Oracle 公司的产品，是目前应用最广泛的 Web 服务器，支持 JavaEE 规范，而且不断的完善以适应新的开发要求，适合大型项目（收费，用的不多，适合大公司）。</p><h3 id="4、Tomcat-服务器和-Servlet-版本的对应关系"><a href="#4、Tomcat-服务器和-Servlet-版本的对应关系" class="headerlink" title="4、Tomcat 服务器和 Servlet 版本的对应关系"></a>4、Tomcat 服务器和 Servlet 版本的对应关系</h3><p>当前企业常用的版本 7.<code>*</code>、8。<br>Servlet 程序从 2.5 版本是现在世面使用最多的版本（xml 配置）<br>到了 Servlet3.0 之后。就是注解版本的 Servlet使用。<br>以 2.5 版本为主线讲解 Servlet 程序。<br><img src="https://yuki-picgo-img.oss-cn-beijing.aliyuncs.com/vscode-img/20220311142404.png" alt="20220311142404"></p><h3 id="5、Tomcat-的使用"><a href="#5、Tomcat-的使用" class="headerlink" title="5、Tomcat 的使用"></a>5、Tomcat 的使用</h3><p>a)安装<br>找到你需要用的 Tomcat 版本对应的 zip 压缩包，解压到需要安装的目录即可。<br>b)目录介绍<br>bin &amp;emsp;专门用来存放 Tomcat 服务器的可执行程序<br>conf &amp;ensp;专门用来存放 Tocmat 服务器的配置文件<br>lib &amp;emsp;专门用来存放 Tomcat 服务器的 jar 包<br>logs &amp;emsp;专门用来存放 Tomcat 服务器运行时输出的日记信息<br>temp &amp;emsp;专门用来存放 Tomcdat 运行时产生的临时数据<br>webapps &amp;emsp;专门用来存放部署的 Web 工程。<br>work &amp;emsp;是 Tomcat 工作时的目录，用来存放 Tomcat 运行时 jsp 翻译为 Servlet 的源码，和 Session钝化的目录。<br>c)如何启动 Tomcat 服务器<br>找到 Tomcat 目录下的 bin 目录下的 startup.bat 文件，双击，就可以启动 Tomcat 服务器。<br>如何测试 Tomcat 服务器启动成功？？<br>打开浏览器，在浏览器地址栏中输入以下地址测试：<br>1、<a href="http://localhost:8080/">http://localhost:8080</a><br>2、<a href="http://127.0.0.1:8080/">http://127.0.0.1:8080</a><br>3、http:&#x2F;&#x2F;真实 ip:8080<br>当出现如下界面，说明 Tomcat 服务器启动成功！！</p><h2 id="Servlet"><a href="#Servlet" class="headerlink" title="Servlet"></a>Servlet</h2><p>a)什么是 Servlet<br>1、Servlet 是 JavaEE 规范之一。规范就是接口<br>2、Servlet 就 JavaWeb 三大组件之一。三大组件分别是：Servlet 程序、Filter 过滤器、Listener 监听器。<br>3、Servlet 是运行在服务器上的一个 java 小程序，<font color = red>它可以接收客户端发送过来的请求，并响应数据给客户端。</font><br>b)手动实现 Servlet 程序<br>1、编写一个类去实现 Servlet 接口<br>2、实现 service 方法，处理请求，并响应数据<br>3、到 web.xml 中去配置 servlet 程序的访问地址</p>]]></content>
    
    
    
    <tags>
      
      <tag>Java</tag>
      
      <tag>笔记</tag>
      
      <tag>Javaweb</tag>
      
      <tag>jsp</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>debug</title>
    <link href="/2022/02/19/debug/"/>
    <url>/2022/02/19/debug/</url>
    
    <content type="html"><![CDATA[<h1 id="常见问题"><a href="#常见问题" class="headerlink" title="常见问题"></a>常见问题</h1><span id="more"></span><h3 id="hexo博客在chrome＆edge中无法显示图片"><a href="#hexo博客在chrome＆edge中无法显示图片" class="headerlink" title="hexo博客在chrome＆edge中无法显示图片"></a>hexo博客在chrome＆edge中无法显示图片</h3><h4 id="问题描述"><a href="#问题描述" class="headerlink" title="问题描述"></a>问题描述</h4><p> hexo 发的博客图片 在 Google Chrome 和Microsoft Edge下无法正常显示，但在 Safari 和 hello、FireFox、 QQ浏览器下却可以正常显示。</p><h4 id="原因"><a href="#原因" class="headerlink" title="原因"></a>原因</h4><p> 使用的图床不支持&#x2F;未开启https访问，自 Chrome83 版本开始，Chrome浏览器默认阻止混合内容<code>MixContent</code>的下载，加载等。既 HTTPS 网站 只能以 HTTPS 加载内容。这个问题导致很多未配置静态资源SSL证书的网站在加载图片等http内容时失败。</p><h4 id="解决方法"><a href="#解决方法" class="headerlink" title="解决方法"></a>解决方法</h4><p> 最佳方法：使用支持https的图床，例如GitHub图床<br> 其他方法：更换浏览器（</p><h3 id="hexo-g中错误"><a href="#hexo-g中错误" class="headerlink" title="hexo g中错误"></a>hexo g中错误</h3><h4 id="问题描述-1"><a href="#问题描述-1" class="headerlink" title="问题描述"></a>问题描述</h4><p> <img src="https://yuki-picgo-img.oss-cn-beijing.aliyuncs.com/vscode-img/20220404224434.png" alt="20220404224434"></p><h4 id="解决方法-1"><a href="#解决方法-1" class="headerlink" title="解决方法"></a>解决方法</h4><p> <img src="https://yuki-picgo-img.oss-cn-beijing.aliyuncs.com/vscode-img/20220404224607.png" alt="20220404224607"><br> 语法格式错误</p>]]></content>
    
    
    
    <tags>
      
      <tag>debug</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>改变代码高亮风格</title>
    <link href="/2022/02/13/%E4%BD%BF%E7%94%A8Color-themes-for-Google-Code-Prettify%E6%94%B9%E5%8F%98%E4%BB%A3%E7%A0%81%E9%AB%98%E4%BA%AE%E9%A3%8E%E6%A0%BC/"/>
    <url>/2022/02/13/%E4%BD%BF%E7%94%A8Color-themes-for-Google-Code-Prettify%E6%94%B9%E5%8F%98%E4%BB%A3%E7%A0%81%E9%AB%98%E4%BA%AE%E9%A3%8E%E6%A0%BC/</url>
    
    <content type="html"><![CDATA[<h1 id="改变博客的代码高亮风格"><a href="#改变博客的代码高亮风格" class="headerlink" title="改变博客的代码高亮风格"></a>改变博客的代码高亮风格</h1><span id="more"></span><h1 id="使用Color-themes-for-Google-Code-Prettify改变代码高亮风格"><a href="#使用Color-themes-for-Google-Code-Prettify改变代码高亮风格" class="headerlink" title="使用Color themes for Google Code Prettify改变代码高亮风格"></a>使用Color themes for Google Code Prettify改变代码高亮风格</h1><h2 id="一：放弃使用highlight-js代码高亮"><a href="#一：放弃使用highlight-js代码高亮" class="headerlink" title="一：放弃使用highlight.js代码高亮"></a>一：放弃使用highlight.js代码高亮</h2><p>在博客配置文件_config.yml中将highlight相关配置全设置为false：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-attr">highlight:</span><br>  <span class="hljs-attr">enable:</span> <span class="hljs-literal">false</span><br>  <span class="hljs-attr">line_number:</span> <span class="hljs-literal">false</span><br>  <span class="hljs-attr">auto_detect:</span> <span class="hljs-literal">false</span><br>  <span class="hljs-attr">tab_replace:</span> <span class="hljs-string">&#x27;&#x27;</span><br>  <span class="hljs-attr">wrap:</span> <span class="hljs-literal">true</span><br>  <span class="hljs-attr">hljs:</span> <span class="hljs-literal">false</span><br></code></pre></td></tr></table></figure><p>然后去掉highlight.css样式文件的加载，其中有代码相关的<code>pre</code>标签和<code>code</code>标签样式，会影响后面我们加载code-prettify代码样式。</p>]]></content>
    
    
    
    <tags>
      
      <tag>markdown</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Markdown教程</title>
    <link href="/2022/02/11/Markdown%E6%95%99%E7%A8%8B/"/>
    <url>/2022/02/11/Markdown%E6%95%99%E7%A8%8B/</url>
    
    <content type="html"><![CDATA[<p>Markdown 是一种轻量级标记语言，它允许人们使用易读易写的纯文本格式编写文档。<br>Markdown 语言在 2004 由约翰·格鲁伯（英语：John Gruber）创建。<br>Markdown 编写的文档可以导出 HTML 、Word、图像、PDF、Epub 等多种格式的文档。<br>Markdown 编写的文档后缀为 <strong>.md</strong>, <strong>.markdown</strong>。</p><span id="more"></span><h1 id="Markdown教程"><a href="#Markdown教程" class="headerlink" title="Markdown教程"></a>Markdown教程</h1><h2 id="一-简介"><a href="#一-简介" class="headerlink" title="一. 简介"></a>一. 简介</h2><p>Markdown 是一种轻量级标记语言，它允许人们使用易读易写的纯文本格式编写文档。<br>Markdown 语言在 2004 由约翰·格鲁伯（英语：John Gruber）创建。<br>Markdown 编写的文档可以导出 HTML 、Word、图像、PDF、Epub 等多种格式的文档。<br>Markdown 编写的文档后缀为 <strong>.md</strong>, <strong>.markdown</strong>。</p><h3 id="Markdown-应用"><a href="#Markdown-应用" class="headerlink" title="Markdown 应用"></a>Markdown 应用</h3><p>Markdown 能被使用来撰写电子书，如：Gitbook。<br>当前许多网站都广泛使用 Markdown 来撰写帮助文档或是用于论坛上发表消息。例如GitHub、简书、reddit、Diaspora、Stack Exchange、OpenStreetMap 、SourceForge等。</p><h2 id="二-Markdown-标题"><a href="#二-Markdown-标题" class="headerlink" title="二.Markdown 标题"></a>二.Markdown 标题</h2><h3 id="1-格式一："><a href="#1-格式一：" class="headerlink" title="1.格式一："></a>1.格式一：</h3><p>使用 &#x3D; 和 - 标记一级和二级标题，&#x3D; 和 - 标记语法格式如下：</p><figure class="highlight asciidoc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs asciidoc"><span class="hljs-section">我展示的是一级标题</span><br><span class="hljs-section">=================</span><br><br><span class="hljs-section">我展示的是二级标题</span><br><span class="hljs-section">-----------------</span><br></code></pre></td></tr></table></figure><p>显示效果如下图：</p><p><img src="https://raw.githubusercontent.com/Mr-Yuki-six/blog-img/main/%E4%BD%BF%E7%94%A8%20%3D%20%E5%92%8C%20-%20%E6%A0%87%E8%AE%B0%E4%B8%80%E7%BA%A7%E5%92%8C%E4%BA%8C%E7%BA%A7%E6%A0%87%E9%A2%98.png" alt="使用 = 和 - 标记一级和二级标题"></p><h3 id="2-格式二："><a href="#2-格式二：" class="headerlink" title="2.格式二："></a>2.格式二：</h3><p>使用 # 号可表示 1-6 级标题，一级标题对应一个 # 号，二级标题对应两个 # 号，以此类推，语法格式如下：</p><figure class="highlight clean"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs clean"># 一级标题<br>## 二级标题<br>### 三级标题<br>#### 四级标题<br>##### 五级标题<br>###### 六级标题<br></code></pre></td></tr></table></figure><p>显示效果如下图：<br><img src="https://raw.githubusercontent.com/Mr-Yuki-six/blog-img/main/%E4%BD%BF%E7%94%A8%20" alt="使用#号标记"></p><h2 id="三-Markdown-段落格式"><a href="#三-Markdown-段落格式" class="headerlink" title="三.Markdown 段落格式"></a>三.Markdown 段落格式</h2><ul><li><p>Markdown 段落没有特殊的格式，直接编写文字就好，段落的换行是使用两个以上空格加上回车。<br><img src="https://raw.githubusercontent.com/Mr-Yuki-six/blog-img/main/%E6%AE%B5%E8%90%BD%E6%8D%A2%E8%A1%8C.png" alt="image-20220210235910549"></p></li><li><p>字体<br>Markdown 可以使用以下几种字体：</p><figure class="highlight asciidoc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs asciidoc"><span class="hljs-strong">*斜体文本*</span><br><span class="hljs-emphasis">_斜体文本_</span><br><span class="hljs-strong">**粗体文本**</span><br><span class="hljs-emphasis">__粗体文本__</span><br><span class="hljs-strong">***粗斜体文本**</span>*<br><span class="hljs-emphasis">___粗斜体文本__</span>_<br></code></pre></td></tr></table></figure><p>显示效果如图：</p></li></ul><p><img src="https://raw.githubusercontent.com/Mr-Yuki-six/blog-img/main/%E5%AD%97%E4%BD%93.png" alt="字体"></p><ul><li>分隔线<br>你可以在一行中用三个以上的星号、减号、底线来建立一个分隔线，行内不能有其他东西。你也可以在星号或是减号中间插入空格。下面每种写法都可以建立分隔线：<figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs markdown"><span class="hljs-strong">**<span class="hljs-emphasis">*</span></span><br><span class="hljs-emphasis"><span class="hljs-strong"></span></span><br><span class="hljs-emphasis"><span class="hljs-strong">*</span> <span class="hljs-emphasis">* *</span></span><br><span class="hljs-strong"></span><br><span class="hljs-strong">**</span><span class="hljs-strong">**<span class="hljs-emphasis">*</span></span><br><span class="hljs-emphasis"><span class="hljs-strong"></span></span><br><span class="hljs-emphasis"><span class="hljs-strong">- - -</span></span><br><span class="hljs-emphasis"><span class="hljs-strong"></span></span><br><span class="hljs-emphasis"><span class="hljs-strong">----------</span></span><br></code></pre></td></tr></table></figure>显示效果如下所示：</li></ul><p><img src="https://raw.githubusercontent.com/Mr-Yuki-six/blog-img/main/%E5%88%86%E9%9A%94%E7%BA%BF.png" alt="分隔线"></p><ul><li><p>删除线</p><p>如果段落上的文字要添加删除线，只需要在文字的两端加上两个波浪线 <strong>~~</strong> 即可，实例如下：</p><figure class="highlight haml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs haml">~~ hello world~~<br></code></pre></td></tr></table></figure><p>显示效果如下所示：</p><p><img src="https://raw.githubusercontent.com/Mr-Yuki-six/blog-img/main/%E5%88%A0%E9%99%A4%E7%BA%BF.png" alt="删除线"></p></li><li><p>下划线</p><p>下划线可以通过 HTML 的<code>&lt;u&gt;</code>标签来实现：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">u</span>&gt;</span>下划线<span class="hljs-tag">&lt;/<span class="hljs-name">u</span>&gt;</span><br></code></pre></td></tr></table></figure><p>显示效果如下所示：</p><p><img src="https://raw.githubusercontent.com/Mr-Yuki-six/blog-img/main/%E4%B8%8B%E5%88%92%E7%BA%BF.png" alt="下划线"></p></li><li><p>脚注</p><p>脚注是对文本的补充说明。</p><p>Markdown 脚注的格式如下:</p><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs angelscript"><span class="hljs-string">[^要注明的文本]</span>   <br></code></pre></td></tr></table></figure><p>实例演示：</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs markdown">创建脚注格式类似这样 [^这是脚注]。<br><br>[<span class="hljs-symbol">^这是脚注</span>]: <span class="hljs-link">你的鼠标放到了脚注上</span><br></code></pre></td></tr></table></figure><p>显示效果如下所示：</p><p><img src="https://raw.githubusercontent.com/Mr-Yuki-six/blog-img/main/%E8%84%9A%E6%B3%A8%E5%B1%95%E7%A4%BA.png" alt="脚注"></p></li></ul><h2 id="四-Markdown-列表"><a href="#四-Markdown-列表" class="headerlink" title="四.Markdown 列表"></a>四.Markdown 列表</h2><p>Markdown 支持有序列表和无序列表。</p><p>无序列表使用星号(*)、加号(+)或是减号(-)作为列表标记，这些标记后面要添加一个空格，然后再填写内容：</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs markdown"><span class="hljs-bullet">*</span> 第一项<br><span class="hljs-bullet">*</span> 第二项<br><span class="hljs-bullet">*</span> 第三项<br><br><span class="hljs-bullet">+</span> 第一项<br><span class="hljs-bullet">+</span> 第二项<br><span class="hljs-bullet">+</span> 第三项<br><br><br><span class="hljs-bullet">-</span> 第一项<br><span class="hljs-bullet">-</span> 第二项<br><span class="hljs-bullet">-</span> 第三项<br></code></pre></td></tr></table></figure><p>显示效果如下所示：</p><p><img src="https://raw.githubusercontent.com/Mr-Yuki-six/blog-img/main/%E6%97%A0%E5%BA%8F%E5%88%97%E8%A1%A8.png" alt="无序列表"></p><p>有序列表使用数字并加上 <strong>.</strong> 号来表示，如：</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs markdown"><span class="hljs-bullet">1.</span> 第一项<br><span class="hljs-bullet">2.</span> 第二项<br><span class="hljs-bullet">3.</span> 第三项<br></code></pre></td></tr></table></figure><p>显示效果如下所示：</p><p><img src="https://raw.githubusercontent.com/Mr-Yuki-six/blog-img/main/%E6%9C%89%E5%BA%8F%E5%88%97%E8%A1%A8.png" alt="有序列表"></p><p>列表嵌套只需在子列表中的选项前面添加四个空格即可：</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs markdown"><span class="hljs-bullet">1.</span> 第一项：<br><span class="hljs-bullet">    -</span> 第一项嵌套的第一个元素<br><span class="hljs-bullet">    -</span> 第一项嵌套的第二个元素<br><span class="hljs-bullet">2.</span> 第二项：<br><span class="hljs-bullet">    -</span> 第二项嵌套的第一个元素<br><span class="hljs-bullet">    -</span> 第二项嵌套的第二个元素<br></code></pre></td></tr></table></figure><p>显示效果如下所示：</p><p><img src="https://raw.githubusercontent.com/Mr-Yuki-six/blog-img/main/%E5%88%97%E8%A1%A8%E5%B5%8C%E5%A5%97.png" alt="列表嵌套"></p><h2 id="五-Markdown-区块"><a href="#五-Markdown-区块" class="headerlink" title="五.Markdown 区块"></a>五.Markdown 区块</h2><p>Markdown 区块引用是在段落开头使用 &gt; 符号 ，然后后面紧跟一个空格符号：</p><figure class="highlight node-repl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs node-repl"><span class="hljs-meta prompt_">&gt;</span> <span class="language-javascript">春眠不觉晓，</span><br><span class="hljs-meta prompt_">&gt;</span> <span class="language-javascript">处处闻啼鸟。</span><br><span class="hljs-meta prompt_">&gt;</span> <span class="language-javascript">夜来风雨声，</span><br><span class="hljs-meta prompt_">&gt;</span> <span class="language-javascript">花落知多少。</span><br></code></pre></td></tr></table></figure><p>显示效果如下所示</p><p><img src="https://raw.githubusercontent.com/Mr-Yuki-six/blog-img/main/%E5%8C%BA%E5%9D%97%E5%BC%95%E7%94%A8.png" alt="区块引用"></p><p>另外区块是可以嵌套的，一个 <strong>&gt;</strong> 符号是最外层，两个 <strong>&gt;</strong> 符号是第一层嵌套，以此类推：</p><figure class="highlight node-repl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs node-repl"><span class="hljs-meta prompt_">&gt;</span> <span class="language-javascript">春眠不觉晓，</span><br><span class="hljs-meta prompt_">&gt;</span> <span class="language-javascript">&gt; 处处闻啼鸟。</span><br><span class="hljs-meta prompt_">&gt;</span> <span class="language-javascript">&gt; &gt; 夜来风雨声，</span><br><span class="hljs-meta prompt_">&gt;</span> <span class="language-javascript">&gt; &gt; &gt; 花落知多少。</span><br></code></pre></td></tr></table></figure><p>显示效果如下所示：</p><p><img src="https://raw.githubusercontent.com/Mr-Yuki-six/blog-img/main/%E5%8C%BA%E5%9D%97%E5%B5%8C%E5%A5%97.png" alt="区块嵌套"></p><p>区块中使用列表实例如下：</p><figure class="highlight node-repl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs node-repl"><span class="hljs-meta prompt_">&gt;</span> <span class="language-javascript">区块中使用列表</span><br><span class="hljs-meta prompt_">&gt;</span> <span class="language-javascript"><span class="hljs-number">1.</span> 第一项</span><br><span class="hljs-meta prompt_">&gt;</span> <span class="language-javascript"><span class="hljs-number">2.</span> 第二项</span><br><span class="hljs-meta prompt_">&gt;</span> <span class="language-javascript">+ 第一项</span><br><span class="hljs-meta prompt_">&gt;</span> <span class="language-javascript">+ 第二项</span><br><span class="hljs-meta prompt_">&gt;</span> <span class="language-javascript">+ 第三项</span><br></code></pre></td></tr></table></figure><p>显示效果如下所示：</p><p><img src="https://raw.githubusercontent.com/Mr-Yuki-six/blog-img/main/%E5%8C%BA%E5%9D%97%E4%B8%AD%E4%BD%BF%E7%94%A8%E5%88%97%E8%A1%A8.png" alt="区块中使用列表"></p><p>如果要在列表项目内放进区块，那么就需要在 <strong>&gt;</strong> 前添加四个空格的缩进。</p><p>列表中使用区块实例如下：</p><figure class="highlight asciidoc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs asciidoc"><span class="hljs-bullet">* </span>第一项<br><span class="hljs-code">    &gt; 春眠不觉晓</span><br><span class="hljs-code">    &gt; 处处闻啼鸟</span><br><span class="hljs-bullet">* </span>第二项<br></code></pre></td></tr></table></figure><p>显示效果如下所示：</p><p><img src="https://raw.githubusercontent.com/Mr-Yuki-six/blog-img/main/%E5%88%97%E8%A1%A8%E4%B8%AD%E4%BD%BF%E7%94%A8%E5%8C%BA%E5%9D%97.png" alt="列表中使用区块"></p><h2 id="六-Markdown-代码"><a href="#六-Markdown-代码" class="headerlink" title="六.Markdown 代码"></a>六.Markdown 代码</h2><p>如果是段落上的一个函数或片段的代码可以用反引号把它包起来（**&#96;**），例如：</p><figure class="highlight autohotkey"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs autohotkey">`printf()` 函数<br></code></pre></td></tr></table></figure><p>显示效果如下所示：</p><p><img src="https://raw.githubusercontent.com/Mr-Yuki-six/blog-img/main/%E4%BB%A3%E7%A0%81%E7%89%87%E6%AE%B5.png" alt="代码片段"></p><p>代码区块使用 <strong>4 个空格</strong>或者一个<strong>制表符（Tab 键）</strong>。例如：</p><p><img src="https://raw.githubusercontent.com/Mr-Yuki-six/blog-img/main/%E4%BB%A3%E7%A0%81%E5%8C%BA%E5%9D%97.png" alt="代码区块"></p><p>显示效果如下所示：</p><p><img src="https://raw.githubusercontent.com/Mr-Yuki-six/blog-img/main/%E4%BB%A3%E7%A0%81%E5%8C%BA%E5%9D%97%E6%BC%94%E7%A4%BA.png" alt="代码区块演示"></p><p>也可以用 <strong>&#96;&#96;&#96;</strong> 包裹一段代码，并指定一种语言（也可以不指定）：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">helloworld</span> &#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">main</span><span class="hljs-params">(String[] args)</span>&#123;<br>        System.out.println(<span class="hljs-string">&quot;helloworld&quot;</span>);<br>    &#125;<br>&#125;<br><br></code></pre></td></tr></table></figure><p>显示效果如下所示：</p><p>![&#96;&#96;&#96;包裹代码](<a href="https://raw.githubusercontent.com/Mr-Yuki-six/blog-img/main/%60%60%60%E5%8C%85%E8%A3%B9%E4%BB%A3%E7%A0%81.png">https://raw.githubusercontent.com/Mr-Yuki-six/blog-img/main/%60%60%60%E5%8C%85%E8%A3%B9%E4%BB%A3%E7%A0%81.png</a>)</p><h2 id="七-Markdown-链接"><a href="#七-Markdown-链接" class="headerlink" title="七.Markdown 链接"></a>七.Markdown 链接</h2><p>链接使用方法如下：</p><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs scss"><span class="hljs-selector-attr">[链接名称]</span>(链接地址)<br><br>或者<br><br>&lt;链接地址&gt;<br></code></pre></td></tr></table></figure><p>例如：</p><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs less">这是一个<span class="hljs-selector-tag">B</span>站链接 <span class="hljs-selector-attr">[哔哩哔哩]</span>(<span class="hljs-attribute">https</span>:<span class="hljs-comment">//www.bilibili.com/)</span><br>&lt;<span class="hljs-attribute">https</span>:<span class="hljs-comment">//www.bilibili.com/&gt;</span><br></code></pre></td></tr></table></figure><p>显示效果如下所示：</p><p><img src="https://raw.githubusercontent.com/Mr-Yuki-six/blog-img/main/%E9%93%BE%E6%8E%A5.png" alt="链接"></p><p>高级链接：我们可以通过变量来设置一个链接，变量赋值在文档末尾进行，例如：</p><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs less">这个链接用 <span class="hljs-number">1</span> 作为网址变量 <span class="hljs-selector-attr">[Google]</span><span class="hljs-selector-attr">[1]</span><br>这个链接用 <span class="hljs-number">2</span> 作为网址变量 <span class="hljs-selector-attr">[Baidu]</span><span class="hljs-selector-attr">[2]</span><br>然后在文档的结尾为变量赋值（网址）<br><br>  <span class="hljs-selector-attr">[1]</span>: <span class="hljs-selector-tag">https</span>:<span class="hljs-comment">//www.google.com/</span><br>  <span class="hljs-selector-attr">[2]</span>: <span class="hljs-selector-tag">https</span>:<span class="hljs-comment">//www.baidu.com/</span><br></code></pre></td></tr></table></figure><p>显示效果如下所示：</p><p><img src="https://raw.githubusercontent.com/Mr-Yuki-six/blog-img/main/%E9%AB%98%E7%BA%A7%E9%93%BE%E6%8E%A5.png" alt="高级链接"></p><h2 id="八-Markdown-图片"><a href="#八-Markdown-图片" class="headerlink" title="八.Markdown 图片"></a>八.Markdown 图片</h2><p>Markdown 图片语法格式如下：</p><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs scss">!<span class="hljs-selector-attr">[alt 属性文本]</span>(图片地址)<br><br>!<span class="hljs-selector-attr">[alt 属性文本]</span>(图片地址 &quot;可选标题&quot;)<br></code></pre></td></tr></table></figure><ul><li>开头一个感叹号 !</li><li>接着一个方括号，里面放上图片的替代文字</li><li>接着一个普通括号，里面放上图片的网址，最后还可以用引号包住并加上选择性的 ‘title’ 属性的文字。</li></ul><p>例如：</p><figure class="highlight llvm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs llvm">![标题](https://raw.githubusercontent.com/Mr-Yuki-six/blog-img/main/<span class="hljs-variable">%E4</span><span class="hljs-variable">%BD</span><span class="hljs-variable">%BF</span><span class="hljs-variable">%E7</span><span class="hljs-variable">%94</span><span class="hljs-variable">%A8</span><span class="hljs-variable">%20</span>)<br><br>![标题<span class="hljs-number">2</span>](https://raw.githubusercontent.com/Mr-Yuki-six/blog-img/main/<span class="hljs-variable">%E5</span><span class="hljs-variable">%88</span><span class="hljs-variable">%86</span><span class="hljs-variable">%E9</span><span class="hljs-variable">%9</span>A<span class="hljs-variable">%94</span><span class="hljs-variable">%E7</span><span class="hljs-variable">%BA</span><span class="hljs-variable">%BF.png</span> <span class="hljs-string">&quot;tittle&quot;</span>)<br></code></pre></td></tr></table></figure><p>显示效果如下所示：</p><p>Markdown 还没有办法指定图片的高度与宽度，如果你需要的话，你可以使用普通的 <img> 标签。例如：</p><figure class="highlight perl"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs perl">&lt;img src=<span class="hljs-string">&quot;https://raw.githubusercontent.com/Mr-Yuki-six/blog-img/main/%E9%AB%98%E7%BA%A7%E9%93%BE%E6%8E%A5.png&quot;</span> width=<span class="hljs-string">&quot;50%&quot;&gt;</span><br></code></pre></td></tr></table></figure><p>显示效果如下所示：</p><p><img src="https://raw.githubusercontent.com/Mr-Yuki-six/blog-img/main/%E7%94%A8img%E8%AE%BE%E7%BD%AE%E9%AB%98%E5%BA%A6%E4%B8%8E%E5%AE%BD%E5%BA%A6.png" alt="用img设置高度与宽度"></p><h2 id="九-Markdown-表格"><a href="#九-Markdown-表格" class="headerlink" title="九.Markdown 表格"></a>九.Markdown 表格</h2><p>Markdown 制作表格使用 <strong>|</strong> 来分隔不同的单元格，使用 <strong>-</strong> 来分隔表头和其他行。</p><p>语法格式如下：</p><figure class="highlight gherkin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs gherkin">|<span class="hljs-string">  表头   </span>|<span class="hljs-string"> 表头  </span>|<br>|<span class="hljs-string">  ----  </span>|<span class="hljs-string"> ----  </span>|<br>|<span class="hljs-string"> 单元格  </span>|<span class="hljs-string"> 单元格 </span>|<br>|<span class="hljs-string"> 单元格  </span>|<span class="hljs-string"> 单元格 </span>|<br></code></pre></td></tr></table></figure><p>显示效果如下所示：</p><p><img src="https://raw.githubusercontent.com/Mr-Yuki-six/blog-img/main/%E8%A1%A8%E6%A0%BC.png" alt="表格"></p><p><strong>我们可以设置表格的对齐方式：</strong></p><ul><li><strong>-:</strong> 设置内容和标题栏居右对齐。</li><li><strong>:-</strong> 设置内容和标题栏居左对齐。</li><li><strong>:-:</strong> 设置内容和标题栏居中对齐。</li></ul><p>实例如下：</p><figure class="highlight gherkin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs gherkin">|<span class="hljs-string"> 左对齐 </span>|<span class="hljs-string"> 右对齐 </span>|<span class="hljs-string"> 居中对齐 </span>|<br>|<span class="hljs-string"> :-----</span>|<span class="hljs-string"> ----: </span>|<span class="hljs-string"> :----: </span>|<br>|<span class="hljs-string"> 单元格 </span>|<span class="hljs-string"> 单元格 </span>|<span class="hljs-string"> 单元格 </span>|<br>|<span class="hljs-string"> 单元格 </span>|<span class="hljs-string"> 单元格 </span>|<span class="hljs-string"> 单元格 </span>|<br></code></pre></td></tr></table></figure><p>显示效果如下所示：</p><p><img src="https://raw.githubusercontent.com/Mr-Yuki-six/blog-img/main/%E8%A1%A8%E6%A0%BC%E5%AF%B9%E9%BD%90.png" alt="表格对齐"></p><h2 id="十-Markdown-高级技巧"><a href="#十-Markdown-高级技巧" class="headerlink" title="十.Markdown 高级技巧"></a>十.Markdown 高级技巧</h2><h3 id="支持的-HTML-元素"><a href="#支持的-HTML-元素" class="headerlink" title="支持的 HTML 元素"></a>支持的 HTML 元素</h3><p>不在 Markdown 涵盖范围之内的标签，都可以直接在文档里面用 HTML 撰写。</p><p>目前支持的 HTML 元素有：<code>&lt;kbd&gt; &lt;b&gt; &lt;i&gt; &lt;em&gt; &lt;sup&gt; &lt;sub&gt; &lt;br&gt;</code>等 ，如：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs css">使用 &lt;<span class="hljs-selector-tag">kbd</span>&gt;Ctrl&lt;/<span class="hljs-selector-tag">kbd</span>&gt;+&lt;<span class="hljs-selector-tag">kbd</span>&gt;Alt&lt;/<span class="hljs-selector-tag">kbd</span>&gt;+&lt;<span class="hljs-selector-tag">kbd</span>&gt;<span class="hljs-selector-tag">Del</span>&lt;/<span class="hljs-selector-tag">kbd</span>&gt; 重启电脑<br></code></pre></td></tr></table></figure><p>显示效果如下所示：</p><p><img src="https://raw.githubusercontent.com/Mr-Yuki-six/blog-img/main/HTML%E5%85%83%E7%B4%A0.png" alt="HTML元素"></p><p>Markdown 使用了很多特殊符号来表示特定的意义，如果需要显示特定的符号则需要使用转义字符，Markdown 使用反斜杠转义特殊字符：</p><figure class="highlight asciidoc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs asciidoc"><span class="hljs-strong">**文本加粗**</span> <br>\*\* 正常显示星号 \*\*<br></code></pre></td></tr></table></figure><p>显示效果如下所示：</p><p><img src="https://raw.githubusercontent.com/Mr-Yuki-six/blog-img/main/%E8%BD%AC%E4%B9%89.png" alt="转义"></p><p>Markdown 支持以下这些符号前面加上反斜杠来帮助插入普通的符号：</p><figure class="highlight asciidoc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs asciidoc">\   反斜线<br>`   反引号<br><span class="hljs-bullet">*   </span>星号<br>_   下划线<br>&#123;&#125;  花括号<br>[]  方括号<br>()  小括号<br>#   井字号<br>+   加号<br><span class="hljs-bullet">-   </span>减号<br><span class="hljs-bullet">.   </span>英文句点<br>!   感叹号<br></code></pre></td></tr></table></figure><hr><p>文献参考<br><a href="https://www.runoob.com/markdown/md-tutorial.html">https://www.runoob.com/markdown/md-tutorial.html</a></p>]]></content>
    
    
    
    <tags>
      
      <tag>笔记</tag>
      
      <tag>markdown</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
